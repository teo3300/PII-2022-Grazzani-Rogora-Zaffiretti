-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity crypto_aead_encrypt is
port (
    ap_local_block : OUT STD_LOGIC;
    ap_local_deadlock : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    c_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    c_ce0 : OUT STD_LOGIC;
    c_we0 : OUT STD_LOGIC;
    c_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    clen : OUT STD_LOGIC_VECTOR (63 downto 0);
    clen_ap_vld : OUT STD_LOGIC;
    m_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    m_ce0 : OUT STD_LOGIC;
    m_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    mlen : IN STD_LOGIC_VECTOR (63 downto 0);
    ad_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    ad_ce0 : OUT STD_LOGIC;
    ad_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    adlen : IN STD_LOGIC_VECTOR (63 downto 0);
    nsec : IN STD_LOGIC_VECTOR (7 downto 0);
    npub_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    npub_ce0 : OUT STD_LOGIC;
    npub_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    k_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    k_ce0 : OUT STD_LOGIC;
    k_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of crypto_aead_encrypt is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "crypto_aead_encrypt_crypto_aead_encrypt,hls_ip_2021_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbv484-2,HLS_INPUT_CLOCK=30.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=22.625833,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=4539,HLS_SYN_LUT=15586,HLS_VERSION=2021_2}";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (20 downto 0) := "000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (20 downto 0) := "000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (20 downto 0) := "000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (20 downto 0) := "000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (20 downto 0) := "000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (20 downto 0) := "000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (20 downto 0) := "000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (20 downto 0) := "000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (20 downto 0) := "000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (20 downto 0) := "001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (20 downto 0) := "010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (20 downto 0) := "100000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv64_80400C0600000000 : STD_LOGIC_VECTOR (63 downto 0) := "1000000001000000000011000000011000000000000000000000000000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv8_F0 : STD_LOGIC_VECTOR (7 downto 0) := "11110000";
    constant ap_const_lv8_C3 : STD_LOGIC_VECTOR (7 downto 0) := "11000011";
    constant ap_const_lv8_87 : STD_LOGIC_VECTOR (7 downto 0) := "10000111";
    constant ap_const_lv8_96 : STD_LOGIC_VECTOR (7 downto 0) := "10010110";
    constant ap_const_lv8_78 : STD_LOGIC_VECTOR (7 downto 0) := "01111000";
    constant ap_const_lv8_E1 : STD_LOGIC_VECTOR (7 downto 0) := "11100001";
    constant ap_const_lv8_B4 : STD_LOGIC_VECTOR (7 downto 0) := "10110100";
    constant ap_const_lv8_69 : STD_LOGIC_VECTOR (7 downto 0) := "01101001";
    constant ap_const_lv8_D2 : STD_LOGIC_VECTOR (7 downto 0) := "11010010";
    constant ap_const_lv8_A5 : STD_LOGIC_VECTOR (7 downto 0) := "10100101";
    constant ap_const_lv8_5A : STD_LOGIC_VECTOR (7 downto 0) := "01011010";
    constant ap_const_lv8_4B : STD_LOGIC_VECTOR (7 downto 0) := "01001011";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_10 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv61_0 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_FFFFFFFFFFFFFFF8 : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv58_0 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_38 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111000";
    constant ap_const_lv64_80 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv6_38 : STD_LOGIC_VECTOR (5 downto 0) := "111000";
    constant ap_const_boolean_0 : BOOLEAN := false;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal reg_695 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal reg_700 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_705 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_710 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_715 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_720 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal reg_727 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_734 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_741 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal icmp_ln25_fu_1166_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_746 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_751 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_756 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_761 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_LOADBYTES_1_fu_432_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal K0_reg_1341 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_LOADBYTES_1_fu_440_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal N0_reg_1349 : STD_LOGIC_VECTOR (63 downto 0);
    signal K1_reg_1354 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_0_6_reg_1361 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal s_1_7_reg_1366 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_7_reg_1371 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_7_reg_1376 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_7_reg_1381 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_fu_766_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal empty_12_fu_770_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal empty_12_reg_1405 : STD_LOGIC_VECTOR (60 downto 0);
    signal s_3_14_fu_789_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_13_fu_794_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln39_fu_799_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_reg_1422 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln41_fu_815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln41_reg_1426 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal trunc_ln41_1_fu_893_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln41_1_reg_1507 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln41_1_fu_884_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln49_fu_950_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln49_reg_1512 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_0_55_reg_1517 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal s_1_51_reg_1522 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_51_reg_1527 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_53_reg_1532 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_54_reg_1537 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_59_fu_1019_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal icmp_ln59_fu_1034_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln59_reg_1547 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal trunc_ln59_1_fu_1108_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln59_1_reg_1631 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln59_1_fu_1102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln69_fu_1143_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln69_reg_1636 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln69_1_fu_1147_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln69_1_reg_1642 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln69_2_fu_1152_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln69_2_reg_1647 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_0_61_fu_1157_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_0_61_reg_1653 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal add_ln25_1_fu_1172_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal xor_ln69_fu_1271_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln69_reg_1667 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_66_reg_1672 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_68_reg_1677 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_fu_1325_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_reg_1682 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal s_4_73_fu_1331_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_73_reg_1687 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln25_4_fu_1336_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln25_4_reg_1692 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_LOADBYTES_1_fu_432_ap_start : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_432_ap_done : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_432_ap_idle : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_432_ap_ready : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_432_k_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_LOADBYTES_1_fu_432_k_ce0 : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_432_bytes : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_LOADBYTES_1_fu_440_ap_start : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_440_ap_done : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_440_ap_idle : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_440_ap_ready : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_440_k_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_LOADBYTES_1_fu_440_k_ce0 : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_440_bytes : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_ROUND_fu_450_ap_ready : STD_LOGIC;
    signal grp_ROUND_fu_450_s_0_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_450_s_1_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_450_s_2_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_450_s_3_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_450_s_4_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_450_C : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ROUND_fu_450_ap_return_0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_450_ap_return_1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_450_ap_return_2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_450_ap_return_3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_450_ap_return_4 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_464_ap_ready : STD_LOGIC;
    signal grp_ROUND_fu_464_C : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ROUND_fu_464_ap_return_0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_464_ap_return_1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_464_ap_return_2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_464_ap_return_3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_464_ap_return_4 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_475_ap_ready : STD_LOGIC;
    signal grp_ROUND_fu_475_C : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ROUND_fu_475_ap_return_0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_475_ap_return_1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_475_ap_return_2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_475_ap_return_3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_475_ap_return_4 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_489_ap_ready : STD_LOGIC;
    signal grp_ROUND_fu_489_C : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ROUND_fu_489_ap_return_0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_489_ap_return_1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_489_ap_return_2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_489_ap_return_3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_489_ap_return_4 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_504_ap_ready : STD_LOGIC;
    signal grp_ROUND_fu_504_C : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ROUND_fu_504_ap_return_0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_504_ap_return_1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_504_ap_return_2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_504_ap_return_3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_504_ap_return_4 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_LOADBYTES_2_fu_528_ap_start : STD_LOGIC;
    signal grp_LOADBYTES_2_fu_528_ap_done : STD_LOGIC;
    signal grp_LOADBYTES_2_fu_528_ap_idle : STD_LOGIC;
    signal grp_LOADBYTES_2_fu_528_ap_ready : STD_LOGIC;
    signal grp_LOADBYTES_2_fu_528_ad_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_LOADBYTES_2_fu_528_ad_ce0 : STD_LOGIC;
    signal grp_LOADBYTES_2_fu_528_ad_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_LOADBYTES_2_fu_528_bytes : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_LOADBYTES_2_fu_528_n : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_LOADBYTES_2_fu_528_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539_ap_start : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539_ap_done : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539_ap_idle : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539_ap_ready : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539_c_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539_c_ce0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539_c_we0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539_c_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549_ap_start : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549_ap_done : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549_ap_idle : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549_ap_ready : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549_c_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549_c_ce0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549_c_we0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549_c_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_ap_start : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_ap_done : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_ap_idle : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_ap_ready : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_c_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_c_ce0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_c_we0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_c_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln_fu_929_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal ad_addr_0_lcssa_idx_reg_234 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln41_1_fu_941_p3 : STD_LOGIC_VECTOR (60 downto 0);
    signal ap_phi_mux_adlen_addr_0_lcssa_phi_fu_249_p4 : STD_LOGIC_VECTOR (60 downto 0);
    signal adlen_addr_0_lcssa_reg_246 : STD_LOGIC_VECTOR (60 downto 0);
    signal s_4_1_13_reg_256 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_1_14_reg_265 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_1_15_reg_274 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_1_1_16_reg_283 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_0_1_17_reg_292 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_s_4_2_18_phi_fu_304_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_2_18_reg_301 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_s_3_2_19_phi_fu_313_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_2_19_reg_310 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_s_2_2_20_phi_fu_323_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_2_20_reg_320 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_s_1_2_21_phi_fu_333_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_1_2_21_reg_330 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_s_0_2_22_phi_fu_343_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_0_2_22_reg_340 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln59_1_fu_1134_p3 : STD_LOGIC_VECTOR (60 downto 0);
    signal ap_phi_mux_mlen_addr_0_lcssa_phi_fu_353_p4 : STD_LOGIC_VECTOR (60 downto 0);
    signal mlen_addr_0_lcssa_reg_350 : STD_LOGIC_VECTOR (60 downto 0);
    signal and_ln1_fu_1122_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_m_addr_0_lcssa_idx_phi_fu_364_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal m_addr_0_lcssa_idx_reg_360 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_reg_372 : STD_LOGIC_VECTOR (3 downto 0);
    signal s_4_4_24_reg_383 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_4_25_reg_392 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_4_26_reg_402 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_1_4_27_reg_412 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_0_4_28_reg_422 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_LOADBYTES_1_fu_432_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_LOADBYTES_1_fu_440_ap_start_reg : STD_LOGIC := '0';
    signal s_0_46_fu_955_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal s_0_53_fu_1012_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal s_0_62_fu_1298_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_1_57_fu_1305_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_57_fu_1311_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_LOADBYTES_2_fu_528_ap_start_reg : STD_LOGIC := '0';
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539_ap_start_reg : STD_LOGIC := '0';
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal zext_ln25_3_fu_1220_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ad_assign_fu_146 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln45_fu_898_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal adlen_assign_fu_150 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln46_fu_904_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_0_45_fu_154 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_1_43_fu_158 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_43_fu_162 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_45_fu_166 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_46_fu_170 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_assign_fu_174 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln65_fu_1225_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mlen_assign_fu_178 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln66_fu_1231_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_0_60_fu_182 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_1_56_fu_186 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_56_fu_190 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_58_fu_194 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_60_fu_198 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln25_3_fu_1205_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_fu_805_p4 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_7_fu_874_p4 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_4_fu_920_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln41_fu_938_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln_fu_986_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln50_fu_994_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln50_fu_1000_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln50_fu_1006_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_1025_p4 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_9_fu_1092_p4 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_6_fu_1113_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln59_fu_1131_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln25_fu_1178_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln1_fu_1182_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln25_fu_1190_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln25_2_fu_1196_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln25_fu_1200_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln25_fu_1162_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln59_2_fu_1210_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln25_fu_1214_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln2_fu_1278_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln71_fu_1286_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln71_fu_1292_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_block_state4_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component crypto_aead_encrypt_LOADBYTES_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        k_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        k_ce0 : OUT STD_LOGIC;
        k_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        bytes : IN STD_LOGIC_VECTOR (3 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component crypto_aead_encrypt_ROUND IS
    port (
        ap_ready : OUT STD_LOGIC;
        s_0_read : IN STD_LOGIC_VECTOR (63 downto 0);
        s_1_read : IN STD_LOGIC_VECTOR (63 downto 0);
        s_2_read : IN STD_LOGIC_VECTOR (63 downto 0);
        s_3_read : IN STD_LOGIC_VECTOR (63 downto 0);
        s_4_read : IN STD_LOGIC_VECTOR (63 downto 0);
        C : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component crypto_aead_encrypt_LOADBYTES_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ad_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        ad_ce0 : OUT STD_LOGIC;
        ad_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        bytes : IN STD_LOGIC_VECTOR (4 downto 0);
        n : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component crypto_aead_encrypt_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        n_assign : IN STD_LOGIC_VECTOR (31 downto 0);
        xor_ln69 : IN STD_LOGIC_VECTOR (63 downto 0);
        m_addr_0_lcssa_idx : IN STD_LOGIC_VECTOR (5 downto 0);
        c_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        c_ce0 : OUT STD_LOGIC;
        c_we0 : OUT STD_LOGIC;
        c_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component crypto_aead_encrypt_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_3 : IN STD_LOGIC_VECTOR (63 downto 0);
        trunc_ln3 : IN STD_LOGIC_VECTOR (5 downto 0);
        m_addr_0_lcssa_idx : IN STD_LOGIC_VECTOR (5 downto 0);
        c_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        c_ce0 : OUT STD_LOGIC;
        c_we0 : OUT STD_LOGIC;
        c_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component crypto_aead_encrypt_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_4_45 : IN STD_LOGIC_VECTOR (63 downto 0);
        add_ln25_7 : IN STD_LOGIC_VECTOR (5 downto 0);
        c_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        c_ce0 : OUT STD_LOGIC;
        c_we0 : OUT STD_LOGIC;
        c_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    grp_LOADBYTES_1_fu_432 : component crypto_aead_encrypt_LOADBYTES_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_LOADBYTES_1_fu_432_ap_start,
        ap_done => grp_LOADBYTES_1_fu_432_ap_done,
        ap_idle => grp_LOADBYTES_1_fu_432_ap_idle,
        ap_ready => grp_LOADBYTES_1_fu_432_ap_ready,
        k_address0 => grp_LOADBYTES_1_fu_432_k_address0,
        k_ce0 => grp_LOADBYTES_1_fu_432_k_ce0,
        k_q0 => k_q0,
        bytes => grp_LOADBYTES_1_fu_432_bytes,
        ap_return => grp_LOADBYTES_1_fu_432_ap_return);

    grp_LOADBYTES_1_fu_440 : component crypto_aead_encrypt_LOADBYTES_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_LOADBYTES_1_fu_440_ap_start,
        ap_done => grp_LOADBYTES_1_fu_440_ap_done,
        ap_idle => grp_LOADBYTES_1_fu_440_ap_idle,
        ap_ready => grp_LOADBYTES_1_fu_440_ap_ready,
        k_address0 => grp_LOADBYTES_1_fu_440_k_address0,
        k_ce0 => grp_LOADBYTES_1_fu_440_k_ce0,
        k_q0 => npub_q0,
        bytes => grp_LOADBYTES_1_fu_440_bytes,
        ap_return => grp_LOADBYTES_1_fu_440_ap_return);

    grp_ROUND_fu_450 : component crypto_aead_encrypt_ROUND
    port map (
        ap_ready => grp_ROUND_fu_450_ap_ready,
        s_0_read => grp_ROUND_fu_450_s_0_read,
        s_1_read => grp_ROUND_fu_450_s_1_read,
        s_2_read => grp_ROUND_fu_450_s_2_read,
        s_3_read => grp_ROUND_fu_450_s_3_read,
        s_4_read => grp_ROUND_fu_450_s_4_read,
        C => grp_ROUND_fu_450_C,
        ap_return_0 => grp_ROUND_fu_450_ap_return_0,
        ap_return_1 => grp_ROUND_fu_450_ap_return_1,
        ap_return_2 => grp_ROUND_fu_450_ap_return_2,
        ap_return_3 => grp_ROUND_fu_450_ap_return_3,
        ap_return_4 => grp_ROUND_fu_450_ap_return_4);

    grp_ROUND_fu_464 : component crypto_aead_encrypt_ROUND
    port map (
        ap_ready => grp_ROUND_fu_464_ap_ready,
        s_0_read => grp_ROUND_fu_450_ap_return_0,
        s_1_read => grp_ROUND_fu_450_ap_return_1,
        s_2_read => grp_ROUND_fu_450_ap_return_2,
        s_3_read => grp_ROUND_fu_450_ap_return_3,
        s_4_read => grp_ROUND_fu_450_ap_return_4,
        C => grp_ROUND_fu_464_C,
        ap_return_0 => grp_ROUND_fu_464_ap_return_0,
        ap_return_1 => grp_ROUND_fu_464_ap_return_1,
        ap_return_2 => grp_ROUND_fu_464_ap_return_2,
        ap_return_3 => grp_ROUND_fu_464_ap_return_3,
        ap_return_4 => grp_ROUND_fu_464_ap_return_4);

    grp_ROUND_fu_475 : component crypto_aead_encrypt_ROUND
    port map (
        ap_ready => grp_ROUND_fu_475_ap_ready,
        s_0_read => grp_ROUND_fu_464_ap_return_0,
        s_1_read => grp_ROUND_fu_464_ap_return_1,
        s_2_read => grp_ROUND_fu_464_ap_return_2,
        s_3_read => grp_ROUND_fu_464_ap_return_3,
        s_4_read => grp_ROUND_fu_464_ap_return_4,
        C => grp_ROUND_fu_475_C,
        ap_return_0 => grp_ROUND_fu_475_ap_return_0,
        ap_return_1 => grp_ROUND_fu_475_ap_return_1,
        ap_return_2 => grp_ROUND_fu_475_ap_return_2,
        ap_return_3 => grp_ROUND_fu_475_ap_return_3,
        ap_return_4 => grp_ROUND_fu_475_ap_return_4);

    grp_ROUND_fu_489 : component crypto_aead_encrypt_ROUND
    port map (
        ap_ready => grp_ROUND_fu_489_ap_ready,
        s_0_read => grp_ROUND_fu_475_ap_return_0,
        s_1_read => grp_ROUND_fu_475_ap_return_1,
        s_2_read => grp_ROUND_fu_475_ap_return_2,
        s_3_read => grp_ROUND_fu_475_ap_return_3,
        s_4_read => grp_ROUND_fu_475_ap_return_4,
        C => grp_ROUND_fu_489_C,
        ap_return_0 => grp_ROUND_fu_489_ap_return_0,
        ap_return_1 => grp_ROUND_fu_489_ap_return_1,
        ap_return_2 => grp_ROUND_fu_489_ap_return_2,
        ap_return_3 => grp_ROUND_fu_489_ap_return_3,
        ap_return_4 => grp_ROUND_fu_489_ap_return_4);

    grp_ROUND_fu_504 : component crypto_aead_encrypt_ROUND
    port map (
        ap_ready => grp_ROUND_fu_504_ap_ready,
        s_0_read => grp_ROUND_fu_489_ap_return_0,
        s_1_read => grp_ROUND_fu_489_ap_return_1,
        s_2_read => grp_ROUND_fu_489_ap_return_2,
        s_3_read => grp_ROUND_fu_489_ap_return_3,
        s_4_read => grp_ROUND_fu_489_ap_return_4,
        C => grp_ROUND_fu_504_C,
        ap_return_0 => grp_ROUND_fu_504_ap_return_0,
        ap_return_1 => grp_ROUND_fu_504_ap_return_1,
        ap_return_2 => grp_ROUND_fu_504_ap_return_2,
        ap_return_3 => grp_ROUND_fu_504_ap_return_3,
        ap_return_4 => grp_ROUND_fu_504_ap_return_4);

    grp_LOADBYTES_2_fu_528 : component crypto_aead_encrypt_LOADBYTES_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_LOADBYTES_2_fu_528_ap_start,
        ap_done => grp_LOADBYTES_2_fu_528_ap_done,
        ap_idle => grp_LOADBYTES_2_fu_528_ap_idle,
        ap_ready => grp_LOADBYTES_2_fu_528_ap_ready,
        ad_address0 => grp_LOADBYTES_2_fu_528_ad_address0,
        ad_ce0 => grp_LOADBYTES_2_fu_528_ad_ce0,
        ad_q0 => grp_LOADBYTES_2_fu_528_ad_q0,
        bytes => grp_LOADBYTES_2_fu_528_bytes,
        n => grp_LOADBYTES_2_fu_528_n,
        ap_return => grp_LOADBYTES_2_fu_528_ap_return);

    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539 : component crypto_aead_encrypt_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539_ap_start,
        ap_done => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539_ap_done,
        ap_idle => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539_ap_idle,
        ap_ready => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539_ap_ready,
        n_assign => trunc_ln69_2_reg_1647,
        xor_ln69 => xor_ln69_reg_1667,
        m_addr_0_lcssa_idx => m_addr_0_lcssa_idx_reg_360,
        c_address0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539_c_address0,
        c_ce0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539_c_ce0,
        c_we0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539_c_we0,
        c_d0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539_c_d0);

    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549 : component crypto_aead_encrypt_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549_ap_start,
        ap_done => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549_ap_done,
        ap_idle => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549_ap_idle,
        ap_ready => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549_ap_ready,
        s_3 => s_3_reg_1682,
        trunc_ln3 => trunc_ln69_reg_1636,
        m_addr_0_lcssa_idx => m_addr_0_lcssa_idx_reg_360,
        c_address0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549_c_address0,
        c_ce0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549_c_ce0,
        c_we0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549_c_we0,
        c_d0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549_c_d0);

    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559 : component crypto_aead_encrypt_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_ap_start,
        ap_done => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_ap_done,
        ap_idle => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_ap_idle,
        ap_ready => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_ap_ready,
        s_4_45 => s_4_73_reg_1687,
        add_ln25_7 => add_ln25_4_reg_1692,
        c_address0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_c_address0,
        c_ce0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_c_ce0,
        c_we0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_c_we0,
        c_d0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_c_d0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_LOADBYTES_1_fu_432_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_LOADBYTES_1_fu_432_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
                    grp_LOADBYTES_1_fu_432_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_LOADBYTES_1_fu_432_ap_ready = ap_const_logic_1)) then 
                    grp_LOADBYTES_1_fu_432_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_LOADBYTES_1_fu_440_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_LOADBYTES_1_fu_440_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
                    grp_LOADBYTES_1_fu_440_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_LOADBYTES_1_fu_440_ap_ready = ap_const_logic_1)) then 
                    grp_LOADBYTES_1_fu_440_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_LOADBYTES_2_fu_528_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_LOADBYTES_2_fu_528_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_state12) and ((icmp_ln59_1_fu_1102_p2 = ap_const_lv1_1) or (icmp_ln59_reg_1547 = ap_const_lv1_1))) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln59_1_fu_1102_p2 = ap_const_lv1_0) and (icmp_ln59_reg_1547 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and ((icmp_ln41_1_fu_884_p2 = ap_const_lv1_1) or (icmp_ln41_reg_1426 = ap_const_lv1_1))) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln41_1_fu_884_p2 = ap_const_lv1_0) and (icmp_ln41_reg_1426 = ap_const_lv1_0)))) then 
                    grp_LOADBYTES_2_fu_528_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_LOADBYTES_2_fu_528_ap_ready = ap_const_logic_1)) then 
                    grp_LOADBYTES_2_fu_528_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549_ap_ready = ap_const_logic_1)) then 
                    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_ap_ready = ap_const_logic_1)) then 
                    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_LOADBYTES_2_fu_528_ap_done = ap_const_logic_1))) then 
                    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539_ap_ready = ap_const_logic_1)) then 
                    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ad_addr_0_lcssa_idx_reg_234_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln41_fu_815_p2 = ap_const_lv1_1) and (icmp_ln39_fu_799_p2 = ap_const_lv1_0))) then 
                ad_addr_0_lcssa_idx_reg_234(3) <= '0';
                ad_addr_0_lcssa_idx_reg_234(4) <= '0';
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln41_1_fu_884_p2 = ap_const_lv1_1) and (icmp_ln41_reg_1426 = ap_const_lv1_0))) then 
                                ad_addr_0_lcssa_idx_reg_234(4 downto 3) <= and_ln_fu_929_p3(4 downto 3);
            end if; 
        end if;
    end process;

    ad_assign_fu_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln41_fu_815_p2 = ap_const_lv1_0) and (icmp_ln39_fu_799_p2 = ap_const_lv1_0))) then 
                ad_assign_fu_146 <= ap_const_lv64_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln41_1_fu_884_p2 = ap_const_lv1_0) and (icmp_ln41_reg_1426 = ap_const_lv1_0))) then 
                ad_assign_fu_146 <= add_ln45_fu_898_p2;
            end if; 
        end if;
    end process;

    adlen_addr_0_lcssa_reg_246_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln41_fu_815_p2 = ap_const_lv1_1) and (icmp_ln39_fu_799_p2 = ap_const_lv1_0))) then 
                adlen_addr_0_lcssa_reg_246 <= empty_fu_766_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln41_1_fu_884_p2 = ap_const_lv1_1) and (icmp_ln41_reg_1426 = ap_const_lv1_0))) then 
                adlen_addr_0_lcssa_reg_246 <= and_ln41_1_fu_941_p3;
            end if; 
        end if;
    end process;

    adlen_assign_fu_150_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln41_fu_815_p2 = ap_const_lv1_0) and (icmp_ln39_fu_799_p2 = ap_const_lv1_0))) then 
                adlen_assign_fu_150 <= adlen;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln41_1_fu_884_p2 = ap_const_lv1_0) and (icmp_ln41_reg_1426 = ap_const_lv1_0))) then 
                adlen_assign_fu_150 <= add_ln46_fu_904_p2;
            end if; 
        end if;
    end process;

    i_reg_372_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (grp_LOADBYTES_2_fu_528_ap_done = ap_const_logic_1))) then 
                i_reg_372 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln25_fu_1166_p2 = ap_const_lv1_0))) then 
                i_reg_372 <= add_ln25_1_fu_1172_p2;
            end if; 
        end if;
    end process;

    m_addr_0_lcssa_idx_reg_360_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln59_fu_1034_p2 = ap_const_lv1_1))) then 
                m_addr_0_lcssa_idx_reg_360(3) <= '0';
                m_addr_0_lcssa_idx_reg_360(4) <= '0';
                m_addr_0_lcssa_idx_reg_360(5) <= '0';
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln59_1_fu_1102_p2 = ap_const_lv1_1) and (icmp_ln59_reg_1547 = ap_const_lv1_0))) then 
                                m_addr_0_lcssa_idx_reg_360(5 downto 3) <= and_ln1_fu_1122_p3(5 downto 3);
            end if; 
        end if;
    end process;

    m_assign_fu_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln59_fu_1034_p2 = ap_const_lv1_0))) then 
                m_assign_fu_174 <= ap_const_lv64_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln25_fu_1166_p2 = ap_const_lv1_1))) then 
                m_assign_fu_174 <= add_ln65_fu_1225_p2;
            end if; 
        end if;
    end process;

    mlen_addr_0_lcssa_reg_350_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln59_fu_1034_p2 = ap_const_lv1_1))) then 
                mlen_addr_0_lcssa_reg_350 <= empty_12_reg_1405;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln59_1_fu_1102_p2 = ap_const_lv1_1) and (icmp_ln59_reg_1547 = ap_const_lv1_0))) then 
                mlen_addr_0_lcssa_reg_350 <= and_ln59_1_fu_1134_p3;
            end if; 
        end if;
    end process;

    mlen_assign_fu_178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln59_fu_1034_p2 = ap_const_lv1_0))) then 
                mlen_assign_fu_178 <= mlen;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln25_fu_1166_p2 = ap_const_lv1_1))) then 
                mlen_assign_fu_178 <= add_ln66_fu_1231_p2;
            end if; 
        end if;
    end process;

    s_0_1_17_reg_292_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln41_fu_815_p2 = ap_const_lv1_1) and (icmp_ln39_fu_799_p2 = ap_const_lv1_0))) then 
                s_0_1_17_reg_292 <= grp_ROUND_fu_504_ap_return_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln41_1_fu_884_p2 = ap_const_lv1_1) and (icmp_ln41_reg_1426 = ap_const_lv1_0))) then 
                s_0_1_17_reg_292 <= s_0_45_fu_154;
            end if; 
        end if;
    end process;

    s_0_2_22_reg_340_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln39_fu_799_p2 = ap_const_lv1_1))) then 
                s_0_2_22_reg_340 <= grp_ROUND_fu_504_ap_return_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln39_reg_1422 = ap_const_lv1_0))) then 
                s_0_2_22_reg_340 <= grp_ROUND_fu_489_ap_return_0;
            end if; 
        end if;
    end process;

    s_0_4_28_reg_422_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln59_fu_1034_p2 = ap_const_lv1_1))) then 
                s_0_4_28_reg_422 <= ap_phi_mux_s_0_2_22_phi_fu_343_p4;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln59_1_fu_1102_p2 = ap_const_lv1_1) and (icmp_ln59_reg_1547 = ap_const_lv1_0))) then 
                s_0_4_28_reg_422 <= s_0_60_fu_182;
            end if; 
        end if;
    end process;

    s_0_60_fu_182_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln59_fu_1034_p2 = ap_const_lv1_0))) then 
                s_0_60_fu_182 <= ap_phi_mux_s_0_2_22_phi_fu_343_p4;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                s_0_60_fu_182 <= grp_ROUND_fu_504_ap_return_0;
            end if; 
        end if;
    end process;

    s_1_1_16_reg_283_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln41_fu_815_p2 = ap_const_lv1_1) and (icmp_ln39_fu_799_p2 = ap_const_lv1_0))) then 
                s_1_1_16_reg_283 <= grp_ROUND_fu_504_ap_return_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln41_1_fu_884_p2 = ap_const_lv1_1) and (icmp_ln41_reg_1426 = ap_const_lv1_0))) then 
                s_1_1_16_reg_283 <= s_1_43_fu_158;
            end if; 
        end if;
    end process;

    s_1_2_21_reg_330_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln39_fu_799_p2 = ap_const_lv1_1))) then 
                s_1_2_21_reg_330 <= grp_ROUND_fu_504_ap_return_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln39_reg_1422 = ap_const_lv1_0))) then 
                s_1_2_21_reg_330 <= grp_ROUND_fu_489_ap_return_1;
            end if; 
        end if;
    end process;

    s_1_4_27_reg_412_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln59_fu_1034_p2 = ap_const_lv1_1))) then 
                s_1_4_27_reg_412 <= ap_phi_mux_s_1_2_21_phi_fu_333_p4;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln59_1_fu_1102_p2 = ap_const_lv1_1) and (icmp_ln59_reg_1547 = ap_const_lv1_0))) then 
                s_1_4_27_reg_412 <= s_1_56_fu_186;
            end if; 
        end if;
    end process;

    s_1_56_fu_186_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln59_fu_1034_p2 = ap_const_lv1_0))) then 
                s_1_56_fu_186 <= ap_phi_mux_s_1_2_21_phi_fu_333_p4;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                s_1_56_fu_186 <= grp_ROUND_fu_504_ap_return_1;
            end if; 
        end if;
    end process;

    s_2_1_15_reg_274_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln41_fu_815_p2 = ap_const_lv1_1) and (icmp_ln39_fu_799_p2 = ap_const_lv1_0))) then 
                s_2_1_15_reg_274 <= grp_ROUND_fu_504_ap_return_2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln41_1_fu_884_p2 = ap_const_lv1_1) and (icmp_ln41_reg_1426 = ap_const_lv1_0))) then 
                s_2_1_15_reg_274 <= s_2_43_fu_162;
            end if; 
        end if;
    end process;

    s_2_2_20_reg_320_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln39_fu_799_p2 = ap_const_lv1_1))) then 
                s_2_2_20_reg_320 <= grp_ROUND_fu_504_ap_return_2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln39_reg_1422 = ap_const_lv1_0))) then 
                s_2_2_20_reg_320 <= grp_ROUND_fu_489_ap_return_2;
            end if; 
        end if;
    end process;

    s_2_4_26_reg_402_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln59_fu_1034_p2 = ap_const_lv1_1))) then 
                s_2_4_26_reg_402 <= ap_phi_mux_s_2_2_20_phi_fu_323_p4;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln59_1_fu_1102_p2 = ap_const_lv1_1) and (icmp_ln59_reg_1547 = ap_const_lv1_0))) then 
                s_2_4_26_reg_402 <= s_2_56_fu_190;
            end if; 
        end if;
    end process;

    s_2_56_fu_190_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln59_fu_1034_p2 = ap_const_lv1_0))) then 
                s_2_56_fu_190 <= ap_phi_mux_s_2_2_20_phi_fu_323_p4;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                s_2_56_fu_190 <= grp_ROUND_fu_504_ap_return_2;
            end if; 
        end if;
    end process;

    s_3_1_14_reg_265_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln41_fu_815_p2 = ap_const_lv1_1) and (icmp_ln39_fu_799_p2 = ap_const_lv1_0))) then 
                s_3_1_14_reg_265 <= s_3_14_fu_789_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln41_1_fu_884_p2 = ap_const_lv1_1) and (icmp_ln41_reg_1426 = ap_const_lv1_0))) then 
                s_3_1_14_reg_265 <= s_3_45_fu_166;
            end if; 
        end if;
    end process;

    s_3_2_19_reg_310_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln39_fu_799_p2 = ap_const_lv1_1))) then 
                s_3_2_19_reg_310 <= s_3_14_fu_789_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln39_reg_1422 = ap_const_lv1_0))) then 
                s_3_2_19_reg_310 <= grp_ROUND_fu_489_ap_return_3;
            end if; 
        end if;
    end process;

    s_3_45_fu_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln41_fu_815_p2 = ap_const_lv1_0) and (icmp_ln39_fu_799_p2 = ap_const_lv1_0))) then 
                s_3_45_fu_166 <= s_3_14_fu_789_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                s_3_45_fu_166 <= grp_ROUND_fu_504_ap_return_3;
            end if; 
        end if;
    end process;

    s_3_4_25_reg_392_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln59_fu_1034_p2 = ap_const_lv1_1))) then 
                s_3_4_25_reg_392 <= ap_phi_mux_s_3_2_19_phi_fu_313_p4;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln59_1_fu_1102_p2 = ap_const_lv1_1) and (icmp_ln59_reg_1547 = ap_const_lv1_0))) then 
                s_3_4_25_reg_392 <= s_3_58_fu_194;
            end if; 
        end if;
    end process;

    s_3_58_fu_194_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln59_fu_1034_p2 = ap_const_lv1_0))) then 
                s_3_58_fu_194 <= ap_phi_mux_s_3_2_19_phi_fu_313_p4;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                s_3_58_fu_194 <= grp_ROUND_fu_504_ap_return_3;
            end if; 
        end if;
    end process;

    s_4_1_13_reg_256_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln41_fu_815_p2 = ap_const_lv1_1) and (icmp_ln39_fu_799_p2 = ap_const_lv1_0))) then 
                s_4_1_13_reg_256 <= s_4_13_fu_794_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln41_1_fu_884_p2 = ap_const_lv1_1) and (icmp_ln41_reg_1426 = ap_const_lv1_0))) then 
                s_4_1_13_reg_256 <= s_4_46_fu_170;
            end if; 
        end if;
    end process;

    s_4_2_18_reg_301_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln39_fu_799_p2 = ap_const_lv1_1))) then 
                s_4_2_18_reg_301 <= s_4_13_fu_794_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln39_reg_1422 = ap_const_lv1_0))) then 
                s_4_2_18_reg_301 <= grp_ROUND_fu_489_ap_return_4;
            end if; 
        end if;
    end process;

    s_4_46_fu_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln41_fu_815_p2 = ap_const_lv1_0) and (icmp_ln39_fu_799_p2 = ap_const_lv1_0))) then 
                s_4_46_fu_170 <= s_4_13_fu_794_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                s_4_46_fu_170 <= grp_ROUND_fu_504_ap_return_4;
            end if; 
        end if;
    end process;

    s_4_4_24_reg_383_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln59_fu_1034_p2 = ap_const_lv1_1))) then 
                s_4_4_24_reg_383 <= s_4_59_fu_1019_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln59_1_fu_1102_p2 = ap_const_lv1_1) and (icmp_ln59_reg_1547 = ap_const_lv1_0))) then 
                s_4_4_24_reg_383 <= s_4_60_fu_198;
            end if; 
        end if;
    end process;

    s_4_60_fu_198_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln59_fu_1034_p2 = ap_const_lv1_0))) then 
                s_4_60_fu_198 <= s_4_59_fu_1019_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                s_4_60_fu_198 <= grp_ROUND_fu_504_ap_return_4;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                K0_reg_1341 <= grp_LOADBYTES_1_fu_432_ap_return;
                N0_reg_1349 <= grp_LOADBYTES_1_fu_440_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                K1_reg_1354 <= grp_LOADBYTES_1_fu_432_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                add_ln25_4_reg_1692 <= add_ln25_4_fu_1336_p2;
                s_3_reg_1682 <= s_3_fu_1325_p2;
                s_4_73_reg_1687 <= s_4_73_fu_1331_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                empty_12_reg_1405 <= empty_12_fu_770_p1;
                icmp_ln39_reg_1422 <= icmp_ln39_fu_799_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln39_fu_799_p2 = ap_const_lv1_0))) then
                icmp_ln41_reg_1426 <= icmp_ln41_fu_815_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                icmp_ln59_reg_1547 <= icmp_ln59_fu_1034_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state4))) then
                reg_695 <= grp_ROUND_fu_475_ap_return_0;
                reg_700 <= grp_ROUND_fu_475_ap_return_1;
                reg_705 <= grp_ROUND_fu_475_ap_return_2;
                reg_710 <= grp_ROUND_fu_475_ap_return_3;
                reg_715 <= grp_ROUND_fu_475_ap_return_4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state6))) then
                reg_720 <= grp_ROUND_fu_504_ap_return_0;
                reg_727 <= grp_ROUND_fu_504_ap_return_1;
                reg_734 <= grp_ROUND_fu_504_ap_return_2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln25_fu_1166_p2 = ap_const_lv1_1)))) then
                reg_741 <= grp_ROUND_fu_450_ap_return_0;
                reg_746 <= grp_ROUND_fu_450_ap_return_1;
                reg_751 <= grp_ROUND_fu_450_ap_return_2;
                reg_756 <= grp_ROUND_fu_450_ap_return_3;
                reg_761 <= grp_ROUND_fu_450_ap_return_4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln41_fu_815_p2 = ap_const_lv1_0) and (icmp_ln39_fu_799_p2 = ap_const_lv1_0)))) then
                s_0_45_fu_154 <= grp_ROUND_fu_504_ap_return_0;
                s_1_43_fu_158 <= grp_ROUND_fu_504_ap_return_1;
                s_2_43_fu_162 <= grp_ROUND_fu_504_ap_return_2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                s_0_55_reg_1517 <= grp_ROUND_fu_464_ap_return_0;
                s_1_51_reg_1522 <= grp_ROUND_fu_464_ap_return_1;
                s_2_51_reg_1527 <= grp_ROUND_fu_464_ap_return_2;
                s_3_53_reg_1532 <= grp_ROUND_fu_464_ap_return_3;
                s_4_54_reg_1537 <= grp_ROUND_fu_464_ap_return_4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                s_0_61_reg_1653 <= s_0_61_fu_1157_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                s_0_6_reg_1361 <= grp_ROUND_fu_489_ap_return_0;
                s_1_7_reg_1366 <= grp_ROUND_fu_489_ap_return_1;
                s_2_7_reg_1371 <= grp_ROUND_fu_489_ap_return_2;
                s_3_7_reg_1376 <= grp_ROUND_fu_489_ap_return_3;
                s_4_7_reg_1381 <= grp_ROUND_fu_489_ap_return_4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                s_3_66_reg_1672 <= grp_ROUND_fu_504_ap_return_3;
                s_4_68_reg_1677 <= grp_ROUND_fu_504_ap_return_4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln41_1_fu_884_p2 = ap_const_lv1_0) and (icmp_ln41_reg_1426 = ap_const_lv1_0))) then
                trunc_ln41_1_reg_1507 <= trunc_ln41_1_fu_893_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and ((icmp_ln41_1_fu_884_p2 = ap_const_lv1_1) or (icmp_ln41_reg_1426 = ap_const_lv1_1)))) then
                trunc_ln49_reg_1512 <= trunc_ln49_fu_950_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln59_1_fu_1102_p2 = ap_const_lv1_0) and (icmp_ln59_reg_1547 = ap_const_lv1_0))) then
                trunc_ln59_1_reg_1631 <= trunc_ln59_1_fu_1108_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and ((icmp_ln59_1_fu_1102_p2 = ap_const_lv1_1) or (icmp_ln59_reg_1547 = ap_const_lv1_1)))) then
                    trunc_ln69_1_reg_1642(4 downto 3) <= trunc_ln69_1_fu_1147_p1(4 downto 3);
                trunc_ln69_2_reg_1647 <= trunc_ln69_2_fu_1152_p1;
                trunc_ln69_reg_1636 <= trunc_ln69_fu_1143_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                xor_ln69_reg_1667 <= xor_ln69_fu_1271_p2;
            end if;
        end if;
    end process;
    trunc_ln69_1_reg_1642(2 downto 0) <= "000";
    ad_addr_0_lcssa_idx_reg_234(2 downto 0) <= "000";
    m_addr_0_lcssa_idx_reg_360(2 downto 0) <= "000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state4, ap_CS_fsm_state16, ap_CS_fsm_state6, ap_CS_fsm_state17, ap_CS_fsm_state8, ap_CS_fsm_state14, icmp_ln25_fu_1166_p2, ap_CS_fsm_state2, icmp_ln39_fu_799_p2, icmp_ln41_reg_1426, ap_CS_fsm_state7, icmp_ln41_1_fu_884_p2, ap_CS_fsm_state10, icmp_ln59_reg_1547, ap_CS_fsm_state12, icmp_ln59_1_fu_1102_p2, ap_CS_fsm_state13, grp_LOADBYTES_2_fu_528_ap_done, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539_ap_done, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549_ap_done, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_ap_done, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_block_state2_on_subcall_done, ap_block_state4_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln39_fu_799_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and ((icmp_ln41_1_fu_884_p2 = ap_const_lv1_1) or (icmp_ln41_reg_1426 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_LOADBYTES_2_fu_528_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_LOADBYTES_2_fu_528_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and ((icmp_ln59_1_fu_1102_p2 = ap_const_lv1_1) or (icmp_ln59_reg_1547 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (grp_LOADBYTES_2_fu_528_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln25_fu_1166_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state16 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_LOADBYTES_2_fu_528_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state17) and (grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state19) and (grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state21) and (grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ad_address0 <= grp_LOADBYTES_2_fu_528_ad_address0;

    ad_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state10, grp_LOADBYTES_2_fu_528_ad_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            ad_ce0 <= grp_LOADBYTES_2_fu_528_ad_ce0;
        else 
            ad_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln25_1_fu_1172_p2 <= std_logic_vector(unsigned(i_reg_372) + unsigned(ap_const_lv4_1));
    add_ln25_4_fu_1336_p2 <= std_logic_vector(unsigned(trunc_ln69_reg_1636) + unsigned(m_addr_0_lcssa_idx_reg_360));
    add_ln25_fu_1214_p2 <= std_logic_vector(unsigned(zext_ln25_fu_1162_p1) + unsigned(trunc_ln59_2_fu_1210_p1));
    add_ln45_fu_898_p2 <= std_logic_vector(unsigned(ad_assign_fu_146) + unsigned(ap_const_lv64_8));
    add_ln46_fu_904_p2 <= std_logic_vector(unsigned(adlen_assign_fu_150) + unsigned(ap_const_lv64_FFFFFFFFFFFFFFF8));
    add_ln65_fu_1225_p2 <= std_logic_vector(unsigned(m_assign_fu_174) + unsigned(ap_const_lv64_8));
    add_ln66_fu_1231_p2 <= std_logic_vector(unsigned(mlen_assign_fu_178) + unsigned(ap_const_lv64_FFFFFFFFFFFFFFF8));
    and_ln1_fu_1122_p3 <= (tmp_6_fu_1113_p4 & ap_const_lv3_0);
    and_ln41_1_fu_941_p3 <= (ap_const_lv58_0 & trunc_ln41_fu_938_p1);
    and_ln59_1_fu_1134_p3 <= (ap_const_lv58_0 & trunc_ln59_fu_1131_p1);
    and_ln_fu_929_p3 <= (tmp_4_fu_920_p4 & ap_const_lv3_0);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(grp_LOADBYTES_2_fu_528_ap_done)
    begin
        if ((grp_LOADBYTES_2_fu_528_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;

    ap_ST_fsm_state13_blk_assign_proc : process(grp_LOADBYTES_2_fu_528_ap_done)
    begin
        if ((grp_LOADBYTES_2_fu_528_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;

    ap_ST_fsm_state16_blk_assign_proc : process(grp_LOADBYTES_2_fu_528_ap_done)
    begin
        if ((grp_LOADBYTES_2_fu_528_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state16_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state16_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state17_blk_assign_proc : process(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539_ap_done)
    begin
        if ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state17_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state17_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state18_blk <= ap_const_logic_0;

    ap_ST_fsm_state19_blk_assign_proc : process(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549_ap_done)
    begin
        if ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state19_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state19_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;

    ap_ST_fsm_state21_blk_assign_proc : process(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_ap_done)
    begin
        if ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state21_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state21_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state2_on_subcall_done)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(ap_block_state4_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state4_on_subcall_done)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(grp_LOADBYTES_2_fu_528_ap_done)
    begin
        if ((grp_LOADBYTES_2_fu_528_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state2_on_subcall_done_assign_proc : process(grp_LOADBYTES_1_fu_432_ap_done, grp_LOADBYTES_1_fu_440_ap_done)
    begin
                ap_block_state2_on_subcall_done <= ((grp_LOADBYTES_1_fu_440_ap_done = ap_const_logic_0) or (grp_LOADBYTES_1_fu_432_ap_done = ap_const_logic_0));
    end process;


    ap_block_state4_on_subcall_done_assign_proc : process(grp_LOADBYTES_1_fu_432_ap_done, grp_LOADBYTES_1_fu_440_ap_done)
    begin
                ap_block_state4_on_subcall_done <= ((grp_LOADBYTES_1_fu_440_ap_done = ap_const_logic_0) or (grp_LOADBYTES_1_fu_432_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_ap_done, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) and (grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_ap_done = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_local_block <= ap_const_logic_0;
    ap_local_deadlock <= ap_const_logic_0;

    ap_phi_mux_adlen_addr_0_lcssa_phi_fu_249_p4_assign_proc : process(icmp_ln41_reg_1426, ap_CS_fsm_state7, icmp_ln41_1_fu_884_p2, and_ln41_1_fu_941_p3, adlen_addr_0_lcssa_reg_246)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln41_1_fu_884_p2 = ap_const_lv1_1) and (icmp_ln41_reg_1426 = ap_const_lv1_0))) then 
            ap_phi_mux_adlen_addr_0_lcssa_phi_fu_249_p4 <= and_ln41_1_fu_941_p3;
        else 
            ap_phi_mux_adlen_addr_0_lcssa_phi_fu_249_p4 <= adlen_addr_0_lcssa_reg_246;
        end if; 
    end process;


    ap_phi_mux_m_addr_0_lcssa_idx_phi_fu_364_p4_assign_proc : process(icmp_ln59_reg_1547, ap_CS_fsm_state12, icmp_ln59_1_fu_1102_p2, and_ln1_fu_1122_p3, m_addr_0_lcssa_idx_reg_360)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln59_1_fu_1102_p2 = ap_const_lv1_1) and (icmp_ln59_reg_1547 = ap_const_lv1_0))) then 
            ap_phi_mux_m_addr_0_lcssa_idx_phi_fu_364_p4 <= and_ln1_fu_1122_p3;
        else 
            ap_phi_mux_m_addr_0_lcssa_idx_phi_fu_364_p4 <= m_addr_0_lcssa_idx_reg_360;
        end if; 
    end process;


    ap_phi_mux_mlen_addr_0_lcssa_phi_fu_353_p4_assign_proc : process(icmp_ln59_reg_1547, ap_CS_fsm_state12, icmp_ln59_1_fu_1102_p2, and_ln59_1_fu_1134_p3, mlen_addr_0_lcssa_reg_350)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln59_1_fu_1102_p2 = ap_const_lv1_1) and (icmp_ln59_reg_1547 = ap_const_lv1_0))) then 
            ap_phi_mux_mlen_addr_0_lcssa_phi_fu_353_p4 <= and_ln59_1_fu_1134_p3;
        else 
            ap_phi_mux_mlen_addr_0_lcssa_phi_fu_353_p4 <= mlen_addr_0_lcssa_reg_350;
        end if; 
    end process;


    ap_phi_mux_s_0_2_22_phi_fu_343_p4_assign_proc : process(icmp_ln39_reg_1422, ap_CS_fsm_state11, grp_ROUND_fu_489_ap_return_0, s_0_2_22_reg_340)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln39_reg_1422 = ap_const_lv1_0))) then 
            ap_phi_mux_s_0_2_22_phi_fu_343_p4 <= grp_ROUND_fu_489_ap_return_0;
        else 
            ap_phi_mux_s_0_2_22_phi_fu_343_p4 <= s_0_2_22_reg_340;
        end if; 
    end process;


    ap_phi_mux_s_1_2_21_phi_fu_333_p4_assign_proc : process(icmp_ln39_reg_1422, ap_CS_fsm_state11, grp_ROUND_fu_489_ap_return_1, s_1_2_21_reg_330)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln39_reg_1422 = ap_const_lv1_0))) then 
            ap_phi_mux_s_1_2_21_phi_fu_333_p4 <= grp_ROUND_fu_489_ap_return_1;
        else 
            ap_phi_mux_s_1_2_21_phi_fu_333_p4 <= s_1_2_21_reg_330;
        end if; 
    end process;


    ap_phi_mux_s_2_2_20_phi_fu_323_p4_assign_proc : process(icmp_ln39_reg_1422, ap_CS_fsm_state11, grp_ROUND_fu_489_ap_return_2, s_2_2_20_reg_320)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln39_reg_1422 = ap_const_lv1_0))) then 
            ap_phi_mux_s_2_2_20_phi_fu_323_p4 <= grp_ROUND_fu_489_ap_return_2;
        else 
            ap_phi_mux_s_2_2_20_phi_fu_323_p4 <= s_2_2_20_reg_320;
        end if; 
    end process;


    ap_phi_mux_s_3_2_19_phi_fu_313_p4_assign_proc : process(icmp_ln39_reg_1422, ap_CS_fsm_state11, grp_ROUND_fu_489_ap_return_3, s_3_2_19_reg_310)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln39_reg_1422 = ap_const_lv1_0))) then 
            ap_phi_mux_s_3_2_19_phi_fu_313_p4 <= grp_ROUND_fu_489_ap_return_3;
        else 
            ap_phi_mux_s_3_2_19_phi_fu_313_p4 <= s_3_2_19_reg_310;
        end if; 
    end process;


    ap_phi_mux_s_4_2_18_phi_fu_304_p4_assign_proc : process(icmp_ln39_reg_1422, ap_CS_fsm_state11, grp_ROUND_fu_489_ap_return_4, s_4_2_18_reg_301)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln39_reg_1422 = ap_const_lv1_0))) then 
            ap_phi_mux_s_4_2_18_phi_fu_304_p4 <= grp_ROUND_fu_489_ap_return_4;
        else 
            ap_phi_mux_s_4_2_18_phi_fu_304_p4 <= s_4_2_18_reg_301;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_ap_done, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) and (grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_ap_done = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= ap_const_lv32_0;

    c_address0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state14, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539_c_address0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549_c_address0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_c_address0, ap_CS_fsm_state19, ap_CS_fsm_state21, zext_ln25_3_fu_1220_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            c_address0 <= zext_ln25_3_fu_1220_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            c_address0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_c_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            c_address0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549_c_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            c_address0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539_c_address0;
        else 
            c_address0 <= "XXXXXX";
        end if; 
    end process;


    c_ce0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state14, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539_c_ce0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549_c_ce0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_c_ce0, ap_CS_fsm_state19, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            c_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            c_ce0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_c_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            c_ce0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549_c_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            c_ce0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539_c_ce0;
        else 
            c_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    c_d0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state14, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539_c_d0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549_c_d0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_c_d0, ap_CS_fsm_state19, ap_CS_fsm_state21, trunc_ln25_3_fu_1205_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            c_d0 <= trunc_ln25_3_fu_1205_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            c_d0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_c_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            c_d0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549_c_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            c_d0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539_c_d0;
        else 
            c_d0 <= "XXXXXXXX";
        end if; 
    end process;


    c_we0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state14, icmp_ln25_fu_1166_p2, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539_c_we0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549_c_we0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_c_we0, ap_CS_fsm_state19, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln25_fu_1166_p2 = ap_const_lv1_0))) then 
            c_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            c_we0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_c_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            c_we0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549_c_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            c_we0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539_c_we0;
        else 
            c_we0 <= ap_const_logic_0;
        end if; 
    end process;

    clen <= std_logic_vector(unsigned(mlen) + unsigned(ap_const_lv64_10));

    clen_ap_vld_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            clen_ap_vld <= ap_const_logic_1;
        else 
            clen_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    empty_12_fu_770_p1 <= mlen(61 - 1 downto 0);
    empty_fu_766_p1 <= adlen(61 - 1 downto 0);
    grp_LOADBYTES_1_fu_432_ap_start <= grp_LOADBYTES_1_fu_432_ap_start_reg;

    grp_LOADBYTES_1_fu_432_bytes_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_LOADBYTES_1_fu_432_bytes <= ap_const_lv4_8;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_LOADBYTES_1_fu_432_bytes <= ap_const_lv4_0;
        else 
            grp_LOADBYTES_1_fu_432_bytes <= "XXXX";
        end if; 
    end process;

    grp_LOADBYTES_1_fu_440_ap_start <= grp_LOADBYTES_1_fu_440_ap_start_reg;

    grp_LOADBYTES_1_fu_440_bytes_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_LOADBYTES_1_fu_440_bytes <= ap_const_lv4_8;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_LOADBYTES_1_fu_440_bytes <= ap_const_lv4_0;
        else 
            grp_LOADBYTES_1_fu_440_bytes <= "XXXX";
        end if; 
    end process;


    grp_LOADBYTES_2_fu_528_ad_q0_assign_proc : process(m_q0, ad_q0, ap_CS_fsm_state16, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_LOADBYTES_2_fu_528_ad_q0 <= m_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            grp_LOADBYTES_2_fu_528_ad_q0 <= ad_q0;
        else 
            grp_LOADBYTES_2_fu_528_ad_q0 <= "XXXXXXXX";
        end if; 
    end process;

    grp_LOADBYTES_2_fu_528_ap_start <= grp_LOADBYTES_2_fu_528_ap_start_reg;

    grp_LOADBYTES_2_fu_528_bytes_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state8, trunc_ln41_1_reg_1507, ap_CS_fsm_state10, trunc_ln59_1_reg_1631, trunc_ln69_1_reg_1642, ap_CS_fsm_state13, ad_addr_0_lcssa_idx_reg_234)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_LOADBYTES_2_fu_528_bytes <= trunc_ln69_1_reg_1642;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_LOADBYTES_2_fu_528_bytes <= trunc_ln59_1_reg_1631;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_LOADBYTES_2_fu_528_bytes <= ad_addr_0_lcssa_idx_reg_234;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_LOADBYTES_2_fu_528_bytes <= trunc_ln41_1_reg_1507;
        else 
            grp_LOADBYTES_2_fu_528_bytes <= "XXXXX";
        end if; 
    end process;


    grp_LOADBYTES_2_fu_528_n_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state8, trunc_ln49_reg_1512, ap_CS_fsm_state10, trunc_ln69_2_reg_1647, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_LOADBYTES_2_fu_528_n <= trunc_ln69_2_reg_1647;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_LOADBYTES_2_fu_528_n <= trunc_ln49_reg_1512;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            grp_LOADBYTES_2_fu_528_n <= ap_const_lv32_8;
        else 
            grp_LOADBYTES_2_fu_528_n <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ROUND_fu_450_C_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state16, ap_CS_fsm_state6, ap_CS_fsm_state17, ap_CS_fsm_state8, ap_CS_fsm_state14, icmp_ln25_fu_1166_p2, ap_CS_fsm_state5, icmp_ln39_reg_1422, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state18, ap_CS_fsm_state9, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln39_reg_1422 = ap_const_lv1_0)))) then 
            grp_ROUND_fu_450_C <= ap_const_lv8_78;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln25_fu_1166_p2 = ap_const_lv1_1)))) then 
            grp_ROUND_fu_450_C <= ap_const_lv8_96;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_ROUND_fu_450_C <= ap_const_lv8_87;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_ROUND_fu_450_C <= ap_const_lv8_C3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_ROUND_fu_450_C <= ap_const_lv8_F0;
        else 
            grp_ROUND_fu_450_C <= "XXXXXXXX";
        end if; 
    end process;


    grp_ROUND_fu_450_s_0_read_assign_proc : process(reg_695, ap_CS_fsm_state4, ap_CS_fsm_state16, reg_720, ap_CS_fsm_state6, ap_CS_fsm_state17, reg_741, ap_CS_fsm_state8, ap_CS_fsm_state14, icmp_ln25_fu_1166_p2, s_0_6_reg_1361, ap_CS_fsm_state5, icmp_ln39_reg_1422, s_0_55_reg_1517, ap_CS_fsm_state10, ap_CS_fsm_state11, s_0_61_reg_1653, ap_CS_fsm_state18, s_0_46_fu_955_p2, ap_CS_fsm_state9, s_0_53_fu_1012_p2, ap_CS_fsm_state15, s_0_62_fu_1298_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_ROUND_fu_450_s_0_read <= reg_720;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_ROUND_fu_450_s_0_read <= s_0_62_fu_1298_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln25_fu_1166_p2 = ap_const_lv1_1))) then 
            grp_ROUND_fu_450_s_0_read <= s_0_61_reg_1653;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln39_reg_1422 = ap_const_lv1_0))) then 
            grp_ROUND_fu_450_s_0_read <= s_0_55_reg_1517;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_ROUND_fu_450_s_0_read <= s_0_53_fu_1012_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_ROUND_fu_450_s_0_read <= reg_741;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_ROUND_fu_450_s_0_read <= s_0_46_fu_955_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_ROUND_fu_450_s_0_read <= s_0_6_reg_1361;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_ROUND_fu_450_s_0_read <= reg_695;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_ROUND_fu_450_s_0_read <= ap_const_lv64_80400C0600000000;
        else 
            grp_ROUND_fu_450_s_0_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ROUND_fu_450_s_1_read_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state16, reg_700, ap_CS_fsm_state6, ap_CS_fsm_state17, reg_727, ap_CS_fsm_state8, ap_CS_fsm_state14, icmp_ln25_fu_1166_p2, reg_746, K0_reg_1341, ap_CS_fsm_state5, s_1_7_reg_1366, icmp_ln39_reg_1422, ap_CS_fsm_state10, s_1_51_reg_1522, ap_CS_fsm_state11, ap_CS_fsm_state18, s_1_1_16_reg_283, ap_CS_fsm_state9, ap_CS_fsm_state15, s_1_57_fu_1305_p2, s_1_43_fu_158, s_1_56_fu_186)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_ROUND_fu_450_s_1_read <= reg_727;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_ROUND_fu_450_s_1_read <= s_1_57_fu_1305_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln25_fu_1166_p2 = ap_const_lv1_1))) then 
            grp_ROUND_fu_450_s_1_read <= s_1_56_fu_186;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln39_reg_1422 = ap_const_lv1_0))) then 
            grp_ROUND_fu_450_s_1_read <= s_1_51_reg_1522;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_ROUND_fu_450_s_1_read <= s_1_1_16_reg_283;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_ROUND_fu_450_s_1_read <= reg_746;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_ROUND_fu_450_s_1_read <= s_1_43_fu_158;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_ROUND_fu_450_s_1_read <= s_1_7_reg_1366;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_ROUND_fu_450_s_1_read <= reg_700;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_ROUND_fu_450_s_1_read <= K0_reg_1341;
        else 
            grp_ROUND_fu_450_s_1_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ROUND_fu_450_s_2_read_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state16, reg_705, ap_CS_fsm_state6, ap_CS_fsm_state17, reg_734, ap_CS_fsm_state8, ap_CS_fsm_state14, icmp_ln25_fu_1166_p2, reg_751, grp_LOADBYTES_1_fu_432_ap_return, ap_CS_fsm_state5, s_2_7_reg_1371, icmp_ln39_reg_1422, ap_CS_fsm_state10, s_2_51_reg_1527, ap_CS_fsm_state11, ap_CS_fsm_state18, s_2_1_15_reg_274, ap_CS_fsm_state9, ap_CS_fsm_state15, s_2_57_fu_1311_p2, s_2_43_fu_162, s_2_56_fu_190)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_ROUND_fu_450_s_2_read <= reg_734;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_ROUND_fu_450_s_2_read <= s_2_57_fu_1311_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln25_fu_1166_p2 = ap_const_lv1_1))) then 
            grp_ROUND_fu_450_s_2_read <= s_2_56_fu_190;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln39_reg_1422 = ap_const_lv1_0))) then 
            grp_ROUND_fu_450_s_2_read <= s_2_51_reg_1527;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_ROUND_fu_450_s_2_read <= s_2_1_15_reg_274;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_ROUND_fu_450_s_2_read <= reg_751;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_ROUND_fu_450_s_2_read <= s_2_43_fu_162;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_ROUND_fu_450_s_2_read <= s_2_7_reg_1371;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_ROUND_fu_450_s_2_read <= reg_705;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_ROUND_fu_450_s_2_read <= grp_LOADBYTES_1_fu_432_ap_return;
        else 
            grp_ROUND_fu_450_s_2_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ROUND_fu_450_s_3_read_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state16, reg_710, ap_CS_fsm_state6, ap_CS_fsm_state17, ap_CS_fsm_state8, ap_CS_fsm_state14, icmp_ln25_fu_1166_p2, reg_756, N0_reg_1349, ap_CS_fsm_state5, s_3_7_reg_1376, icmp_ln39_reg_1422, ap_CS_fsm_state10, s_3_53_reg_1532, ap_CS_fsm_state11, s_3_66_reg_1672, ap_CS_fsm_state18, s_3_1_14_reg_265, s_3_4_25_reg_392, ap_CS_fsm_state9, ap_CS_fsm_state15, s_3_45_fu_166, s_3_58_fu_194)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_ROUND_fu_450_s_3_read <= s_3_66_reg_1672;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_ROUND_fu_450_s_3_read <= s_3_4_25_reg_392;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln25_fu_1166_p2 = ap_const_lv1_1))) then 
            grp_ROUND_fu_450_s_3_read <= s_3_58_fu_194;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln39_reg_1422 = ap_const_lv1_0))) then 
            grp_ROUND_fu_450_s_3_read <= s_3_53_reg_1532;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_ROUND_fu_450_s_3_read <= s_3_1_14_reg_265;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_ROUND_fu_450_s_3_read <= reg_756;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_ROUND_fu_450_s_3_read <= s_3_45_fu_166;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_ROUND_fu_450_s_3_read <= s_3_7_reg_1376;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_ROUND_fu_450_s_3_read <= reg_710;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_ROUND_fu_450_s_3_read <= N0_reg_1349;
        else 
            grp_ROUND_fu_450_s_3_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ROUND_fu_450_s_4_read_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state16, reg_715, ap_CS_fsm_state6, ap_CS_fsm_state17, ap_CS_fsm_state8, ap_CS_fsm_state14, icmp_ln25_fu_1166_p2, reg_761, grp_LOADBYTES_1_fu_440_ap_return, ap_CS_fsm_state5, s_4_7_reg_1381, icmp_ln39_reg_1422, ap_CS_fsm_state10, s_4_54_reg_1537, ap_CS_fsm_state11, s_4_68_reg_1677, ap_CS_fsm_state18, s_4_1_13_reg_256, s_4_4_24_reg_383, ap_CS_fsm_state9, ap_CS_fsm_state15, s_4_46_fu_170, s_4_60_fu_198)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_ROUND_fu_450_s_4_read <= s_4_68_reg_1677;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_ROUND_fu_450_s_4_read <= s_4_4_24_reg_383;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln25_fu_1166_p2 = ap_const_lv1_1))) then 
            grp_ROUND_fu_450_s_4_read <= s_4_60_fu_198;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln39_reg_1422 = ap_const_lv1_0))) then 
            grp_ROUND_fu_450_s_4_read <= s_4_54_reg_1537;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_ROUND_fu_450_s_4_read <= s_4_1_13_reg_256;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_ROUND_fu_450_s_4_read <= reg_761;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_ROUND_fu_450_s_4_read <= s_4_46_fu_170;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_ROUND_fu_450_s_4_read <= s_4_7_reg_1381;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_ROUND_fu_450_s_4_read <= reg_715;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_ROUND_fu_450_s_4_read <= grp_LOADBYTES_1_fu_440_ap_return;
        else 
            grp_ROUND_fu_450_s_4_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ROUND_fu_464_C_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state16, ap_CS_fsm_state6, ap_CS_fsm_state17, ap_CS_fsm_state5, icmp_ln39_reg_1422, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state18, ap_CS_fsm_state9, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln39_reg_1422 = ap_const_lv1_0)))) then 
            grp_ROUND_fu_464_C <= ap_const_lv8_69;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_ROUND_fu_464_C <= ap_const_lv8_87;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_ROUND_fu_464_C <= ap_const_lv8_78;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_ROUND_fu_464_C <= ap_const_lv8_B4;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_ROUND_fu_464_C <= ap_const_lv8_E1;
        else 
            grp_ROUND_fu_464_C <= "XXXXXXXX";
        end if; 
    end process;


    grp_ROUND_fu_475_C_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state16, ap_CS_fsm_state6, ap_CS_fsm_state17, ap_CS_fsm_state5, icmp_ln39_reg_1422, ap_CS_fsm_state11, ap_CS_fsm_state18, ap_CS_fsm_state9, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln39_reg_1422 = ap_const_lv1_0)))) then 
            grp_ROUND_fu_475_C <= ap_const_lv8_5A;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_ROUND_fu_475_C <= ap_const_lv8_69;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_ROUND_fu_475_C <= ap_const_lv8_A5;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_ROUND_fu_475_C <= ap_const_lv8_D2;
        else 
            grp_ROUND_fu_475_C <= "XXXXXXXX";
        end if; 
    end process;


    grp_ROUND_fu_489_C_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state17, ap_CS_fsm_state5, icmp_ln39_reg_1422, ap_CS_fsm_state11, ap_CS_fsm_state18, ap_CS_fsm_state9, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln39_reg_1422 = ap_const_lv1_0)))) then 
            grp_ROUND_fu_489_C <= ap_const_lv8_4B;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_ROUND_fu_489_C <= ap_const_lv8_5A;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_ROUND_fu_489_C <= ap_const_lv8_96;
        else 
            grp_ROUND_fu_489_C <= "XXXXXXXX";
        end if; 
    end process;


    grp_ROUND_fu_504_C_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state17, ap_CS_fsm_state9, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_ROUND_fu_504_C <= ap_const_lv8_87;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_ROUND_fu_504_C <= ap_const_lv8_4B;
        else 
            grp_ROUND_fu_504_C <= "XXXXXXXX";
        end if; 
    end process;

    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549_ap_start <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_549_ap_start_reg;
    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_ap_start <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_559_ap_start_reg;
    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539_ap_start <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_539_ap_start_reg;
    icmp_ln25_fu_1166_p2 <= "1" when (i_reg_372 = ap_const_lv4_8) else "0";
    icmp_ln39_fu_799_p2 <= "1" when (adlen = ap_const_lv64_0) else "0";
    icmp_ln41_1_fu_884_p2 <= "1" when (tmp_7_fu_874_p4 = ap_const_lv61_0) else "0";
    icmp_ln41_fu_815_p2 <= "1" when (tmp_5_fu_805_p4 = ap_const_lv61_0) else "0";
    icmp_ln59_1_fu_1102_p2 <= "1" when (tmp_9_fu_1092_p4 = ap_const_lv61_0) else "0";
    icmp_ln59_fu_1034_p2 <= "1" when (tmp_8_fu_1025_p4 = ap_const_lv61_0) else "0";
    k_address0 <= grp_LOADBYTES_1_fu_432_k_address0;

    k_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, grp_LOADBYTES_1_fu_432_k_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            k_ce0 <= grp_LOADBYTES_1_fu_432_k_ce0;
        else 
            k_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln25_fu_1200_p2 <= std_logic_vector(shift_right(unsigned(s_0_61_reg_1653),to_integer(unsigned('0' & zext_ln25_2_fu_1196_p1(31-1 downto 0)))));
    m_address0 <= grp_LOADBYTES_2_fu_528_ad_address0;

    m_ce0_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state13, grp_LOADBYTES_2_fu_528_ad_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            m_ce0 <= grp_LOADBYTES_2_fu_528_ad_ce0;
        else 
            m_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    npub_address0 <= grp_LOADBYTES_1_fu_440_k_address0;

    npub_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, grp_LOADBYTES_1_fu_440_k_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            npub_ce0 <= grp_LOADBYTES_1_fu_440_k_ce0;
        else 
            npub_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    s_0_46_fu_955_p2 <= (s_0_45_fu_154 xor grp_LOADBYTES_2_fu_528_ap_return);
    s_0_53_fu_1012_p2 <= (xor_ln50_fu_1006_p2 xor s_0_1_17_reg_292);
    s_0_61_fu_1157_p2 <= (s_0_60_fu_182 xor grp_LOADBYTES_2_fu_528_ap_return);
    s_0_62_fu_1298_p2 <= (xor_ln69_fu_1271_p2 xor shl_ln71_fu_1292_p2);
    s_1_57_fu_1305_p2 <= (s_1_4_27_reg_412 xor K0_reg_1341);
    s_2_57_fu_1311_p2 <= (s_2_4_26_reg_402 xor K1_reg_1354);
    s_3_14_fu_789_p2 <= (grp_ROUND_fu_504_ap_return_3 xor K0_reg_1341);
    s_3_fu_1325_p2 <= (grp_ROUND_fu_489_ap_return_3 xor K0_reg_1341);
    s_4_13_fu_794_p2 <= (grp_ROUND_fu_504_ap_return_4 xor K1_reg_1354);
    s_4_59_fu_1019_p2 <= (ap_phi_mux_s_4_2_18_phi_fu_304_p4 xor ap_const_lv64_1);
    s_4_73_fu_1331_p2 <= (grp_ROUND_fu_489_ap_return_4 xor K1_reg_1354);
    shl_ln1_fu_1182_p3 <= (trunc_ln25_fu_1178_p1 & ap_const_lv3_0);
    shl_ln2_fu_1278_p3 <= (mlen_addr_0_lcssa_reg_350 & ap_const_lv3_0);
    shl_ln50_fu_1000_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv64_80),to_integer(unsigned('0' & sub_ln50_fu_994_p2(31-1 downto 0)))));
    shl_ln71_fu_1292_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv64_80),to_integer(unsigned('0' & sub_ln71_fu_1286_p2(31-1 downto 0)))));
    shl_ln_fu_986_p3 <= (adlen_addr_0_lcssa_reg_246 & ap_const_lv3_0);
    sub_ln25_fu_1190_p2 <= std_logic_vector(signed(ap_const_lv6_38) - signed(shl_ln1_fu_1182_p3));
    sub_ln50_fu_994_p2 <= std_logic_vector(unsigned(ap_const_lv64_38) - unsigned(shl_ln_fu_986_p3));
    sub_ln71_fu_1286_p2 <= std_logic_vector(unsigned(ap_const_lv64_38) - unsigned(shl_ln2_fu_1278_p3));
    tmp_4_fu_920_p4 <= adlen(4 downto 3);
    tmp_5_fu_805_p4 <= adlen(63 downto 3);
    tmp_6_fu_1113_p4 <= mlen(5 downto 3);
    tmp_7_fu_874_p4 <= adlen_assign_fu_150(63 downto 3);
    tmp_8_fu_1025_p4 <= mlen(63 downto 3);
    tmp_9_fu_1092_p4 <= mlen_assign_fu_178(63 downto 3);
    trunc_ln25_3_fu_1205_p1 <= lshr_ln25_fu_1200_p2(8 - 1 downto 0);
    trunc_ln25_fu_1178_p1 <= i_reg_372(3 - 1 downto 0);
    trunc_ln41_1_fu_893_p1 <= ad_assign_fu_146(5 - 1 downto 0);
    trunc_ln41_fu_938_p1 <= adlen(3 - 1 downto 0);
    trunc_ln49_fu_950_p1 <= ap_phi_mux_adlen_addr_0_lcssa_phi_fu_249_p4(32 - 1 downto 0);
    trunc_ln59_1_fu_1108_p1 <= m_assign_fu_174(5 - 1 downto 0);
    trunc_ln59_2_fu_1210_p1 <= m_assign_fu_174(6 - 1 downto 0);
    trunc_ln59_fu_1131_p1 <= mlen(3 - 1 downto 0);
    trunc_ln69_1_fu_1147_p1 <= ap_phi_mux_m_addr_0_lcssa_idx_phi_fu_364_p4(5 - 1 downto 0);
    trunc_ln69_2_fu_1152_p1 <= ap_phi_mux_mlen_addr_0_lcssa_phi_fu_353_p4(32 - 1 downto 0);
    trunc_ln69_fu_1143_p1 <= ap_phi_mux_mlen_addr_0_lcssa_phi_fu_353_p4(6 - 1 downto 0);
    xor_ln50_fu_1006_p2 <= (shl_ln50_fu_1000_p2 xor grp_LOADBYTES_2_fu_528_ap_return);
    xor_ln69_fu_1271_p2 <= (s_0_4_28_reg_422 xor grp_LOADBYTES_2_fu_528_ap_return);
    zext_ln25_2_fu_1196_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln25_fu_1190_p2),64));
    zext_ln25_3_fu_1220_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln25_fu_1214_p2),64));
    zext_ln25_fu_1162_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_372),6));
end behav;
