-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity load_test_h is
port (
    ap_local_block : OUT STD_LOGIC;
    ap_local_deadlock : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    k_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    k_ce0 : OUT STD_LOGIC;
    k_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    n_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    n_ce0 : OUT STD_LOGIC;
    n_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    st_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    st_ce0 : OUT STD_LOGIC;
    st_we0 : OUT STD_LOGIC;
    st_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    st_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    st_ce1 : OUT STD_LOGIC;
    st_we1 : OUT STD_LOGIC;
    st_d1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of load_test_h is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "load_test_h_load_test_h,hls_ip_2021_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbv484-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.858400,HLS_SYN_LAT=24,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=305,HLS_SYN_LUT=1467,HLS_VERSION=2021_2}";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_80400C0600000000 : STD_LOGIC_VECTOR (63 downto 0) := "1000000001000000000011000000011000000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_load_test_h_Pipeline_VITIS_LOOP_11_1_fu_113_ap_start : STD_LOGIC;
    signal grp_load_test_h_Pipeline_VITIS_LOOP_11_1_fu_113_ap_done : STD_LOGIC;
    signal grp_load_test_h_Pipeline_VITIS_LOOP_11_1_fu_113_ap_idle : STD_LOGIC;
    signal grp_load_test_h_Pipeline_VITIS_LOOP_11_1_fu_113_ap_ready : STD_LOGIC;
    signal grp_load_test_h_Pipeline_VITIS_LOOP_11_1_fu_113_k_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_test_h_Pipeline_VITIS_LOOP_11_1_fu_113_k_ce0 : STD_LOGIC;
    signal grp_load_test_h_Pipeline_VITIS_LOOP_11_1_fu_113_x_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_test_h_Pipeline_VITIS_LOOP_11_1_fu_113_x_out_ap_vld : STD_LOGIC;
    signal grp_load_test_h_Pipeline_VITIS_LOOP_11_12_fu_120_ap_start : STD_LOGIC;
    signal grp_load_test_h_Pipeline_VITIS_LOOP_11_12_fu_120_ap_done : STD_LOGIC;
    signal grp_load_test_h_Pipeline_VITIS_LOOP_11_12_fu_120_ap_idle : STD_LOGIC;
    signal grp_load_test_h_Pipeline_VITIS_LOOP_11_12_fu_120_ap_ready : STD_LOGIC;
    signal grp_load_test_h_Pipeline_VITIS_LOOP_11_12_fu_120_n_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_test_h_Pipeline_VITIS_LOOP_11_12_fu_120_n_ce0 : STD_LOGIC;
    signal grp_load_test_h_Pipeline_VITIS_LOOP_11_12_fu_120_x_4_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_test_h_Pipeline_VITIS_LOOP_11_12_fu_120_x_4_out_ap_vld : STD_LOGIC;
    signal grp_load_test_h_Pipeline_VITIS_LOOP_11_11_fu_127_ap_start : STD_LOGIC;
    signal grp_load_test_h_Pipeline_VITIS_LOOP_11_11_fu_127_ap_done : STD_LOGIC;
    signal grp_load_test_h_Pipeline_VITIS_LOOP_11_11_fu_127_ap_idle : STD_LOGIC;
    signal grp_load_test_h_Pipeline_VITIS_LOOP_11_11_fu_127_ap_ready : STD_LOGIC;
    signal grp_load_test_h_Pipeline_VITIS_LOOP_11_11_fu_127_k_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_test_h_Pipeline_VITIS_LOOP_11_11_fu_127_k_ce0 : STD_LOGIC;
    signal grp_load_test_h_Pipeline_VITIS_LOOP_11_11_fu_127_x_2_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_test_h_Pipeline_VITIS_LOOP_11_11_fu_127_x_2_out_ap_vld : STD_LOGIC;
    signal grp_load_test_h_Pipeline_VITIS_LOOP_11_13_fu_134_ap_start : STD_LOGIC;
    signal grp_load_test_h_Pipeline_VITIS_LOOP_11_13_fu_134_ap_done : STD_LOGIC;
    signal grp_load_test_h_Pipeline_VITIS_LOOP_11_13_fu_134_ap_idle : STD_LOGIC;
    signal grp_load_test_h_Pipeline_VITIS_LOOP_11_13_fu_134_ap_ready : STD_LOGIC;
    signal grp_load_test_h_Pipeline_VITIS_LOOP_11_13_fu_134_n_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_test_h_Pipeline_VITIS_LOOP_11_13_fu_134_n_ce0 : STD_LOGIC;
    signal grp_load_test_h_Pipeline_VITIS_LOOP_11_13_fu_134_x_6_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_test_h_Pipeline_VITIS_LOOP_11_13_fu_134_x_6_out_ap_vld : STD_LOGIC;
    signal grp_load_test_h_Pipeline_VITIS_LOOP_11_1_fu_113_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_load_test_h_Pipeline_VITIS_LOOP_11_12_fu_120_ap_start_reg : STD_LOGIC := '0';
    signal grp_load_test_h_Pipeline_VITIS_LOOP_11_11_fu_127_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_load_test_h_Pipeline_VITIS_LOOP_11_13_fu_134_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_block_state4_on_subcall_done : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component load_test_h_load_test_h_Pipeline_VITIS_LOOP_11_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        k_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        k_ce0 : OUT STD_LOGIC;
        k_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        x_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        x_out_ap_vld : OUT STD_LOGIC );
    end component;


    component load_test_h_load_test_h_Pipeline_VITIS_LOOP_11_12 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        n_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        n_ce0 : OUT STD_LOGIC;
        n_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        x_4_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        x_4_out_ap_vld : OUT STD_LOGIC );
    end component;


    component load_test_h_load_test_h_Pipeline_VITIS_LOOP_11_11 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        k_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        k_ce0 : OUT STD_LOGIC;
        k_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        x_2_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        x_2_out_ap_vld : OUT STD_LOGIC );
    end component;


    component load_test_h_load_test_h_Pipeline_VITIS_LOOP_11_13 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        n_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        n_ce0 : OUT STD_LOGIC;
        n_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        x_6_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        x_6_out_ap_vld : OUT STD_LOGIC );
    end component;



begin
    grp_load_test_h_Pipeline_VITIS_LOOP_11_1_fu_113 : component load_test_h_load_test_h_Pipeline_VITIS_LOOP_11_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_load_test_h_Pipeline_VITIS_LOOP_11_1_fu_113_ap_start,
        ap_done => grp_load_test_h_Pipeline_VITIS_LOOP_11_1_fu_113_ap_done,
        ap_idle => grp_load_test_h_Pipeline_VITIS_LOOP_11_1_fu_113_ap_idle,
        ap_ready => grp_load_test_h_Pipeline_VITIS_LOOP_11_1_fu_113_ap_ready,
        k_address0 => grp_load_test_h_Pipeline_VITIS_LOOP_11_1_fu_113_k_address0,
        k_ce0 => grp_load_test_h_Pipeline_VITIS_LOOP_11_1_fu_113_k_ce0,
        k_q0 => k_q0,
        x_out => grp_load_test_h_Pipeline_VITIS_LOOP_11_1_fu_113_x_out,
        x_out_ap_vld => grp_load_test_h_Pipeline_VITIS_LOOP_11_1_fu_113_x_out_ap_vld);

    grp_load_test_h_Pipeline_VITIS_LOOP_11_12_fu_120 : component load_test_h_load_test_h_Pipeline_VITIS_LOOP_11_12
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_load_test_h_Pipeline_VITIS_LOOP_11_12_fu_120_ap_start,
        ap_done => grp_load_test_h_Pipeline_VITIS_LOOP_11_12_fu_120_ap_done,
        ap_idle => grp_load_test_h_Pipeline_VITIS_LOOP_11_12_fu_120_ap_idle,
        ap_ready => grp_load_test_h_Pipeline_VITIS_LOOP_11_12_fu_120_ap_ready,
        n_address0 => grp_load_test_h_Pipeline_VITIS_LOOP_11_12_fu_120_n_address0,
        n_ce0 => grp_load_test_h_Pipeline_VITIS_LOOP_11_12_fu_120_n_ce0,
        n_q0 => n_q0,
        x_4_out => grp_load_test_h_Pipeline_VITIS_LOOP_11_12_fu_120_x_4_out,
        x_4_out_ap_vld => grp_load_test_h_Pipeline_VITIS_LOOP_11_12_fu_120_x_4_out_ap_vld);

    grp_load_test_h_Pipeline_VITIS_LOOP_11_11_fu_127 : component load_test_h_load_test_h_Pipeline_VITIS_LOOP_11_11
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_load_test_h_Pipeline_VITIS_LOOP_11_11_fu_127_ap_start,
        ap_done => grp_load_test_h_Pipeline_VITIS_LOOP_11_11_fu_127_ap_done,
        ap_idle => grp_load_test_h_Pipeline_VITIS_LOOP_11_11_fu_127_ap_idle,
        ap_ready => grp_load_test_h_Pipeline_VITIS_LOOP_11_11_fu_127_ap_ready,
        k_address0 => grp_load_test_h_Pipeline_VITIS_LOOP_11_11_fu_127_k_address0,
        k_ce0 => grp_load_test_h_Pipeline_VITIS_LOOP_11_11_fu_127_k_ce0,
        k_q0 => k_q0,
        x_2_out => grp_load_test_h_Pipeline_VITIS_LOOP_11_11_fu_127_x_2_out,
        x_2_out_ap_vld => grp_load_test_h_Pipeline_VITIS_LOOP_11_11_fu_127_x_2_out_ap_vld);

    grp_load_test_h_Pipeline_VITIS_LOOP_11_13_fu_134 : component load_test_h_load_test_h_Pipeline_VITIS_LOOP_11_13
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_load_test_h_Pipeline_VITIS_LOOP_11_13_fu_134_ap_start,
        ap_done => grp_load_test_h_Pipeline_VITIS_LOOP_11_13_fu_134_ap_done,
        ap_idle => grp_load_test_h_Pipeline_VITIS_LOOP_11_13_fu_134_ap_idle,
        ap_ready => grp_load_test_h_Pipeline_VITIS_LOOP_11_13_fu_134_ap_ready,
        n_address0 => grp_load_test_h_Pipeline_VITIS_LOOP_11_13_fu_134_n_address0,
        n_ce0 => grp_load_test_h_Pipeline_VITIS_LOOP_11_13_fu_134_n_ce0,
        n_q0 => n_q0,
        x_6_out => grp_load_test_h_Pipeline_VITIS_LOOP_11_13_fu_134_x_6_out,
        x_6_out_ap_vld => grp_load_test_h_Pipeline_VITIS_LOOP_11_13_fu_134_x_6_out_ap_vld);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_load_test_h_Pipeline_VITIS_LOOP_11_11_fu_127_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_load_test_h_Pipeline_VITIS_LOOP_11_11_fu_127_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_load_test_h_Pipeline_VITIS_LOOP_11_11_fu_127_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_load_test_h_Pipeline_VITIS_LOOP_11_11_fu_127_ap_ready = ap_const_logic_1)) then 
                    grp_load_test_h_Pipeline_VITIS_LOOP_11_11_fu_127_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_load_test_h_Pipeline_VITIS_LOOP_11_12_fu_120_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_load_test_h_Pipeline_VITIS_LOOP_11_12_fu_120_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_load_test_h_Pipeline_VITIS_LOOP_11_12_fu_120_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_load_test_h_Pipeline_VITIS_LOOP_11_12_fu_120_ap_ready = ap_const_logic_1)) then 
                    grp_load_test_h_Pipeline_VITIS_LOOP_11_12_fu_120_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_load_test_h_Pipeline_VITIS_LOOP_11_13_fu_134_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_load_test_h_Pipeline_VITIS_LOOP_11_13_fu_134_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_load_test_h_Pipeline_VITIS_LOOP_11_13_fu_134_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_load_test_h_Pipeline_VITIS_LOOP_11_13_fu_134_ap_ready = ap_const_logic_1)) then 
                    grp_load_test_h_Pipeline_VITIS_LOOP_11_13_fu_134_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_load_test_h_Pipeline_VITIS_LOOP_11_1_fu_113_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_load_test_h_Pipeline_VITIS_LOOP_11_1_fu_113_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_load_test_h_Pipeline_VITIS_LOOP_11_1_fu_113_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_load_test_h_Pipeline_VITIS_LOOP_11_1_fu_113_ap_ready = ap_const_logic_1)) then 
                    grp_load_test_h_Pipeline_VITIS_LOOP_11_1_fu_113_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_block_state4_on_subcall_done, ap_block_state2_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state2_on_subcall_done)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(ap_block_state4_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state4_on_subcall_done)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_block_state2_on_subcall_done_assign_proc : process(grp_load_test_h_Pipeline_VITIS_LOOP_11_1_fu_113_ap_done, grp_load_test_h_Pipeline_VITIS_LOOP_11_12_fu_120_ap_done)
    begin
                ap_block_state2_on_subcall_done <= ((grp_load_test_h_Pipeline_VITIS_LOOP_11_12_fu_120_ap_done = ap_const_logic_0) or (grp_load_test_h_Pipeline_VITIS_LOOP_11_1_fu_113_ap_done = ap_const_logic_0));
    end process;


    ap_block_state4_on_subcall_done_assign_proc : process(grp_load_test_h_Pipeline_VITIS_LOOP_11_11_fu_127_ap_done, grp_load_test_h_Pipeline_VITIS_LOOP_11_13_fu_134_ap_done)
    begin
                ap_block_state4_on_subcall_done <= ((grp_load_test_h_Pipeline_VITIS_LOOP_11_13_fu_134_ap_done = ap_const_logic_0) or (grp_load_test_h_Pipeline_VITIS_LOOP_11_11_fu_127_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_local_block <= ap_const_logic_0;
    ap_local_deadlock <= ap_const_logic_0;

    ap_ready_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_load_test_h_Pipeline_VITIS_LOOP_11_11_fu_127_ap_start <= grp_load_test_h_Pipeline_VITIS_LOOP_11_11_fu_127_ap_start_reg;
    grp_load_test_h_Pipeline_VITIS_LOOP_11_12_fu_120_ap_start <= grp_load_test_h_Pipeline_VITIS_LOOP_11_12_fu_120_ap_start_reg;
    grp_load_test_h_Pipeline_VITIS_LOOP_11_13_fu_134_ap_start <= grp_load_test_h_Pipeline_VITIS_LOOP_11_13_fu_134_ap_start_reg;
    grp_load_test_h_Pipeline_VITIS_LOOP_11_1_fu_113_ap_start <= grp_load_test_h_Pipeline_VITIS_LOOP_11_1_fu_113_ap_start_reg;

    k_address0_assign_proc : process(grp_load_test_h_Pipeline_VITIS_LOOP_11_1_fu_113_k_address0, grp_load_test_h_Pipeline_VITIS_LOOP_11_11_fu_127_k_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            k_address0 <= grp_load_test_h_Pipeline_VITIS_LOOP_11_11_fu_127_k_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            k_address0 <= grp_load_test_h_Pipeline_VITIS_LOOP_11_1_fu_113_k_address0;
        else 
            k_address0 <= "XXXX";
        end if; 
    end process;


    k_ce0_assign_proc : process(grp_load_test_h_Pipeline_VITIS_LOOP_11_1_fu_113_k_ce0, grp_load_test_h_Pipeline_VITIS_LOOP_11_11_fu_127_k_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            k_ce0 <= grp_load_test_h_Pipeline_VITIS_LOOP_11_11_fu_127_k_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            k_ce0 <= grp_load_test_h_Pipeline_VITIS_LOOP_11_1_fu_113_k_ce0;
        else 
            k_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    n_address0_assign_proc : process(grp_load_test_h_Pipeline_VITIS_LOOP_11_12_fu_120_n_address0, grp_load_test_h_Pipeline_VITIS_LOOP_11_13_fu_134_n_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            n_address0 <= grp_load_test_h_Pipeline_VITIS_LOOP_11_13_fu_134_n_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            n_address0 <= grp_load_test_h_Pipeline_VITIS_LOOP_11_12_fu_120_n_address0;
        else 
            n_address0 <= "XXXX";
        end if; 
    end process;


    n_ce0_assign_proc : process(grp_load_test_h_Pipeline_VITIS_LOOP_11_12_fu_120_n_ce0, grp_load_test_h_Pipeline_VITIS_LOOP_11_13_fu_134_n_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            n_ce0 <= grp_load_test_h_Pipeline_VITIS_LOOP_11_13_fu_134_n_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            n_ce0 <= grp_load_test_h_Pipeline_VITIS_LOOP_11_12_fu_120_n_ce0;
        else 
            n_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    st_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            st_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            st_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            st_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            st_address0 <= "XXX";
        end if; 
    end process;


    st_address1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            st_address1 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            st_address1 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            st_address1 <= "XXX";
        end if; 
    end process;


    st_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_block_state4_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done)))) then 
            st_ce0 <= ap_const_logic_1;
        else 
            st_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    st_ce1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_block_state4_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done)))) then 
            st_ce1 <= ap_const_logic_1;
        else 
            st_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    st_d0_assign_proc : process(grp_load_test_h_Pipeline_VITIS_LOOP_11_12_fu_120_x_4_out, grp_load_test_h_Pipeline_VITIS_LOOP_11_11_fu_127_x_2_out, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            st_d0 <= grp_load_test_h_Pipeline_VITIS_LOOP_11_11_fu_127_x_2_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            st_d0 <= grp_load_test_h_Pipeline_VITIS_LOOP_11_12_fu_120_x_4_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            st_d0 <= ap_const_lv64_80400C0600000000;
        else 
            st_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    st_d1_assign_proc : process(grp_load_test_h_Pipeline_VITIS_LOOP_11_1_fu_113_x_out, grp_load_test_h_Pipeline_VITIS_LOOP_11_13_fu_134_x_6_out, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            st_d1 <= grp_load_test_h_Pipeline_VITIS_LOOP_11_13_fu_134_x_6_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            st_d1 <= grp_load_test_h_Pipeline_VITIS_LOOP_11_1_fu_113_x_out;
        else 
            st_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    st_we0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_block_state4_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done)))) then 
            st_we0 <= ap_const_logic_1;
        else 
            st_we0 <= ap_const_logic_0;
        end if; 
    end process;


    st_we1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_block_state4_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done)))) then 
            st_we1 <= ap_const_logic_1;
        else 
            st_we1 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
