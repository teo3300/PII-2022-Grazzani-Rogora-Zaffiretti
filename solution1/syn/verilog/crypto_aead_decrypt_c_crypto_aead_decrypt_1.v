// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module crypto_aead_decrypt_c_crypto_aead_decrypt_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_address0,
        m_ce0,
        m_we0,
        m_d0,
        mlen,
        mlen_ap_vld,
        c_address0,
        c_ce0,
        c_q0,
        clen,
        ad_address0,
        ad_ce0,
        ad_q0,
        adlen,
        npub_address0,
        npub_ce0,
        npub_q0,
        k_address0,
        k_ce0,
        k_q0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 42'd1;
parameter    ap_ST_fsm_state2 = 42'd2;
parameter    ap_ST_fsm_state3 = 42'd4;
parameter    ap_ST_fsm_state4 = 42'd8;
parameter    ap_ST_fsm_state5 = 42'd16;
parameter    ap_ST_fsm_state6 = 42'd32;
parameter    ap_ST_fsm_state7 = 42'd64;
parameter    ap_ST_fsm_state8 = 42'd128;
parameter    ap_ST_fsm_state9 = 42'd256;
parameter    ap_ST_fsm_state10 = 42'd512;
parameter    ap_ST_fsm_state11 = 42'd1024;
parameter    ap_ST_fsm_state12 = 42'd2048;
parameter    ap_ST_fsm_state13 = 42'd4096;
parameter    ap_ST_fsm_state14 = 42'd8192;
parameter    ap_ST_fsm_state15 = 42'd16384;
parameter    ap_ST_fsm_state16 = 42'd32768;
parameter    ap_ST_fsm_state17 = 42'd65536;
parameter    ap_ST_fsm_state18 = 42'd131072;
parameter    ap_ST_fsm_state19 = 42'd262144;
parameter    ap_ST_fsm_state20 = 42'd524288;
parameter    ap_ST_fsm_state21 = 42'd1048576;
parameter    ap_ST_fsm_state22 = 42'd2097152;
parameter    ap_ST_fsm_state23 = 42'd4194304;
parameter    ap_ST_fsm_state24 = 42'd8388608;
parameter    ap_ST_fsm_state25 = 42'd16777216;
parameter    ap_ST_fsm_state26 = 42'd33554432;
parameter    ap_ST_fsm_state27 = 42'd67108864;
parameter    ap_ST_fsm_state28 = 42'd134217728;
parameter    ap_ST_fsm_state29 = 42'd268435456;
parameter    ap_ST_fsm_state30 = 42'd536870912;
parameter    ap_ST_fsm_state31 = 42'd1073741824;
parameter    ap_ST_fsm_state32 = 42'd2147483648;
parameter    ap_ST_fsm_state33 = 42'd4294967296;
parameter    ap_ST_fsm_state34 = 42'd8589934592;
parameter    ap_ST_fsm_state35 = 42'd17179869184;
parameter    ap_ST_fsm_state36 = 42'd34359738368;
parameter    ap_ST_fsm_state37 = 42'd68719476736;
parameter    ap_ST_fsm_state38 = 42'd137438953472;
parameter    ap_ST_fsm_state39 = 42'd274877906944;
parameter    ap_ST_fsm_state40 = 42'd549755813888;
parameter    ap_ST_fsm_state41 = 42'd1099511627776;
parameter    ap_ST_fsm_state42 = 42'd2199023255552;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] m_address0;
output   m_ce0;
output   m_we0;
output  [7:0] m_d0;
output  [63:0] mlen;
output   mlen_ap_vld;
output  [5:0] c_address0;
output   c_ce0;
input  [7:0] c_q0;
input  [63:0] clen;
output  [4:0] ad_address0;
output   ad_ce0;
input  [7:0] ad_q0;
input  [63:0] adlen;
output  [3:0] npub_address0;
output   npub_ce0;
input  [7:0] npub_q0;
output  [3:0] k_address0;
output   k_ce0;
input  [7:0] k_q0;
output  [0:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] m_address0;
reg m_ce0;
reg m_we0;
reg[7:0] m_d0;
reg mlen_ap_vld;
reg[5:0] c_address0;
reg c_ce0;
reg ad_ce0;
reg npub_ce0;
reg k_ce0;
reg[0:0] ap_return;

(* fsm_encoding = "none" *) reg   [41:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [63:0] reg_653;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state23;
wire   [0:0] icmp_ln28_fu_1146_p2;
wire    ap_CS_fsm_state30;
reg   [63:0] reg_660;
reg   [63:0] reg_667;
reg   [63:0] reg_674;
wire    ap_CS_fsm_state12;
reg   [63:0] reg_679;
reg   [63:0] reg_684;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state35;
reg   [63:0] reg_689;
reg   [63:0] reg_694;
reg   [63:0] reg_699;
reg   [63:0] reg_704;
wire   [63:0] grp_LOADBYTES_3_fu_555_ap_return;
reg   [63:0] reg_709;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state27;
wire   [60:0] empty_fu_714_p1;
reg   [60:0] empty_reg_1382;
wire   [0:0] icmp_ln178_fu_732_p2;
reg   [0:0] icmp_ln178_reg_1387;
wire   [60:0] add_ln181_1_fu_738_p2;
reg   [60:0] add_ln181_1_reg_1391;
wire   [63:0] grp_LOADBYTES_1_fu_480_ap_return;
reg   [63:0] K0_reg_1396;
wire    ap_CS_fsm_state2;
wire   [63:0] grp_LOADBYTES_1_fu_488_ap_return;
reg   [63:0] N0_reg_1404;
reg   [63:0] K1_reg_1409;
wire   [63:0] add_ln181_fu_744_p2;
reg   [63:0] add_ln181_reg_1416;
wire   [63:0] s_3_14_fu_758_p2;
wire   [63:0] s_4_13_fu_763_p2;
wire   [0:0] icmp_ln208_fu_768_p2;
reg   [0:0] icmp_ln208_reg_1434;
wire   [0:0] icmp_ln210_fu_782_p2;
reg   [0:0] icmp_ln210_reg_1438;
wire    ap_CS_fsm_state11;
wire   [4:0] trunc_ln210_1_fu_859_p1;
reg   [4:0] trunc_ln210_1_reg_1519;
wire   [0:0] icmp_ln210_1_fu_850_p2;
wire   [31:0] trunc_ln221_fu_916_p1;
reg   [31:0] trunc_ln221_reg_1524;
reg   [63:0] s_0_46_reg_1529;
reg   [63:0] s_1_44_reg_1534;
reg   [63:0] s_2_44_reg_1539;
wire   [63:0] s_0_52_fu_978_p2;
reg   [63:0] s_0_52_reg_1544;
wire    ap_CS_fsm_state16;
reg   [63:0] s_0_58_reg_1549;
wire    ap_CS_fsm_state19;
reg   [63:0] s_1_55_reg_1554;
reg   [63:0] s_2_55_reg_1559;
reg   [63:0] s_3_57_reg_1564;
reg   [63:0] s_4_58_reg_1569;
wire   [63:0] s_4_59_fu_984_p2;
wire    ap_CS_fsm_state20;
wire   [0:0] icmp_ln238_fu_999_p2;
reg   [0:0] icmp_ln238_reg_1579;
wire    ap_CS_fsm_state21;
wire   [5:0] trunc_ln238_2_fu_1073_p1;
reg   [5:0] trunc_ln238_2_reg_1663;
wire   [0:0] icmp_ln238_1_fu_1067_p2;
wire   [5:0] trunc_ln249_fu_1118_p1;
reg   [5:0] trunc_ln249_reg_1668;
wire   [4:0] trunc_ln249_1_fu_1122_p1;
reg   [4:0] trunc_ln249_1_reg_1673;
wire   [31:0] trunc_ln249_2_fu_1126_p1;
reg   [31:0] trunc_ln249_2_reg_1678;
wire   [0:0] icmp_ln28_1_fu_1131_p2;
reg   [0:0] icmp_ln28_1_reg_1683;
wire   [63:0] xor_ln240_fu_1137_p2;
reg   [63:0] xor_ln240_reg_1687;
wire   [3:0] add_ln28_1_fu_1152_p2;
wire   [63:0] xor_ln250_fu_1251_p2;
reg   [63:0] xor_ln250_reg_1700;
wire   [30:0] trunc_ln28_fu_1258_p1;
reg   [30:0] trunc_ln28_reg_1705;
wire   [63:0] sub_ln253_fu_1275_p2;
reg   [63:0] sub_ln253_reg_1714;
wire    ap_CS_fsm_state29;
wire   [63:0] s_3_fu_1319_p2;
reg   [63:0] s_3_reg_1719;
wire    ap_CS_fsm_state36;
wire   [63:0] s_4_73_fu_1325_p2;
reg   [63:0] s_4_73_reg_1724;
reg   [3:0] t_address0;
reg    t_ce0;
reg    t_we0;
reg   [7:0] t_d0;
wire   [7:0] t_q0;
wire    grp_LOADBYTES_1_fu_480_ap_start;
wire    grp_LOADBYTES_1_fu_480_ap_done;
wire    grp_LOADBYTES_1_fu_480_ap_idle;
wire    grp_LOADBYTES_1_fu_480_ap_ready;
wire   [3:0] grp_LOADBYTES_1_fu_480_k_address0;
wire    grp_LOADBYTES_1_fu_480_k_ce0;
reg   [3:0] grp_LOADBYTES_1_fu_480_bytes;
wire    grp_LOADBYTES_1_fu_488_ap_start;
wire    grp_LOADBYTES_1_fu_488_ap_done;
wire    grp_LOADBYTES_1_fu_488_ap_idle;
wire    grp_LOADBYTES_1_fu_488_ap_ready;
wire   [3:0] grp_LOADBYTES_1_fu_488_k_address0;
wire    grp_LOADBYTES_1_fu_488_k_ce0;
reg   [3:0] grp_LOADBYTES_1_fu_488_bytes;
wire    grp_ROUND_fu_498_ap_ready;
reg   [63:0] grp_ROUND_fu_498_s_0_read;
reg   [63:0] grp_ROUND_fu_498_s_1_read;
reg   [63:0] grp_ROUND_fu_498_s_2_read;
reg   [63:0] grp_ROUND_fu_498_s_3_read;
reg   [63:0] grp_ROUND_fu_498_s_4_read;
reg   [7:0] grp_ROUND_fu_498_C;
wire   [63:0] grp_ROUND_fu_498_ap_return_0;
wire   [63:0] grp_ROUND_fu_498_ap_return_1;
wire   [63:0] grp_ROUND_fu_498_ap_return_2;
wire   [63:0] grp_ROUND_fu_498_ap_return_3;
wire   [63:0] grp_ROUND_fu_498_ap_return_4;
wire    grp_ROUND_fu_513_ap_ready;
reg   [7:0] grp_ROUND_fu_513_C;
wire   [63:0] grp_ROUND_fu_513_ap_return_0;
wire   [63:0] grp_ROUND_fu_513_ap_return_1;
wire   [63:0] grp_ROUND_fu_513_ap_return_2;
wire   [63:0] grp_ROUND_fu_513_ap_return_3;
wire   [63:0] grp_ROUND_fu_513_ap_return_4;
wire    grp_LOADBYTES_2_fu_545_ap_start;
wire    grp_LOADBYTES_2_fu_545_ap_done;
wire    grp_LOADBYTES_2_fu_545_ap_idle;
wire    grp_LOADBYTES_2_fu_545_ap_ready;
wire   [4:0] grp_LOADBYTES_2_fu_545_ad_address0;
wire    grp_LOADBYTES_2_fu_545_ad_ce0;
reg   [4:0] grp_LOADBYTES_2_fu_545_bytes;
reg   [31:0] grp_LOADBYTES_2_fu_545_n;
wire   [63:0] grp_LOADBYTES_2_fu_545_ap_return;
wire    grp_LOADBYTES_3_fu_555_ap_start;
wire    grp_LOADBYTES_3_fu_555_ap_done;
wire    grp_LOADBYTES_3_fu_555_ap_idle;
wire    grp_LOADBYTES_3_fu_555_ap_ready;
wire   [5:0] grp_LOADBYTES_3_fu_555_c_address0;
wire    grp_LOADBYTES_3_fu_555_c_ce0;
reg   [5:0] grp_LOADBYTES_3_fu_555_bytes;
reg   [31:0] grp_LOADBYTES_3_fu_555_n;
wire    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_ap_start;
wire    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_ap_done;
wire    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_ap_idle;
wire    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_ap_ready;
wire   [4:0] grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_m_address0;
wire    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_m_ce0;
wire    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_m_we0;
wire   [7:0] grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_m_d0;
wire    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_ap_start;
wire    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_ap_done;
wire    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_ap_idle;
wire    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_ap_ready;
wire   [63:0] grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_x_assign_3_out;
wire    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_x_assign_3_out_ap_vld;
wire    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_start;
wire    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_done;
wire    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_idle;
wire    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_ready;
wire   [3:0] grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_t_address0;
wire    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_t_ce0;
wire    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_t_we0;
wire   [7:0] grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_t_d0;
wire    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_start;
wire    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_done;
wire    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_idle;
wire    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_ready;
wire   [3:0] grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_t_address0;
wire    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_t_ce0;
wire    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_t_we0;
wire   [7:0] grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_t_d0;
wire    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_start;
wire    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_done;
wire    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_idle;
wire    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_ready;
wire   [5:0] grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_c_address0;
wire    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_c_ce0;
wire   [3:0] grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_t_address0;
wire    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_t_ce0;
wire   [8:0] grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_result_1_out;
wire    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_result_1_out_ap_vld;
wire   [60:0] and_ln210_1_fu_907_p3;
reg   [60:0] ap_phi_mux_adlen_addr_0_lcssa_phi_fu_259_p4;
reg   [60:0] adlen_addr_0_lcssa_reg_256;
wire   [4:0] and_ln_fu_895_p3;
reg   [4:0] ad_addr_0_lcssa_idx_reg_266;
reg   [63:0] s_0_1_25_reg_278;
reg   [63:0] s_4_1_21_reg_287;
reg   [63:0] s_3_1_22_reg_296;
reg   [63:0] s_2_1_23_reg_305;
reg   [63:0] s_1_1_24_reg_314;
reg   [63:0] ap_phi_mux_s_4_2_26_phi_fu_326_p4;
reg   [63:0] s_4_2_26_reg_323;
reg   [63:0] ap_phi_mux_s_3_2_27_phi_fu_335_p4;
reg   [63:0] s_3_2_27_reg_332;
reg   [63:0] ap_phi_mux_s_2_2_28_phi_fu_345_p4;
reg   [63:0] s_2_2_28_reg_342;
reg   [63:0] ap_phi_mux_s_1_2_29_phi_fu_355_p4;
reg   [63:0] s_1_2_29_reg_352;
reg   [63:0] ap_phi_mux_s_0_2_30_phi_fu_365_p4;
reg   [63:0] s_0_2_30_reg_362;
wire   [60:0] and_ln238_1_fu_1109_p3;
reg   [60:0] ap_phi_mux_clen_addr_0_lcssa_phi_fu_375_p4;
reg   [60:0] clen_addr_0_lcssa_reg_372;
wire   [5:0] and_ln1_fu_1097_p3;
reg   [5:0] ap_phi_mux_c_addr_0_lcssa_idx_phi_fu_386_p4;
reg   [5:0] c_addr_0_lcssa_idx_reg_382;
reg   [3:0] i_reg_394;
reg   [63:0] s_4_4_32_reg_405;
reg   [63:0] s_3_4_33_reg_415;
reg   [63:0] s_2_4_34_reg_426;
reg   [63:0] s_1_4_35_reg_437;
reg   [63:0] x_assign_1_reg_448;
reg   [63:0] x_addr_0_lcssa_i_reg_459;
wire   [0:0] result_fu_1347_p2;
reg   [0:0] ap_phi_mux_retval_0_phi_fu_473_p4;
reg   [0:0] retval_0_reg_469;
wire    ap_CS_fsm_state42;
reg    grp_LOADBYTES_1_fu_480_ap_start_reg;
wire    ap_CS_fsm_state3;
reg    grp_LOADBYTES_1_fu_488_ap_start_reg;
wire   [63:0] s_0_45_fu_921_p2;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state26;
wire   [63:0] s_0_60_fu_1292_p2;
wire   [63:0] s_1_57_fu_1299_p2;
wire   [63:0] s_2_57_fu_1305_p2;
reg    grp_LOADBYTES_2_fu_545_ap_start_reg;
reg    grp_LOADBYTES_3_fu_555_ap_start_reg;
reg    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_ap_start_reg;
wire    ap_CS_fsm_state28;
reg    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_ap_start_reg;
reg    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_start_reg;
wire    ap_CS_fsm_state37;
reg    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_start_reg;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state39;
reg    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_start_reg;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state41;
reg   [8:0] result_1_loc_fu_156;
wire   [63:0] zext_ln28_3_fu_1200_p1;
reg   [63:0] ad_assign_fu_168;
wire   [63:0] add_ln217_fu_864_p2;
reg   [63:0] adlen_assign_fu_172;
wire   [63:0] add_ln218_fu_870_p2;
reg   [63:0] s_0_26_fu_176;
reg   [63:0] s_1_43_fu_180;
reg   [63:0] s_2_43_fu_184;
reg   [63:0] s_3_45_fu_188;
reg   [63:0] s_4_46_fu_192;
reg   [63:0] c_assign_fu_196;
wire   [63:0] add_ln244_fu_1205_p2;
reg   [63:0] clen_assign_1_fu_200;
wire   [63:0] add_ln246_fu_1211_p2;
reg   [63:0] s_0_59_fu_204;
reg   [63:0] s_1_56_fu_208;
reg   [63:0] s_2_56_fu_212;
reg   [63:0] s_3_58_fu_216;
reg   [63:0] s_4_60_fu_220;
wire   [7:0] trunc_ln28_5_fu_1185_p1;
wire   [59:0] tmp_2_fu_722_p4;
wire   [60:0] empty_20_fu_718_p1;
wire   [60:0] tmp_4_fu_773_p4;
wire   [60:0] tmp_6_fu_840_p4;
wire   [1:0] tmp_3_fu_886_p4;
wire   [2:0] trunc_ln210_fu_904_p1;
wire   [63:0] shl_ln_fu_952_p3;
wire   [63:0] sub_ln222_fu_960_p2;
wire   [63:0] shl_ln222_fu_966_p2;
wire   [63:0] xor_ln222_fu_972_p2;
wire   [60:0] tmp_7_fu_990_p4;
wire   [60:0] tmp_8_fu_1057_p4;
wire   [5:0] trunc_ln238_fu_1078_p1;
wire   [5:0] add_ln238_fu_1081_p2;
wire   [2:0] tmp_5_fu_1087_p4;
wire   [2:0] trunc_ln238_1_fu_1106_p1;
wire   [2:0] trunc_ln28_4_fu_1158_p1;
wire   [5:0] shl_ln1_fu_1162_p3;
wire   [5:0] sub_ln28_fu_1170_p2;
wire   [63:0] zext_ln28_2_fu_1176_p1;
wire   [63:0] lshr_ln28_fu_1180_p2;
wire   [4:0] zext_ln28_fu_1142_p1;
wire   [4:0] trunc_ln238_3_fu_1190_p1;
wire   [4:0] add_ln28_fu_1194_p2;
wire   [63:0] shl_ln3_fu_1267_p3;
wire   [63:0] or_ln252_fu_1281_p2;
wire   [63:0] shl_ln253_fu_1287_p2;
wire   [8:0] add_ln283_fu_1333_p2;
wire   [0:0] tmp_9_fu_1339_p3;
reg   [0:0] ap_return_preg;
reg   [41:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_block_state2_on_subcall_done;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_block_state4_on_subcall_done;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
reg    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
reg    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
reg    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
reg    ap_ST_fsm_state27_blk;
reg    ap_block_state28_on_subcall_done;
reg    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
reg    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
reg    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
reg    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 42'd1;
#0 grp_LOADBYTES_1_fu_480_ap_start_reg = 1'b0;
#0 grp_LOADBYTES_1_fu_488_ap_start_reg = 1'b0;
#0 grp_LOADBYTES_2_fu_545_ap_start_reg = 1'b0;
#0 grp_LOADBYTES_3_fu_555_ap_start_reg = 1'b0;
#0 grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_ap_start_reg = 1'b0;
#0 grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_ap_start_reg = 1'b0;
#0 grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_start_reg = 1'b0;
#0 grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_start_reg = 1'b0;
#0 grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_start_reg = 1'b0;
#0 ap_return_preg = 1'd0;
end

crypto_aead_decrypt_c_crypto_aead_decrypt_1_t_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
t_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(t_address0),
    .ce0(t_ce0),
    .we0(t_we0),
    .d0(t_d0),
    .q0(t_q0)
);

crypto_aead_decrypt_c_LOADBYTES_1 grp_LOADBYTES_1_fu_480(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_LOADBYTES_1_fu_480_ap_start),
    .ap_done(grp_LOADBYTES_1_fu_480_ap_done),
    .ap_idle(grp_LOADBYTES_1_fu_480_ap_idle),
    .ap_ready(grp_LOADBYTES_1_fu_480_ap_ready),
    .k_address0(grp_LOADBYTES_1_fu_480_k_address0),
    .k_ce0(grp_LOADBYTES_1_fu_480_k_ce0),
    .k_q0(k_q0),
    .bytes(grp_LOADBYTES_1_fu_480_bytes),
    .ap_return(grp_LOADBYTES_1_fu_480_ap_return)
);

crypto_aead_decrypt_c_LOADBYTES_1 grp_LOADBYTES_1_fu_488(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_LOADBYTES_1_fu_488_ap_start),
    .ap_done(grp_LOADBYTES_1_fu_488_ap_done),
    .ap_idle(grp_LOADBYTES_1_fu_488_ap_idle),
    .ap_ready(grp_LOADBYTES_1_fu_488_ap_ready),
    .k_address0(grp_LOADBYTES_1_fu_488_k_address0),
    .k_ce0(grp_LOADBYTES_1_fu_488_k_ce0),
    .k_q0(npub_q0),
    .bytes(grp_LOADBYTES_1_fu_488_bytes),
    .ap_return(grp_LOADBYTES_1_fu_488_ap_return)
);

crypto_aead_decrypt_c_ROUND grp_ROUND_fu_498(
    .ap_ready(grp_ROUND_fu_498_ap_ready),
    .s_0_read(grp_ROUND_fu_498_s_0_read),
    .s_1_read(grp_ROUND_fu_498_s_1_read),
    .s_2_read(grp_ROUND_fu_498_s_2_read),
    .s_3_read(grp_ROUND_fu_498_s_3_read),
    .s_4_read(grp_ROUND_fu_498_s_4_read),
    .C(grp_ROUND_fu_498_C),
    .ap_return_0(grp_ROUND_fu_498_ap_return_0),
    .ap_return_1(grp_ROUND_fu_498_ap_return_1),
    .ap_return_2(grp_ROUND_fu_498_ap_return_2),
    .ap_return_3(grp_ROUND_fu_498_ap_return_3),
    .ap_return_4(grp_ROUND_fu_498_ap_return_4)
);

crypto_aead_decrypt_c_ROUND grp_ROUND_fu_513(
    .ap_ready(grp_ROUND_fu_513_ap_ready),
    .s_0_read(grp_ROUND_fu_498_ap_return_0),
    .s_1_read(grp_ROUND_fu_498_ap_return_1),
    .s_2_read(grp_ROUND_fu_498_ap_return_2),
    .s_3_read(grp_ROUND_fu_498_ap_return_3),
    .s_4_read(grp_ROUND_fu_498_ap_return_4),
    .C(grp_ROUND_fu_513_C),
    .ap_return_0(grp_ROUND_fu_513_ap_return_0),
    .ap_return_1(grp_ROUND_fu_513_ap_return_1),
    .ap_return_2(grp_ROUND_fu_513_ap_return_2),
    .ap_return_3(grp_ROUND_fu_513_ap_return_3),
    .ap_return_4(grp_ROUND_fu_513_ap_return_4)
);

crypto_aead_decrypt_c_LOADBYTES_2 grp_LOADBYTES_2_fu_545(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_LOADBYTES_2_fu_545_ap_start),
    .ap_done(grp_LOADBYTES_2_fu_545_ap_done),
    .ap_idle(grp_LOADBYTES_2_fu_545_ap_idle),
    .ap_ready(grp_LOADBYTES_2_fu_545_ap_ready),
    .ad_address0(grp_LOADBYTES_2_fu_545_ad_address0),
    .ad_ce0(grp_LOADBYTES_2_fu_545_ad_ce0),
    .ad_q0(ad_q0),
    .bytes(grp_LOADBYTES_2_fu_545_bytes),
    .n(grp_LOADBYTES_2_fu_545_n),
    .ap_return(grp_LOADBYTES_2_fu_545_ap_return)
);

crypto_aead_decrypt_c_LOADBYTES_3 grp_LOADBYTES_3_fu_555(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_LOADBYTES_3_fu_555_ap_start),
    .ap_done(grp_LOADBYTES_3_fu_555_ap_done),
    .ap_idle(grp_LOADBYTES_3_fu_555_ap_idle),
    .ap_ready(grp_LOADBYTES_3_fu_555_ap_ready),
    .c_address0(grp_LOADBYTES_3_fu_555_c_address0),
    .c_ce0(grp_LOADBYTES_3_fu_555_c_ce0),
    .c_q0(c_q0),
    .bytes(grp_LOADBYTES_3_fu_555_bytes),
    .n(grp_LOADBYTES_3_fu_555_n),
    .ap_return(grp_LOADBYTES_3_fu_555_ap_return)
);

crypto_aead_decrypt_c_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1 grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_ap_start),
    .ap_done(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_ap_done),
    .ap_idle(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_ap_idle),
    .ap_ready(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_ap_ready),
    .trunc_ln28_5(trunc_ln28_reg_1705),
    .xor_ln250(xor_ln250_reg_1700),
    .trunc_ln249_1(trunc_ln249_1_reg_1673),
    .m_address0(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_m_address0),
    .m_ce0(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_m_ce0),
    .m_we0(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_m_we0),
    .m_d0(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_m_d0)
);

crypto_aead_decrypt_c_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1 grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_ap_start),
    .ap_done(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_ap_done),
    .ap_idle(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_ap_idle),
    .ap_ready(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_ap_ready),
    .x_assign_1(x_assign_1_reg_448),
    .trunc_ln28_5(trunc_ln28_reg_1705),
    .x_assign_3_out(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_x_assign_3_out),
    .x_assign_3_out_ap_vld(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_x_assign_3_out_ap_vld)
);

crypto_aead_decrypt_c_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11 grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_start),
    .ap_done(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_done),
    .ap_idle(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_idle),
    .ap_ready(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_ready),
    .s_3(s_3_reg_1719),
    .t_address0(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_t_address0),
    .t_ce0(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_t_ce0),
    .t_we0(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_t_we0),
    .t_d0(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_t_d0)
);

crypto_aead_decrypt_c_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12 grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_start),
    .ap_done(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_done),
    .ap_idle(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_idle),
    .ap_ready(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_ready),
    .s_4_45(s_4_73_reg_1724),
    .t_address0(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_t_address0),
    .t_ce0(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_t_ce0),
    .t_we0(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_t_we0),
    .t_d0(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_t_d0)
);

crypto_aead_decrypt_c_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12 grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_start),
    .ap_done(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_done),
    .ap_idle(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_idle),
    .ap_ready(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_ready),
    .trunc_ln3(trunc_ln249_reg_1668),
    .c_addr_0_lcssa_idx(c_addr_0_lcssa_idx_reg_382),
    .c_address0(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_c_address0),
    .c_ce0(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_c_ce0),
    .c_q0(c_q0),
    .t_address0(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_t_address0),
    .t_ce0(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_t_ce0),
    .t_q0(t_q0),
    .result_1_out(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_result_1_out),
    .result_1_out_ap_vld(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_result_1_out_ap_vld)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state42)) begin
            ap_return_preg <= ap_phi_mux_retval_0_phi_fu_473_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_LOADBYTES_1_fu_480_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) | ((ap_start == 1'b1) & (icmp_ln178_fu_732_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
            grp_LOADBYTES_1_fu_480_ap_start_reg <= 1'b1;
        end else if ((grp_LOADBYTES_1_fu_480_ap_ready == 1'b1)) begin
            grp_LOADBYTES_1_fu_480_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_LOADBYTES_1_fu_488_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) | ((ap_start == 1'b1) & (icmp_ln178_fu_732_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
            grp_LOADBYTES_1_fu_488_ap_start_reg <= 1'b1;
        end else if ((grp_LOADBYTES_1_fu_488_ap_ready == 1'b1)) begin
            grp_LOADBYTES_1_fu_488_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_LOADBYTES_2_fu_545_ap_start_reg <= 1'b0;
    end else begin
        if ((((icmp_ln210_1_fu_850_p2 == 1'd0) & (icmp_ln210_reg_1438 == 1'd0) & (1'b1 == ap_CS_fsm_state11)) | ((1'b1 == ap_CS_fsm_state11) & ((icmp_ln210_1_fu_850_p2 == 1'd1) | (icmp_ln210_reg_1438 == 1'd1))))) begin
            grp_LOADBYTES_2_fu_545_ap_start_reg <= 1'b1;
        end else if ((grp_LOADBYTES_2_fu_545_ap_ready == 1'b1)) begin
            grp_LOADBYTES_2_fu_545_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_LOADBYTES_3_fu_555_ap_start_reg <= 1'b0;
    end else begin
        if ((((icmp_ln238_1_fu_1067_p2 == 1'd0) & (icmp_ln238_reg_1579 == 1'd0) & (1'b1 == ap_CS_fsm_state21)) | ((1'b1 == ap_CS_fsm_state21) & ((icmp_ln238_1_fu_1067_p2 == 1'd1) | (icmp_ln238_reg_1579 == 1'd1))))) begin
            grp_LOADBYTES_3_fu_555_ap_start_reg <= 1'b1;
        end else if ((grp_LOADBYTES_3_fu_555_ap_ready == 1'b1)) begin
            grp_LOADBYTES_3_fu_555_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state40)) begin
            grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_start_reg <= 1'b1;
        end else if ((grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_ready == 1'b1)) begin
            grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state36)) begin
            grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_start_reg <= 1'b1;
        end else if ((grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_ready == 1'b1)) begin
            grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state38)) begin
            grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_start_reg <= 1'b1;
        end else if ((grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_ready == 1'b1)) begin
            grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_ap_start_reg <= 1'b0;
    end else begin
        if (((grp_LOADBYTES_3_fu_555_ap_done == 1'b1) & (icmp_ln28_1_reg_1683 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
            grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_ap_start_reg <= 1'b1;
        end else if ((grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_ap_ready == 1'b1)) begin
            grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_ap_start_reg <= 1'b0;
    end else begin
        if (((grp_LOADBYTES_3_fu_555_ap_done == 1'b1) & (icmp_ln28_1_reg_1683 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
            grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_ap_start_reg <= 1'b1;
        end else if ((grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_ap_ready == 1'b1)) begin
            grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln210_fu_782_p2 == 1'd1) & (icmp_ln208_fu_768_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
                ad_addr_0_lcssa_idx_reg_266[3] <= 1'b0;
        ad_addr_0_lcssa_idx_reg_266[4] <= 1'b0;
    end else if (((icmp_ln210_1_fu_850_p2 == 1'd1) & (icmp_ln210_reg_1438 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
                ad_addr_0_lcssa_idx_reg_266[4 : 3] <= and_ln_fu_895_p3[4 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln210_fu_782_p2 == 1'd0) & (icmp_ln208_fu_768_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        ad_assign_fu_168 <= 64'd0;
    end else if (((icmp_ln210_1_fu_850_p2 == 1'd0) & (icmp_ln210_reg_1438 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        ad_assign_fu_168 <= add_ln217_fu_864_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln210_fu_782_p2 == 1'd1) & (icmp_ln208_fu_768_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        adlen_addr_0_lcssa_reg_256 <= empty_reg_1382;
    end else if (((icmp_ln210_1_fu_850_p2 == 1'd1) & (icmp_ln210_reg_1438 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        adlen_addr_0_lcssa_reg_256 <= and_ln210_1_fu_907_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln210_fu_782_p2 == 1'd0) & (icmp_ln208_fu_768_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        adlen_assign_fu_172 <= adlen;
    end else if (((icmp_ln210_1_fu_850_p2 == 1'd0) & (icmp_ln210_reg_1438 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        adlen_assign_fu_172 <= add_ln218_fu_870_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln238_fu_999_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                c_addr_0_lcssa_idx_reg_382[3] <= 1'b0;
        c_addr_0_lcssa_idx_reg_382[4] <= 1'b0;
        c_addr_0_lcssa_idx_reg_382[5] <= 1'b0;
    end else if (((icmp_ln238_1_fu_1067_p2 == 1'd1) & (icmp_ln238_reg_1579 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
                c_addr_0_lcssa_idx_reg_382[5 : 3] <= and_ln1_fu_1097_p3[5 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln238_fu_999_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        c_assign_fu_196 <= 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln28_fu_1146_p2 == 1'd1))) begin
        c_assign_fu_196 <= add_ln244_fu_1205_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln238_fu_999_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        clen_addr_0_lcssa_reg_372 <= add_ln181_1_reg_1391;
    end else if (((icmp_ln238_1_fu_1067_p2 == 1'd1) & (icmp_ln238_reg_1579 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        clen_addr_0_lcssa_reg_372 <= and_ln238_1_fu_1109_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln238_fu_999_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        clen_assign_1_fu_200 <= add_ln181_reg_1416;
    end else if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln28_fu_1146_p2 == 1'd1))) begin
        clen_assign_1_fu_200 <= add_ln246_fu_1211_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_LOADBYTES_3_fu_555_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
        i_reg_394 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln28_fu_1146_p2 == 1'd0))) begin
        i_reg_394 <= add_ln28_1_fu_1152_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (icmp_ln178_fu_732_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        retval_0_reg_469 <= 1'd1;
    end else if (((icmp_ln178_reg_1387 == 1'd0) & (1'b1 == ap_CS_fsm_state42))) begin
        retval_0_reg_469 <= result_fu_1347_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln210_fu_782_p2 == 1'd1) & (icmp_ln208_fu_768_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        s_0_1_25_reg_278 <= grp_ROUND_fu_498_ap_return_0;
    end else if (((icmp_ln210_1_fu_850_p2 == 1'd1) & (icmp_ln210_reg_1438 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        s_0_1_25_reg_278 <= s_0_26_fu_176;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln208_fu_768_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        s_0_2_30_reg_362 <= grp_ROUND_fu_498_ap_return_0;
    end else if (((icmp_ln208_reg_1434 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        s_0_2_30_reg_362 <= s_0_58_reg_1549;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln238_fu_999_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        s_0_59_fu_204 <= ap_phi_mux_s_0_2_30_phi_fu_365_p4;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        s_0_59_fu_204 <= grp_ROUND_fu_498_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln210_fu_782_p2 == 1'd1) & (icmp_ln208_fu_768_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        s_1_1_24_reg_314 <= grp_ROUND_fu_498_ap_return_1;
    end else if (((icmp_ln210_1_fu_850_p2 == 1'd1) & (icmp_ln210_reg_1438 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        s_1_1_24_reg_314 <= s_1_43_fu_180;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln208_fu_768_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        s_1_2_29_reg_352 <= grp_ROUND_fu_498_ap_return_1;
    end else if (((icmp_ln208_reg_1434 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        s_1_2_29_reg_352 <= s_1_55_reg_1554;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln238_fu_999_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        s_1_4_35_reg_437 <= ap_phi_mux_s_1_2_29_phi_fu_355_p4;
    end else if (((icmp_ln238_1_fu_1067_p2 == 1'd1) & (icmp_ln238_reg_1579 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        s_1_4_35_reg_437 <= s_1_56_fu_208;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln238_fu_999_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        s_1_56_fu_208 <= ap_phi_mux_s_1_2_29_phi_fu_355_p4;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        s_1_56_fu_208 <= grp_ROUND_fu_498_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln210_fu_782_p2 == 1'd1) & (icmp_ln208_fu_768_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        s_2_1_23_reg_305 <= grp_ROUND_fu_498_ap_return_2;
    end else if (((icmp_ln210_1_fu_850_p2 == 1'd1) & (icmp_ln210_reg_1438 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        s_2_1_23_reg_305 <= s_2_43_fu_184;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln208_fu_768_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        s_2_2_28_reg_342 <= grp_ROUND_fu_498_ap_return_2;
    end else if (((icmp_ln208_reg_1434 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        s_2_2_28_reg_342 <= s_2_55_reg_1559;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln238_fu_999_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        s_2_4_34_reg_426 <= ap_phi_mux_s_2_2_28_phi_fu_345_p4;
    end else if (((icmp_ln238_1_fu_1067_p2 == 1'd1) & (icmp_ln238_reg_1579 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        s_2_4_34_reg_426 <= s_2_56_fu_212;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln238_fu_999_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        s_2_56_fu_212 <= ap_phi_mux_s_2_2_28_phi_fu_345_p4;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        s_2_56_fu_212 <= grp_ROUND_fu_498_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln210_fu_782_p2 == 1'd1) & (icmp_ln208_fu_768_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        s_3_1_22_reg_296 <= s_3_14_fu_758_p2;
    end else if (((icmp_ln210_1_fu_850_p2 == 1'd1) & (icmp_ln210_reg_1438 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        s_3_1_22_reg_296 <= s_3_45_fu_188;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln208_fu_768_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        s_3_2_27_reg_332 <= s_3_14_fu_758_p2;
    end else if (((icmp_ln208_reg_1434 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        s_3_2_27_reg_332 <= s_3_57_reg_1564;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln210_fu_782_p2 == 1'd0) & (icmp_ln208_fu_768_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        s_3_45_fu_188 <= s_3_14_fu_758_p2;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        s_3_45_fu_188 <= grp_ROUND_fu_498_ap_return_3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln238_fu_999_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        s_3_4_33_reg_415 <= ap_phi_mux_s_3_2_27_phi_fu_335_p4;
    end else if (((icmp_ln238_1_fu_1067_p2 == 1'd1) & (icmp_ln238_reg_1579 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        s_3_4_33_reg_415 <= s_3_58_fu_216;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln238_fu_999_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        s_3_58_fu_216 <= ap_phi_mux_s_3_2_27_phi_fu_335_p4;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        s_3_58_fu_216 <= grp_ROUND_fu_498_ap_return_3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln210_fu_782_p2 == 1'd1) & (icmp_ln208_fu_768_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        s_4_1_21_reg_287 <= s_4_13_fu_763_p2;
    end else if (((icmp_ln210_1_fu_850_p2 == 1'd1) & (icmp_ln210_reg_1438 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        s_4_1_21_reg_287 <= s_4_46_fu_192;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln208_fu_768_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        s_4_2_26_reg_323 <= s_4_13_fu_763_p2;
    end else if (((icmp_ln208_reg_1434 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        s_4_2_26_reg_323 <= s_4_58_reg_1569;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln210_fu_782_p2 == 1'd0) & (icmp_ln208_fu_768_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        s_4_46_fu_192 <= s_4_13_fu_763_p2;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        s_4_46_fu_192 <= grp_ROUND_fu_498_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln238_fu_999_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        s_4_4_32_reg_405 <= s_4_59_fu_984_p2;
    end else if (((icmp_ln238_1_fu_1067_p2 == 1'd1) & (icmp_ln238_reg_1579 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        s_4_4_32_reg_405 <= s_4_60_fu_220;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln238_fu_999_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        s_4_60_fu_220 <= s_4_59_fu_984_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        s_4_60_fu_220 <= grp_ROUND_fu_498_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_LOADBYTES_3_fu_555_ap_done == 1'b1) & (icmp_ln28_1_reg_1683 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        x_addr_0_lcssa_i_reg_459 <= x_assign_1_reg_448;
    end else if (((icmp_ln28_1_reg_1683 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        x_addr_0_lcssa_i_reg_459 <= grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_x_assign_3_out;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln238_fu_999_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        x_assign_1_reg_448 <= ap_phi_mux_s_0_2_30_phi_fu_365_p4;
    end else if (((icmp_ln238_1_fu_1067_p2 == 1'd1) & (icmp_ln238_reg_1579 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        x_assign_1_reg_448 <= s_0_59_fu_204;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        K0_reg_1396 <= grp_LOADBYTES_1_fu_480_ap_return;
        N0_reg_1404 <= grp_LOADBYTES_1_fu_488_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        K1_reg_1409 <= grp_LOADBYTES_1_fu_480_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln178_fu_732_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        add_ln181_1_reg_1391 <= add_ln181_1_fu_738_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_ln181_reg_1416 <= add_ln181_fu_744_p2;
        icmp_ln208_reg_1434 <= icmp_ln208_fu_768_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        empty_reg_1382 <= empty_fu_714_p1;
        icmp_ln178_reg_1387 <= icmp_ln178_fu_732_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln208_fu_768_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        icmp_ln210_reg_1438 <= icmp_ln210_fu_782_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        icmp_ln238_reg_1579 <= icmp_ln238_fu_999_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & ((icmp_ln238_1_fu_1067_p2 == 1'd1) | (icmp_ln238_reg_1579 == 1'd1)))) begin
        icmp_ln28_1_reg_1683 <= icmp_ln28_1_fu_1131_p2;
        trunc_ln249_1_reg_1673[4 : 3] <= trunc_ln249_1_fu_1122_p1[4 : 3];
        trunc_ln249_2_reg_1678 <= trunc_ln249_2_fu_1126_p1;
        trunc_ln249_reg_1668 <= trunc_ln249_fu_1118_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state23) & (icmp_ln28_fu_1146_p2 == 1'd1)))) begin
        reg_653 <= grp_ROUND_fu_498_ap_return_0;
        reg_660 <= grp_ROUND_fu_498_ap_return_1;
        reg_667 <= grp_ROUND_fu_498_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state23) & (icmp_ln28_fu_1146_p2 == 1'd1)))) begin
        reg_674 <= grp_ROUND_fu_498_ap_return_3;
        reg_679 <= grp_ROUND_fu_498_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        reg_684 <= grp_ROUND_fu_513_ap_return_0;
        reg_689 <= grp_ROUND_fu_513_ap_return_1;
        reg_694 <= grp_ROUND_fu_513_ap_return_2;
        reg_699 <= grp_ROUND_fu_513_ap_return_3;
        reg_704 <= grp_ROUND_fu_513_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state22))) begin
        reg_709 <= grp_LOADBYTES_3_fu_555_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_result_1_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state41))) begin
        result_1_loc_fu_156 <= grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_result_1_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((icmp_ln210_fu_782_p2 == 1'd0) & (icmp_ln208_fu_768_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10)))) begin
        s_0_26_fu_176 <= grp_ROUND_fu_498_ap_return_0;
        s_1_43_fu_180 <= grp_ROUND_fu_498_ap_return_1;
        s_2_43_fu_184 <= grp_ROUND_fu_498_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        s_0_46_reg_1529 <= grp_ROUND_fu_498_ap_return_0;
        s_1_44_reg_1534 <= grp_ROUND_fu_498_ap_return_1;
        s_2_44_reg_1539 <= grp_ROUND_fu_498_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        s_0_52_reg_1544 <= s_0_52_fu_978_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        s_0_58_reg_1549 <= grp_ROUND_fu_513_ap_return_0;
        s_1_55_reg_1554 <= grp_ROUND_fu_513_ap_return_1;
        s_2_55_reg_1559 <= grp_ROUND_fu_513_ap_return_2;
        s_3_57_reg_1564 <= grp_ROUND_fu_513_ap_return_3;
        s_4_58_reg_1569 <= grp_ROUND_fu_513_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        s_3_reg_1719 <= s_3_fu_1319_p2;
        s_4_73_reg_1724 <= s_4_73_fu_1325_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        sub_ln253_reg_1714[63 : 3] <= sub_ln253_fu_1275_p2[63 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln210_1_fu_850_p2 == 1'd0) & (icmp_ln210_reg_1438 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        trunc_ln210_1_reg_1519 <= trunc_ln210_1_fu_859_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & ((icmp_ln210_1_fu_850_p2 == 1'd1) | (icmp_ln210_reg_1438 == 1'd1)))) begin
        trunc_ln221_reg_1524 <= trunc_ln221_fu_916_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln238_1_fu_1067_p2 == 1'd0) & (icmp_ln238_reg_1579 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        trunc_ln238_2_reg_1663 <= trunc_ln238_2_fu_1073_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln28_1_reg_1683 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        trunc_ln28_reg_1705 <= trunc_ln28_fu_1258_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        xor_ln240_reg_1687 <= xor_ln240_fu_1137_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        xor_ln250_reg_1700 <= xor_ln250_fu_1251_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state12))) begin
        ad_ce0 = grp_LOADBYTES_2_fu_545_ad_ce0;
    end else begin
        ad_ce0 = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

always @ (*) begin
    if ((grp_LOADBYTES_2_fu_545_ap_done == 1'b0)) begin
        ap_ST_fsm_state12_blk = 1'b1;
    end else begin
        ap_ST_fsm_state12_blk = 1'b0;
    end
end

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

always @ (*) begin
    if ((grp_LOADBYTES_2_fu_545_ap_done == 1'b0)) begin
        ap_ST_fsm_state16_blk = 1'b1;
    end else begin
        ap_ST_fsm_state16_blk = 1'b0;
    end
end

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

always @ (*) begin
    if ((grp_LOADBYTES_3_fu_555_ap_done == 1'b0)) begin
        ap_ST_fsm_state22_blk = 1'b1;
    end else begin
        ap_ST_fsm_state22_blk = 1'b0;
    end
end

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

always @ (*) begin
    if ((grp_LOADBYTES_3_fu_555_ap_done == 1'b0)) begin
        ap_ST_fsm_state27_blk = 1'b1;
    end else begin
        ap_ST_fsm_state27_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state28_on_subcall_done)) begin
        ap_ST_fsm_state28_blk = 1'b1;
    end else begin
        ap_ST_fsm_state28_blk = 1'b0;
    end
end

assign ap_ST_fsm_state29_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state2_on_subcall_done)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

always @ (*) begin
    if ((grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_done == 1'b0)) begin
        ap_ST_fsm_state37_blk = 1'b1;
    end else begin
        ap_ST_fsm_state37_blk = 1'b0;
    end
end

assign ap_ST_fsm_state38_blk = 1'b0;

always @ (*) begin
    if ((grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_done == 1'b0)) begin
        ap_ST_fsm_state39_blk = 1'b1;
    end else begin
        ap_ST_fsm_state39_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

always @ (*) begin
    if ((grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_done == 1'b0)) begin
        ap_ST_fsm_state41_blk = 1'b1;
    end else begin
        ap_ST_fsm_state41_blk = 1'b0;
    end
end

assign ap_ST_fsm_state42_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state4_on_subcall_done)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln210_1_fu_850_p2 == 1'd1) & (icmp_ln210_reg_1438 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_phi_mux_adlen_addr_0_lcssa_phi_fu_259_p4 = and_ln210_1_fu_907_p3;
    end else begin
        ap_phi_mux_adlen_addr_0_lcssa_phi_fu_259_p4 = adlen_addr_0_lcssa_reg_256;
    end
end

always @ (*) begin
    if (((icmp_ln238_1_fu_1067_p2 == 1'd1) & (icmp_ln238_reg_1579 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        ap_phi_mux_c_addr_0_lcssa_idx_phi_fu_386_p4 = and_ln1_fu_1097_p3;
    end else begin
        ap_phi_mux_c_addr_0_lcssa_idx_phi_fu_386_p4 = c_addr_0_lcssa_idx_reg_382;
    end
end

always @ (*) begin
    if (((icmp_ln238_1_fu_1067_p2 == 1'd1) & (icmp_ln238_reg_1579 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        ap_phi_mux_clen_addr_0_lcssa_phi_fu_375_p4 = and_ln238_1_fu_1109_p3;
    end else begin
        ap_phi_mux_clen_addr_0_lcssa_phi_fu_375_p4 = clen_addr_0_lcssa_reg_372;
    end
end

always @ (*) begin
    if (((icmp_ln178_reg_1387 == 1'd0) & (1'b1 == ap_CS_fsm_state42))) begin
        ap_phi_mux_retval_0_phi_fu_473_p4 = result_fu_1347_p2;
    end else begin
        ap_phi_mux_retval_0_phi_fu_473_p4 = retval_0_reg_469;
    end
end

always @ (*) begin
    if (((icmp_ln208_reg_1434 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        ap_phi_mux_s_0_2_30_phi_fu_365_p4 = s_0_58_reg_1549;
    end else begin
        ap_phi_mux_s_0_2_30_phi_fu_365_p4 = s_0_2_30_reg_362;
    end
end

always @ (*) begin
    if (((icmp_ln208_reg_1434 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        ap_phi_mux_s_1_2_29_phi_fu_355_p4 = s_1_55_reg_1554;
    end else begin
        ap_phi_mux_s_1_2_29_phi_fu_355_p4 = s_1_2_29_reg_352;
    end
end

always @ (*) begin
    if (((icmp_ln208_reg_1434 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        ap_phi_mux_s_2_2_28_phi_fu_345_p4 = s_2_55_reg_1559;
    end else begin
        ap_phi_mux_s_2_2_28_phi_fu_345_p4 = s_2_2_28_reg_342;
    end
end

always @ (*) begin
    if (((icmp_ln208_reg_1434 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        ap_phi_mux_s_3_2_27_phi_fu_335_p4 = s_3_57_reg_1564;
    end else begin
        ap_phi_mux_s_3_2_27_phi_fu_335_p4 = s_3_2_27_reg_332;
    end
end

always @ (*) begin
    if (((icmp_ln208_reg_1434 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        ap_phi_mux_s_4_2_26_phi_fu_326_p4 = s_4_58_reg_1569;
    end else begin
        ap_phi_mux_s_4_2_26_phi_fu_326_p4 = s_4_2_26_reg_323;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        ap_return = ap_phi_mux_retval_0_phi_fu_473_p4;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        c_address0 = grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_c_address0;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state22))) begin
        c_address0 = grp_LOADBYTES_3_fu_555_c_address0;
    end else begin
        c_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        c_ce0 = grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_c_ce0;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state22))) begin
        c_ce0 = grp_LOADBYTES_3_fu_555_c_ce0;
    end else begin
        c_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_LOADBYTES_1_fu_480_bytes = 4'd8;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_LOADBYTES_1_fu_480_bytes = 4'd0;
    end else begin
        grp_LOADBYTES_1_fu_480_bytes = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_LOADBYTES_1_fu_488_bytes = 4'd8;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_LOADBYTES_1_fu_488_bytes = 4'd0;
    end else begin
        grp_LOADBYTES_1_fu_488_bytes = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_LOADBYTES_2_fu_545_bytes = ad_addr_0_lcssa_idx_reg_266;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_LOADBYTES_2_fu_545_bytes = trunc_ln210_1_reg_1519;
    end else begin
        grp_LOADBYTES_2_fu_545_bytes = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_LOADBYTES_2_fu_545_n = trunc_ln221_reg_1524;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_LOADBYTES_2_fu_545_n = 32'd8;
    end else begin
        grp_LOADBYTES_2_fu_545_n = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_LOADBYTES_3_fu_555_bytes = c_addr_0_lcssa_idx_reg_382;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_LOADBYTES_3_fu_555_bytes = trunc_ln238_2_reg_1663;
    end else begin
        grp_LOADBYTES_3_fu_555_bytes = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_LOADBYTES_3_fu_555_n = trunc_ln249_2_reg_1678;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_LOADBYTES_3_fu_555_n = 32'd8;
    end else begin
        grp_LOADBYTES_3_fu_555_n = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_ROUND_fu_498_C = 8'd90;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_ROUND_fu_498_C = 8'd120;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_state23) & (icmp_ln28_fu_1146_p2 == 1'd1)))) begin
        grp_ROUND_fu_498_C = 8'd150;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_ROUND_fu_498_C = 8'd75;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_ROUND_fu_498_C = 8'd105;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_ROUND_fu_498_C = 8'd135;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_ROUND_fu_498_C = 8'd165;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state6))) begin
        grp_ROUND_fu_498_C = 8'd195;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_ROUND_fu_498_C = 8'd225;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state4))) begin
        grp_ROUND_fu_498_C = 8'd240;
    end else begin
        grp_ROUND_fu_498_C = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_ROUND_fu_498_s_0_read = s_0_60_fu_1292_p2;
    end else if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln28_fu_1146_p2 == 1'd1))) begin
        grp_ROUND_fu_498_s_0_read = reg_709;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_ROUND_fu_498_s_0_read = s_0_52_reg_1544;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_ROUND_fu_498_s_0_read = s_0_46_reg_1529;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_ROUND_fu_498_s_0_read = s_0_45_fu_921_p2;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_ROUND_fu_498_s_0_read = reg_684;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_ROUND_fu_498_s_0_read = reg_653;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_ROUND_fu_498_s_0_read = 64'd9241399655273594880;
    end else begin
        grp_ROUND_fu_498_s_0_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_ROUND_fu_498_s_1_read = s_1_57_fu_1299_p2;
    end else if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln28_fu_1146_p2 == 1'd1))) begin
        grp_ROUND_fu_498_s_1_read = s_1_56_fu_208;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_ROUND_fu_498_s_1_read = s_1_1_24_reg_314;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_ROUND_fu_498_s_1_read = s_1_44_reg_1534;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_ROUND_fu_498_s_1_read = s_1_43_fu_180;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_ROUND_fu_498_s_1_read = reg_689;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_ROUND_fu_498_s_1_read = reg_660;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_ROUND_fu_498_s_1_read = K0_reg_1396;
    end else begin
        grp_ROUND_fu_498_s_1_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_ROUND_fu_498_s_2_read = s_2_57_fu_1305_p2;
    end else if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln28_fu_1146_p2 == 1'd1))) begin
        grp_ROUND_fu_498_s_2_read = s_2_56_fu_212;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_ROUND_fu_498_s_2_read = s_2_1_23_reg_305;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_ROUND_fu_498_s_2_read = s_2_44_reg_1539;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_ROUND_fu_498_s_2_read = s_2_43_fu_184;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_ROUND_fu_498_s_2_read = reg_694;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_ROUND_fu_498_s_2_read = reg_667;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_ROUND_fu_498_s_2_read = grp_LOADBYTES_1_fu_480_ap_return;
    end else begin
        grp_ROUND_fu_498_s_2_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_ROUND_fu_498_s_3_read = s_3_4_33_reg_415;
    end else if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln28_fu_1146_p2 == 1'd1))) begin
        grp_ROUND_fu_498_s_3_read = s_3_58_fu_216;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_ROUND_fu_498_s_3_read = s_3_1_22_reg_296;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_ROUND_fu_498_s_3_read = s_3_45_fu_188;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_ROUND_fu_498_s_3_read = reg_699;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_ROUND_fu_498_s_3_read = reg_674;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_ROUND_fu_498_s_3_read = N0_reg_1404;
    end else begin
        grp_ROUND_fu_498_s_3_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_ROUND_fu_498_s_4_read = s_4_4_32_reg_405;
    end else if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln28_fu_1146_p2 == 1'd1))) begin
        grp_ROUND_fu_498_s_4_read = s_4_60_fu_220;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_ROUND_fu_498_s_4_read = s_4_1_21_reg_287;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_ROUND_fu_498_s_4_read = s_4_46_fu_192;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_ROUND_fu_498_s_4_read = reg_704;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_ROUND_fu_498_s_4_read = reg_679;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_ROUND_fu_498_s_4_read = grp_LOADBYTES_1_fu_488_ap_return;
    end else begin
        grp_ROUND_fu_498_s_4_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_ROUND_fu_513_C = 8'd75;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_ROUND_fu_513_C = 8'd105;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_ROUND_fu_513_C = 8'd135;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_ROUND_fu_513_C = 8'd90;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_ROUND_fu_513_C = 8'd120;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_ROUND_fu_513_C = 8'd150;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state6))) begin
        grp_ROUND_fu_513_C = 8'd180;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_ROUND_fu_513_C = 8'd210;
    end else begin
        grp_ROUND_fu_513_C = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4))) begin
        k_ce0 = grp_LOADBYTES_1_fu_480_k_ce0;
    end else begin
        k_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        m_address0 = zext_ln28_3_fu_1200_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        m_address0 = grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_m_address0;
    end else begin
        m_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        m_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        m_ce0 = grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_m_ce0;
    end else begin
        m_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        m_d0 = trunc_ln28_5_fu_1185_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        m_d0 = grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_m_d0;
    end else begin
        m_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln28_fu_1146_p2 == 1'd0))) begin
        m_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        m_we0 = grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_m_we0;
    end else begin
        m_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        mlen_ap_vld = 1'b1;
    end else begin
        mlen_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4))) begin
        npub_ce0 = grp_LOADBYTES_1_fu_488_k_ce0;
    end else begin
        npub_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        t_address0 = grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_t_address0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        t_address0 = grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_t_address0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        t_address0 = grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_t_address0;
    end else begin
        t_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        t_ce0 = grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_t_ce0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        t_ce0 = grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_t_ce0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        t_ce0 = grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_t_ce0;
    end else begin
        t_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        t_d0 = grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_t_d0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        t_d0 = grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_t_d0;
    end else begin
        t_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        t_we0 = grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_t_we0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        t_we0 = grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_t_we0;
    end else begin
        t_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (icmp_ln178_fu_732_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else if (((ap_start == 1'b1) & (icmp_ln178_fu_732_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == ap_block_state4_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((icmp_ln208_fu_768_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & ((icmp_ln210_1_fu_850_p2 == 1'd1) | (icmp_ln210_reg_1438 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((grp_LOADBYTES_2_fu_545_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state16 : begin
            if (((grp_LOADBYTES_2_fu_545_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & ((icmp_ln238_1_fu_1067_p2 == 1'd1) | (icmp_ln238_reg_1579 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((grp_LOADBYTES_3_fu_555_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln28_fu_1146_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state27 : begin
            if (((grp_LOADBYTES_3_fu_555_ap_done == 1'b1) & (icmp_ln28_1_reg_1683 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else if (((grp_LOADBYTES_3_fu_555_ap_done == 1'b1) & (icmp_ln28_1_reg_1683 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((1'b1 == ap_CS_fsm_state28) & (1'b0 == ap_block_state28_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            if (((grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            if (((grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state39))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            if (((grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ad_address0 = grp_LOADBYTES_2_fu_545_ad_address0;

assign add_ln181_1_fu_738_p2 = ($signed(empty_20_fu_718_p1) + $signed(61'd2305843009213693936));

assign add_ln181_fu_744_p2 = ($signed(clen) + $signed(64'd18446744073709551600));

assign add_ln217_fu_864_p2 = (ad_assign_fu_168 + 64'd8);

assign add_ln218_fu_870_p2 = ($signed(adlen_assign_fu_172) + $signed(64'd18446744073709551608));

assign add_ln238_fu_1081_p2 = ($signed(trunc_ln238_fu_1078_p1) + $signed(6'd48));

assign add_ln244_fu_1205_p2 = (c_assign_fu_196 + 64'd8);

assign add_ln246_fu_1211_p2 = ($signed(clen_assign_1_fu_200) + $signed(64'd18446744073709551608));

assign add_ln283_fu_1333_p2 = ($signed(result_1_loc_fu_156) + $signed(9'd511));

assign add_ln28_1_fu_1152_p2 = (i_reg_394 + 4'd1);

assign add_ln28_fu_1194_p2 = (zext_ln28_fu_1142_p1 + trunc_ln238_3_fu_1190_p1);

assign and_ln1_fu_1097_p3 = {{tmp_5_fu_1087_p4}, {3'd0}};

assign and_ln210_1_fu_907_p3 = {{58'd0}, {trunc_ln210_fu_904_p1}};

assign and_ln238_1_fu_1109_p3 = {{58'd0}, {trunc_ln238_1_fu_1106_p1}};

assign and_ln_fu_895_p3 = {{tmp_3_fu_886_p4}, {3'd0}};

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state28_on_subcall_done = ((grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_ap_done == 1'b0) | (grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state2_on_subcall_done = ((grp_LOADBYTES_1_fu_488_ap_done == 1'b0) | (grp_LOADBYTES_1_fu_480_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state4_on_subcall_done = ((grp_LOADBYTES_1_fu_488_ap_done == 1'b0) | (grp_LOADBYTES_1_fu_480_ap_done == 1'b0));
end

assign empty_20_fu_718_p1 = clen[60:0];

assign empty_fu_714_p1 = adlen[60:0];

assign grp_LOADBYTES_1_fu_480_ap_start = grp_LOADBYTES_1_fu_480_ap_start_reg;

assign grp_LOADBYTES_1_fu_488_ap_start = grp_LOADBYTES_1_fu_488_ap_start_reg;

assign grp_LOADBYTES_2_fu_545_ap_start = grp_LOADBYTES_2_fu_545_ap_start_reg;

assign grp_LOADBYTES_3_fu_555_ap_start = grp_LOADBYTES_3_fu_555_ap_start_reg;

assign grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_start = grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_start_reg;

assign grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_start = grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_start_reg;

assign grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_start = grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_start_reg;

assign grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_ap_start = grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_ap_start_reg;

assign grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_ap_start = grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_ap_start_reg;

assign icmp_ln178_fu_732_p2 = ((tmp_2_fu_722_p4 == 60'd0) ? 1'b1 : 1'b0);

assign icmp_ln208_fu_768_p2 = ((adlen == 64'd0) ? 1'b1 : 1'b0);

assign icmp_ln210_1_fu_850_p2 = ((tmp_6_fu_840_p4 == 61'd0) ? 1'b1 : 1'b0);

assign icmp_ln210_fu_782_p2 = ((tmp_4_fu_773_p4 == 61'd0) ? 1'b1 : 1'b0);

assign icmp_ln238_1_fu_1067_p2 = ((tmp_8_fu_1057_p4 == 61'd0) ? 1'b1 : 1'b0);

assign icmp_ln238_fu_999_p2 = ((tmp_7_fu_990_p4 == 61'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_1_fu_1131_p2 = (($signed(trunc_ln249_2_fu_1126_p1) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln28_fu_1146_p2 = ((i_reg_394 == 4'd8) ? 1'b1 : 1'b0);

assign k_address0 = grp_LOADBYTES_1_fu_480_k_address0;

assign lshr_ln28_fu_1180_p2 = xor_ln240_reg_1687 >> zext_ln28_2_fu_1176_p1;

assign mlen = ($signed(clen) + $signed(64'd18446744073709551600));

assign npub_address0 = grp_LOADBYTES_1_fu_488_k_address0;

assign or_ln252_fu_1281_p2 = (x_addr_0_lcssa_i_reg_459 | reg_709);

assign result_fu_1347_p2 = (tmp_9_fu_1339_p3 ^ 1'd1);

assign s_0_45_fu_921_p2 = (s_0_26_fu_176 ^ grp_LOADBYTES_2_fu_545_ap_return);

assign s_0_52_fu_978_p2 = (xor_ln222_fu_972_p2 ^ s_0_1_25_reg_278);

assign s_0_60_fu_1292_p2 = (shl_ln253_fu_1287_p2 ^ or_ln252_fu_1281_p2);

assign s_1_57_fu_1299_p2 = (s_1_4_35_reg_437 ^ K0_reg_1396);

assign s_2_57_fu_1305_p2 = (s_2_4_34_reg_426 ^ K1_reg_1409);

assign s_3_14_fu_758_p2 = (grp_ROUND_fu_498_ap_return_3 ^ K0_reg_1396);

assign s_3_fu_1319_p2 = (grp_ROUND_fu_498_ap_return_3 ^ K0_reg_1396);

assign s_4_13_fu_763_p2 = (grp_ROUND_fu_498_ap_return_4 ^ K1_reg_1409);

assign s_4_59_fu_984_p2 = (ap_phi_mux_s_4_2_26_phi_fu_326_p4 ^ 64'd1);

assign s_4_73_fu_1325_p2 = (grp_ROUND_fu_498_ap_return_4 ^ K1_reg_1409);

assign shl_ln1_fu_1162_p3 = {{trunc_ln28_4_fu_1158_p1}, {3'd0}};

assign shl_ln222_fu_966_p2 = 64'd128 << sub_ln222_fu_960_p2;

assign shl_ln253_fu_1287_p2 = 64'd128 << sub_ln253_reg_1714;

assign shl_ln3_fu_1267_p3 = {{clen_addr_0_lcssa_reg_372}, {3'd0}};

assign shl_ln_fu_952_p3 = {{adlen_addr_0_lcssa_reg_256}, {3'd0}};

assign sub_ln222_fu_960_p2 = (64'd56 - shl_ln_fu_952_p3);

assign sub_ln253_fu_1275_p2 = (64'd56 - shl_ln3_fu_1267_p3);

assign sub_ln28_fu_1170_p2 = ($signed(6'd56) - $signed(shl_ln1_fu_1162_p3));

assign tmp_2_fu_722_p4 = {{clen[63:4]}};

assign tmp_3_fu_886_p4 = {{adlen[4:3]}};

assign tmp_4_fu_773_p4 = {{adlen[63:3]}};

assign tmp_5_fu_1087_p4 = {{add_ln238_fu_1081_p2[5:3]}};

assign tmp_6_fu_840_p4 = {{adlen_assign_fu_172[63:3]}};

assign tmp_7_fu_990_p4 = {{add_ln181_reg_1416[63:3]}};

assign tmp_8_fu_1057_p4 = {{clen_assign_1_fu_200[63:3]}};

assign tmp_9_fu_1339_p3 = add_ln283_fu_1333_p2[32'd8];

assign trunc_ln210_1_fu_859_p1 = ad_assign_fu_168[4:0];

assign trunc_ln210_fu_904_p1 = adlen[2:0];

assign trunc_ln221_fu_916_p1 = ap_phi_mux_adlen_addr_0_lcssa_phi_fu_259_p4[31:0];

assign trunc_ln238_1_fu_1106_p1 = clen[2:0];

assign trunc_ln238_2_fu_1073_p1 = c_assign_fu_196[5:0];

assign trunc_ln238_3_fu_1190_p1 = c_assign_fu_196[4:0];

assign trunc_ln238_fu_1078_p1 = clen[5:0];

assign trunc_ln249_1_fu_1122_p1 = ap_phi_mux_c_addr_0_lcssa_idx_phi_fu_386_p4[4:0];

assign trunc_ln249_2_fu_1126_p1 = ap_phi_mux_clen_addr_0_lcssa_phi_fu_375_p4[31:0];

assign trunc_ln249_fu_1118_p1 = ap_phi_mux_clen_addr_0_lcssa_phi_fu_375_p4[5:0];

assign trunc_ln28_4_fu_1158_p1 = i_reg_394[2:0];

assign trunc_ln28_5_fu_1185_p1 = lshr_ln28_fu_1180_p2[7:0];

assign trunc_ln28_fu_1258_p1 = clen_addr_0_lcssa_reg_372[30:0];

assign xor_ln222_fu_972_p2 = (shl_ln222_fu_966_p2 ^ grp_LOADBYTES_2_fu_545_ap_return);

assign xor_ln240_fu_1137_p2 = (s_0_59_fu_204 ^ grp_LOADBYTES_3_fu_555_ap_return);

assign xor_ln250_fu_1251_p2 = (x_assign_1_reg_448 ^ grp_LOADBYTES_3_fu_555_ap_return);

assign zext_ln28_2_fu_1176_p1 = sub_ln28_fu_1170_p2;

assign zext_ln28_3_fu_1200_p1 = add_ln28_fu_1194_p2;

assign zext_ln28_fu_1142_p1 = i_reg_394;

always @ (posedge ap_clk) begin
    trunc_ln249_1_reg_1673[2:0] <= 3'b000;
    sub_ln253_reg_1714[2:0] <= 3'b000;
    ad_addr_0_lcssa_idx_reg_266[2:0] <= 3'b000;
    c_addr_0_lcssa_idx_reg_382[2:0] <= 3'b000;
end

endmodule //crypto_aead_decrypt_c_crypto_aead_decrypt_1
