-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity crypto_aead_encrypt_h_crypto_aead_encrypt_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    c_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    c_ce0 : OUT STD_LOGIC;
    c_we0 : OUT STD_LOGIC;
    c_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    clen : OUT STD_LOGIC_VECTOR (63 downto 0);
    clen_ap_vld : OUT STD_LOGIC;
    m_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    m_ce0 : OUT STD_LOGIC;
    m_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    mlen : IN STD_LOGIC_VECTOR (63 downto 0);
    ad_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    ad_ce0 : OUT STD_LOGIC;
    ad_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    adlen : IN STD_LOGIC_VECTOR (63 downto 0);
    npub_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    npub_ce0 : OUT STD_LOGIC;
    npub_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    k_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    k_ce0 : OUT STD_LOGIC;
    k_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of crypto_aead_encrypt_h_crypto_aead_encrypt_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (36 downto 0) := "0000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (36 downto 0) := "0000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (36 downto 0) := "0000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (36 downto 0) := "0000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (36 downto 0) := "0000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (36 downto 0) := "0000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (36 downto 0) := "0001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (36 downto 0) := "0010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (36 downto 0) := "0100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (36 downto 0) := "1000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv64_80400C0600000000 : STD_LOGIC_VECTOR (63 downto 0) := "1000000001000000000011000000011000000000000000000000000000000000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv8_F0 : STD_LOGIC_VECTOR (7 downto 0) := "11110000";
    constant ap_const_lv8_E1 : STD_LOGIC_VECTOR (7 downto 0) := "11100001";
    constant ap_const_lv8_C3 : STD_LOGIC_VECTOR (7 downto 0) := "11000011";
    constant ap_const_lv8_A5 : STD_LOGIC_VECTOR (7 downto 0) := "10100101";
    constant ap_const_lv8_87 : STD_LOGIC_VECTOR (7 downto 0) := "10000111";
    constant ap_const_lv8_69 : STD_LOGIC_VECTOR (7 downto 0) := "01101001";
    constant ap_const_lv8_4B : STD_LOGIC_VECTOR (7 downto 0) := "01001011";
    constant ap_const_lv8_96 : STD_LOGIC_VECTOR (7 downto 0) := "10010110";
    constant ap_const_lv8_78 : STD_LOGIC_VECTOR (7 downto 0) := "01111000";
    constant ap_const_lv8_5A : STD_LOGIC_VECTOR (7 downto 0) := "01011010";
    constant ap_const_lv8_D2 : STD_LOGIC_VECTOR (7 downto 0) := "11010010";
    constant ap_const_lv8_B4 : STD_LOGIC_VECTOR (7 downto 0) := "10110100";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_10 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv61_0 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_FFFFFFFFFFFFFFF8 : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv58_0 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_38 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111000";
    constant ap_const_lv64_80 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv6_38 : STD_LOGIC_VECTOR (5 downto 0) := "111000";
    constant ap_const_boolean_0 : BOOLEAN := false;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal reg_578 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal icmp_ln28_fu_1048_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal reg_585 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_592 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_599 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal reg_604 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_609 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal reg_614 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_619 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_624 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_629 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_634 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_639 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_644 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_LOADBYTES_1_fu_422_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal K0_reg_1222 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_LOADBYTES_1_fu_430_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal N0_reg_1230 : STD_LOGIC_VECTOR (63 downto 0);
    signal K1_reg_1235 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_fu_649_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal empty_12_fu_653_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal empty_12_reg_1261 : STD_LOGIC_VECTOR (60 downto 0);
    signal s_3_14_fu_672_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_13_fu_677_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln75_fu_682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln75_reg_1278 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln77_fu_698_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln77_reg_1282 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal trunc_ln77_1_fu_776_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln77_1_reg_1363 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln77_1_fu_767_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln88_fu_833_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln88_reg_1368 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_0_53_fu_895_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_0_53_reg_1373 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal s_4_58_fu_901_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal icmp_ln104_fu_916_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln104_reg_1383 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal trunc_ln104_1_fu_990_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln104_1_reg_1467 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln104_1_fu_984_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln117_fu_1025_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_reg_1472 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_1_fu_1029_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln117_1_reg_1478 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln117_2_fu_1034_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln117_2_reg_1483 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_0_61_fu_1039_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_0_61_reg_1489 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal add_ln28_1_fu_1054_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal xor_ln117_fu_1153_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln117_reg_1503 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal s_0_62_fu_1180_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_0_62_reg_1508 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_fu_1206_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_reg_1513 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal xor_ln135_fu_1212_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln135_reg_1518 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln28_4_fu_1217_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln28_4_reg_1523 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_LOADBYTES_1_fu_422_ap_start : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_422_ap_done : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_422_ap_idle : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_422_ap_ready : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_422_k_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_LOADBYTES_1_fu_422_k_ce0 : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_422_bytes : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_LOADBYTES_1_fu_430_ap_start : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_430_ap_done : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_430_ap_idle : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_430_ap_ready : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_430_k_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_LOADBYTES_1_fu_430_k_ce0 : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_430_bytes : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_ROUND_fu_440_ap_ready : STD_LOGIC;
    signal grp_ROUND_fu_440_s_0_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_440_s_1_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_440_s_2_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_440_s_3_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_440_s_4_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_440_C : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ROUND_fu_440_ap_return_0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_440_ap_return_1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_440_ap_return_2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_440_ap_return_3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_440_ap_return_4 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_455_ap_ready : STD_LOGIC;
    signal grp_ROUND_fu_455_C : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ROUND_fu_455_ap_return_0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_455_ap_return_1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_455_ap_return_2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_455_ap_return_3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_455_ap_return_4 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_LOADBYTES_2_fu_486_ap_start : STD_LOGIC;
    signal grp_LOADBYTES_2_fu_486_ap_done : STD_LOGIC;
    signal grp_LOADBYTES_2_fu_486_ap_idle : STD_LOGIC;
    signal grp_LOADBYTES_2_fu_486_ap_ready : STD_LOGIC;
    signal grp_LOADBYTES_2_fu_486_ad_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_LOADBYTES_2_fu_486_ad_ce0 : STD_LOGIC;
    signal grp_LOADBYTES_2_fu_486_ad_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_LOADBYTES_2_fu_486_bytes : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_LOADBYTES_2_fu_486_n : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_LOADBYTES_2_fu_486_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_start : STD_LOGIC;
    signal grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_done : STD_LOGIC;
    signal grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_idle : STD_LOGIC;
    signal grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_ready : STD_LOGIC;
    signal grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_c_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_c_ce0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_c_we0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_c_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_start : STD_LOGIC;
    signal grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_done : STD_LOGIC;
    signal grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_idle : STD_LOGIC;
    signal grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_ready : STD_LOGIC;
    signal grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_c_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_c_ce0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_c_we0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_c_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_start : STD_LOGIC;
    signal grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_done : STD_LOGIC;
    signal grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_idle : STD_LOGIC;
    signal grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_ready : STD_LOGIC;
    signal grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_c_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_c_ce0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_c_we0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_c_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln_fu_812_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal ad_addr_0_lcssa_idx_reg_224 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln77_1_fu_824_p3 : STD_LOGIC_VECTOR (60 downto 0);
    signal ap_phi_mux_adlen_addr_0_lcssa_phi_fu_239_p4 : STD_LOGIC_VECTOR (60 downto 0);
    signal adlen_addr_0_lcssa_reg_236 : STD_LOGIC_VECTOR (60 downto 0);
    signal s_0_1_17_reg_246 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_1_13_reg_255 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_1_14_reg_264 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_1_15_reg_273 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_1_1_16_reg_282 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_s_4_2_18_phi_fu_294_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_2_18_reg_291 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_s_3_2_19_phi_fu_303_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_2_19_reg_300 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_s_2_2_20_phi_fu_313_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_2_20_reg_310 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_s_1_2_21_phi_fu_323_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_1_2_21_reg_320 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_s_0_2_22_phi_fu_333_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_0_2_22_reg_330 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln104_1_fu_1016_p3 : STD_LOGIC_VECTOR (60 downto 0);
    signal ap_phi_mux_mlen_addr_0_lcssa_phi_fu_343_p4 : STD_LOGIC_VECTOR (60 downto 0);
    signal mlen_addr_0_lcssa_reg_340 : STD_LOGIC_VECTOR (60 downto 0);
    signal and_ln1_fu_1004_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_m_addr_0_lcssa_idx_phi_fu_354_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal m_addr_0_lcssa_idx_reg_350 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_reg_362 : STD_LOGIC_VECTOR (3 downto 0);
    signal s_0_4_28_reg_373 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_4_24_reg_383 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_4_25_reg_392 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_4_26_reg_402 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_1_4_27_reg_412 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_LOADBYTES_1_fu_422_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_LOADBYTES_1_fu_430_ap_start_reg : STD_LOGIC := '0';
    signal s_0_46_fu_838_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal s_1_57_fu_1186_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_57_fu_1192_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_LOADBYTES_2_fu_486_ap_start_reg : STD_LOGIC := '0';
    signal grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_start_reg : STD_LOGIC := '0';
    signal grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal zext_ln28_3_fu_1102_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ad_assign_fu_136 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln84_fu_781_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal adlen_assign_fu_140 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln85_fu_787_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_0_45_fu_144 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_1_43_fu_148 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_43_fu_152 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_45_fu_156 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_45_fu_160 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_assign_fu_164 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln113_fu_1107_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mlen_assign_fu_168 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln114_fu_1113_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_0_60_fu_172 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_1_56_fu_176 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_56_fu_180 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_58_fu_184 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_59_fu_188 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln28_3_fu_1087_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_fu_688_p4 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_7_fu_757_p4 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_4_fu_803_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln77_fu_821_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln_fu_869_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln89_fu_877_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln89_fu_883_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln89_fu_889_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_907_p4 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_9_fu_974_p4 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_6_fu_995_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln104_fu_1013_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln28_fu_1060_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln1_fu_1064_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln28_fu_1072_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln28_2_fu_1078_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln28_fu_1082_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln28_fu_1044_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln104_2_fu_1092_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln28_fu_1096_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln2_fu_1160_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln119_fu_1168_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln119_fu_1174_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (36 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_block_state4_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component crypto_aead_encrypt_h_LOADBYTES_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        k_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        k_ce0 : OUT STD_LOGIC;
        k_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        bytes : IN STD_LOGIC_VECTOR (3 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component crypto_aead_encrypt_h_ROUND IS
    port (
        ap_ready : OUT STD_LOGIC;
        s_0_read : IN STD_LOGIC_VECTOR (63 downto 0);
        s_1_read : IN STD_LOGIC_VECTOR (63 downto 0);
        s_2_read : IN STD_LOGIC_VECTOR (63 downto 0);
        s_3_read : IN STD_LOGIC_VECTOR (63 downto 0);
        s_4_read : IN STD_LOGIC_VECTOR (63 downto 0);
        C : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component crypto_aead_encrypt_h_LOADBYTES_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ad_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        ad_ce0 : OUT STD_LOGIC;
        ad_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        bytes : IN STD_LOGIC_VECTOR (4 downto 0);
        n : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component crypto_aead_encrypt_h_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        n_assign : IN STD_LOGIC_VECTOR (31 downto 0);
        xor_ln117 : IN STD_LOGIC_VECTOR (63 downto 0);
        m_addr_0_lcssa_idx : IN STD_LOGIC_VECTOR (5 downto 0);
        c_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        c_ce0 : OUT STD_LOGIC;
        c_we0 : OUT STD_LOGIC;
        c_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component crypto_aead_encrypt_h_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_3 : IN STD_LOGIC_VECTOR (63 downto 0);
        trunc_ln3 : IN STD_LOGIC_VECTOR (5 downto 0);
        m_addr_0_lcssa_idx : IN STD_LOGIC_VECTOR (5 downto 0);
        c_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        c_ce0 : OUT STD_LOGIC;
        c_we0 : OUT STD_LOGIC;
        c_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component crypto_aead_encrypt_h_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        xor_ln135 : IN STD_LOGIC_VECTOR (63 downto 0);
        add_ln28_7 : IN STD_LOGIC_VECTOR (5 downto 0);
        c_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        c_ce0 : OUT STD_LOGIC;
        c_we0 : OUT STD_LOGIC;
        c_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    grp_LOADBYTES_1_fu_422 : component crypto_aead_encrypt_h_LOADBYTES_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_LOADBYTES_1_fu_422_ap_start,
        ap_done => grp_LOADBYTES_1_fu_422_ap_done,
        ap_idle => grp_LOADBYTES_1_fu_422_ap_idle,
        ap_ready => grp_LOADBYTES_1_fu_422_ap_ready,
        k_address0 => grp_LOADBYTES_1_fu_422_k_address0,
        k_ce0 => grp_LOADBYTES_1_fu_422_k_ce0,
        k_q0 => k_q0,
        bytes => grp_LOADBYTES_1_fu_422_bytes,
        ap_return => grp_LOADBYTES_1_fu_422_ap_return);

    grp_LOADBYTES_1_fu_430 : component crypto_aead_encrypt_h_LOADBYTES_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_LOADBYTES_1_fu_430_ap_start,
        ap_done => grp_LOADBYTES_1_fu_430_ap_done,
        ap_idle => grp_LOADBYTES_1_fu_430_ap_idle,
        ap_ready => grp_LOADBYTES_1_fu_430_ap_ready,
        k_address0 => grp_LOADBYTES_1_fu_430_k_address0,
        k_ce0 => grp_LOADBYTES_1_fu_430_k_ce0,
        k_q0 => npub_q0,
        bytes => grp_LOADBYTES_1_fu_430_bytes,
        ap_return => grp_LOADBYTES_1_fu_430_ap_return);

    grp_ROUND_fu_440 : component crypto_aead_encrypt_h_ROUND
    port map (
        ap_ready => grp_ROUND_fu_440_ap_ready,
        s_0_read => grp_ROUND_fu_440_s_0_read,
        s_1_read => grp_ROUND_fu_440_s_1_read,
        s_2_read => grp_ROUND_fu_440_s_2_read,
        s_3_read => grp_ROUND_fu_440_s_3_read,
        s_4_read => grp_ROUND_fu_440_s_4_read,
        C => grp_ROUND_fu_440_C,
        ap_return_0 => grp_ROUND_fu_440_ap_return_0,
        ap_return_1 => grp_ROUND_fu_440_ap_return_1,
        ap_return_2 => grp_ROUND_fu_440_ap_return_2,
        ap_return_3 => grp_ROUND_fu_440_ap_return_3,
        ap_return_4 => grp_ROUND_fu_440_ap_return_4);

    grp_ROUND_fu_455 : component crypto_aead_encrypt_h_ROUND
    port map (
        ap_ready => grp_ROUND_fu_455_ap_ready,
        s_0_read => grp_ROUND_fu_440_ap_return_0,
        s_1_read => grp_ROUND_fu_440_ap_return_1,
        s_2_read => grp_ROUND_fu_440_ap_return_2,
        s_3_read => grp_ROUND_fu_440_ap_return_3,
        s_4_read => grp_ROUND_fu_440_ap_return_4,
        C => grp_ROUND_fu_455_C,
        ap_return_0 => grp_ROUND_fu_455_ap_return_0,
        ap_return_1 => grp_ROUND_fu_455_ap_return_1,
        ap_return_2 => grp_ROUND_fu_455_ap_return_2,
        ap_return_3 => grp_ROUND_fu_455_ap_return_3,
        ap_return_4 => grp_ROUND_fu_455_ap_return_4);

    grp_LOADBYTES_2_fu_486 : component crypto_aead_encrypt_h_LOADBYTES_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_LOADBYTES_2_fu_486_ap_start,
        ap_done => grp_LOADBYTES_2_fu_486_ap_done,
        ap_idle => grp_LOADBYTES_2_fu_486_ap_idle,
        ap_ready => grp_LOADBYTES_2_fu_486_ap_ready,
        ad_address0 => grp_LOADBYTES_2_fu_486_ad_address0,
        ad_ce0 => grp_LOADBYTES_2_fu_486_ad_ce0,
        ad_q0 => grp_LOADBYTES_2_fu_486_ad_q0,
        bytes => grp_LOADBYTES_2_fu_486_bytes,
        n => grp_LOADBYTES_2_fu_486_n,
        ap_return => grp_LOADBYTES_2_fu_486_ap_return);

    grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497 : component crypto_aead_encrypt_h_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_start,
        ap_done => grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_done,
        ap_idle => grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_idle,
        ap_ready => grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_ready,
        n_assign => trunc_ln117_2_reg_1483,
        xor_ln117 => xor_ln117_reg_1503,
        m_addr_0_lcssa_idx => m_addr_0_lcssa_idx_reg_350,
        c_address0 => grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_c_address0,
        c_ce0 => grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_c_ce0,
        c_we0 => grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_c_we0,
        c_d0 => grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_c_d0);

    grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507 : component crypto_aead_encrypt_h_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_start,
        ap_done => grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_done,
        ap_idle => grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_idle,
        ap_ready => grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_ready,
        s_3 => s_3_reg_1513,
        trunc_ln3 => trunc_ln117_reg_1472,
        m_addr_0_lcssa_idx => m_addr_0_lcssa_idx_reg_350,
        c_address0 => grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_c_address0,
        c_ce0 => grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_c_ce0,
        c_we0 => grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_c_we0,
        c_d0 => grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_c_d0);

    grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517 : component crypto_aead_encrypt_h_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_start,
        ap_done => grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_done,
        ap_idle => grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_idle,
        ap_ready => grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_ready,
        xor_ln135 => xor_ln135_reg_1518,
        add_ln28_7 => add_ln28_4_reg_1523,
        c_address0 => grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_c_address0,
        c_ce0 => grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_c_ce0,
        c_we0 => grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_c_we0,
        c_d0 => grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_c_d0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_LOADBYTES_1_fu_422_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_LOADBYTES_1_fu_422_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                    grp_LOADBYTES_1_fu_422_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_LOADBYTES_1_fu_422_ap_ready = ap_const_logic_1)) then 
                    grp_LOADBYTES_1_fu_422_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_LOADBYTES_1_fu_430_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_LOADBYTES_1_fu_430_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                    grp_LOADBYTES_1_fu_430_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_LOADBYTES_1_fu_430_ap_ready = ap_const_logic_1)) then 
                    grp_LOADBYTES_1_fu_430_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_LOADBYTES_2_fu_486_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_LOADBYTES_2_fu_486_ap_start_reg <= ap_const_logic_0;
            else
                if ((((icmp_ln104_1_fu_984_p2 = ap_const_lv1_0) and (icmp_ln104_reg_1383 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((ap_const_logic_1 = ap_CS_fsm_state21) and ((icmp_ln104_1_fu_984_p2 = ap_const_lv1_1) or (icmp_ln104_reg_1383 = ap_const_lv1_1))) or ((icmp_ln77_1_fu_767_p2 = ap_const_lv1_0) and (icmp_ln77_reg_1282 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((ap_const_logic_1 = ap_CS_fsm_state11) and ((icmp_ln77_1_fu_767_p2 = ap_const_lv1_1) or (icmp_ln77_reg_1282 = ap_const_lv1_1))))) then 
                    grp_LOADBYTES_2_fu_486_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_LOADBYTES_2_fu_486_ap_ready = ap_const_logic_1)) then 
                    grp_LOADBYTES_2_fu_486_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
                    grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_ready = ap_const_logic_1)) then 
                    grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
                    grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_ready = ap_const_logic_1)) then 
                    grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_start_reg <= ap_const_logic_0;
            else
                if (((grp_LOADBYTES_2_fu_486_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                    grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_ready = ap_const_logic_1)) then 
                    grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ad_addr_0_lcssa_idx_reg_224_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln77_fu_698_p2 = ap_const_lv1_1) and (icmp_ln75_fu_682_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                ad_addr_0_lcssa_idx_reg_224(3) <= '0';
                ad_addr_0_lcssa_idx_reg_224(4) <= '0';
            elsif (((icmp_ln77_1_fu_767_p2 = ap_const_lv1_1) and (icmp_ln77_reg_1282 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                                ad_addr_0_lcssa_idx_reg_224(4 downto 3) <= and_ln_fu_812_p3(4 downto 3);
            end if; 
        end if;
    end process;

    ad_assign_fu_136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln77_fu_698_p2 = ap_const_lv1_0) and (icmp_ln75_fu_682_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                ad_assign_fu_136 <= ap_const_lv64_0;
            elsif (((icmp_ln77_1_fu_767_p2 = ap_const_lv1_0) and (icmp_ln77_reg_1282 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                ad_assign_fu_136 <= add_ln84_fu_781_p2;
            end if; 
        end if;
    end process;

    adlen_addr_0_lcssa_reg_236_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln77_fu_698_p2 = ap_const_lv1_1) and (icmp_ln75_fu_682_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                adlen_addr_0_lcssa_reg_236 <= empty_fu_649_p1;
            elsif (((icmp_ln77_1_fu_767_p2 = ap_const_lv1_1) and (icmp_ln77_reg_1282 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                adlen_addr_0_lcssa_reg_236 <= and_ln77_1_fu_824_p3;
            end if; 
        end if;
    end process;

    adlen_assign_fu_140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln77_fu_698_p2 = ap_const_lv1_0) and (icmp_ln75_fu_682_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                adlen_assign_fu_140 <= adlen;
            elsif (((icmp_ln77_1_fu_767_p2 = ap_const_lv1_0) and (icmp_ln77_reg_1282 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                adlen_assign_fu_140 <= add_ln85_fu_787_p2;
            end if; 
        end if;
    end process;

    i_reg_362_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_LOADBYTES_2_fu_486_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                i_reg_362 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln28_fu_1048_p2 = ap_const_lv1_0))) then 
                i_reg_362 <= add_ln28_1_fu_1054_p2;
            end if; 
        end if;
    end process;

    m_addr_0_lcssa_idx_reg_350_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln104_fu_916_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                m_addr_0_lcssa_idx_reg_350(3) <= '0';
                m_addr_0_lcssa_idx_reg_350(4) <= '0';
                m_addr_0_lcssa_idx_reg_350(5) <= '0';
            elsif (((icmp_ln104_1_fu_984_p2 = ap_const_lv1_1) and (icmp_ln104_reg_1383 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                                m_addr_0_lcssa_idx_reg_350(5 downto 3) <= and_ln1_fu_1004_p3(5 downto 3);
            end if; 
        end if;
    end process;

    m_assign_fu_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln104_fu_916_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                m_assign_fu_164 <= ap_const_lv64_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln28_fu_1048_p2 = ap_const_lv1_1))) then 
                m_assign_fu_164 <= add_ln113_fu_1107_p2;
            end if; 
        end if;
    end process;

    mlen_addr_0_lcssa_reg_340_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln104_fu_916_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                mlen_addr_0_lcssa_reg_340 <= empty_12_reg_1261;
            elsif (((icmp_ln104_1_fu_984_p2 = ap_const_lv1_1) and (icmp_ln104_reg_1383 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                mlen_addr_0_lcssa_reg_340 <= and_ln104_1_fu_1016_p3;
            end if; 
        end if;
    end process;

    mlen_assign_fu_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln104_fu_916_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                mlen_assign_fu_168 <= mlen;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln28_fu_1048_p2 = ap_const_lv1_1))) then 
                mlen_assign_fu_168 <= add_ln114_fu_1113_p2;
            end if; 
        end if;
    end process;

    s_0_1_17_reg_246_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln77_fu_698_p2 = ap_const_lv1_1) and (icmp_ln75_fu_682_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                s_0_1_17_reg_246 <= grp_ROUND_fu_440_ap_return_0;
            elsif (((icmp_ln77_1_fu_767_p2 = ap_const_lv1_1) and (icmp_ln77_reg_1282 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                s_0_1_17_reg_246 <= s_0_45_fu_144;
            end if; 
        end if;
    end process;

    s_0_4_28_reg_373_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln104_fu_916_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                s_0_4_28_reg_373 <= ap_phi_mux_s_0_2_22_phi_fu_333_p4;
            elsif (((icmp_ln104_1_fu_984_p2 = ap_const_lv1_1) and (icmp_ln104_reg_1383 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                s_0_4_28_reg_373 <= s_0_60_fu_172;
            end if; 
        end if;
    end process;

    s_0_60_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln104_fu_916_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                s_0_60_fu_172 <= ap_phi_mux_s_0_2_22_phi_fu_333_p4;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                s_0_60_fu_172 <= grp_ROUND_fu_440_ap_return_0;
            end if; 
        end if;
    end process;

    s_1_1_16_reg_282_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln77_fu_698_p2 = ap_const_lv1_1) and (icmp_ln75_fu_682_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                s_1_1_16_reg_282 <= grp_ROUND_fu_440_ap_return_1;
            elsif (((icmp_ln77_1_fu_767_p2 = ap_const_lv1_1) and (icmp_ln77_reg_1282 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                s_1_1_16_reg_282 <= s_1_43_fu_148;
            end if; 
        end if;
    end process;

    s_1_4_27_reg_412_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln104_fu_916_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                s_1_4_27_reg_412 <= ap_phi_mux_s_1_2_21_phi_fu_323_p4;
            elsif (((icmp_ln104_1_fu_984_p2 = ap_const_lv1_1) and (icmp_ln104_reg_1383 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                s_1_4_27_reg_412 <= s_1_56_fu_176;
            end if; 
        end if;
    end process;

    s_1_56_fu_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln104_fu_916_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                s_1_56_fu_176 <= ap_phi_mux_s_1_2_21_phi_fu_323_p4;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                s_1_56_fu_176 <= grp_ROUND_fu_440_ap_return_1;
            end if; 
        end if;
    end process;

    s_2_1_15_reg_273_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln77_fu_698_p2 = ap_const_lv1_1) and (icmp_ln75_fu_682_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                s_2_1_15_reg_273 <= grp_ROUND_fu_440_ap_return_2;
            elsif (((icmp_ln77_1_fu_767_p2 = ap_const_lv1_1) and (icmp_ln77_reg_1282 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                s_2_1_15_reg_273 <= s_2_43_fu_152;
            end if; 
        end if;
    end process;

    s_2_4_26_reg_402_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln104_fu_916_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                s_2_4_26_reg_402 <= ap_phi_mux_s_2_2_20_phi_fu_313_p4;
            elsif (((icmp_ln104_1_fu_984_p2 = ap_const_lv1_1) and (icmp_ln104_reg_1383 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                s_2_4_26_reg_402 <= s_2_56_fu_180;
            end if; 
        end if;
    end process;

    s_2_56_fu_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln104_fu_916_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                s_2_56_fu_180 <= ap_phi_mux_s_2_2_20_phi_fu_313_p4;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                s_2_56_fu_180 <= grp_ROUND_fu_440_ap_return_2;
            end if; 
        end if;
    end process;

    s_3_1_14_reg_264_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln77_fu_698_p2 = ap_const_lv1_1) and (icmp_ln75_fu_682_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                s_3_1_14_reg_264 <= s_3_14_fu_672_p2;
            elsif (((icmp_ln77_1_fu_767_p2 = ap_const_lv1_1) and (icmp_ln77_reg_1282 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                s_3_1_14_reg_264 <= s_3_45_fu_156;
            end if; 
        end if;
    end process;

    s_3_2_19_reg_300_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln75_fu_682_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                s_3_2_19_reg_300 <= s_3_14_fu_672_p2;
            elsif (((icmp_ln75_reg_1278 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                s_3_2_19_reg_300 <= grp_ROUND_fu_440_ap_return_3;
            end if; 
        end if;
    end process;

    s_3_45_fu_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln77_fu_698_p2 = ap_const_lv1_0) and (icmp_ln75_fu_682_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                s_3_45_fu_156 <= s_3_14_fu_672_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                s_3_45_fu_156 <= grp_ROUND_fu_440_ap_return_3;
            end if; 
        end if;
    end process;

    s_3_4_25_reg_392_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln104_fu_916_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                s_3_4_25_reg_392 <= ap_phi_mux_s_3_2_19_phi_fu_303_p4;
            elsif (((icmp_ln104_1_fu_984_p2 = ap_const_lv1_1) and (icmp_ln104_reg_1383 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                s_3_4_25_reg_392 <= s_3_58_fu_184;
            end if; 
        end if;
    end process;

    s_3_58_fu_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln104_fu_916_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                s_3_58_fu_184 <= ap_phi_mux_s_3_2_19_phi_fu_303_p4;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                s_3_58_fu_184 <= grp_ROUND_fu_440_ap_return_3;
            end if; 
        end if;
    end process;

    s_4_1_13_reg_255_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln77_fu_698_p2 = ap_const_lv1_1) and (icmp_ln75_fu_682_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                s_4_1_13_reg_255 <= s_4_13_fu_677_p2;
            elsif (((icmp_ln77_1_fu_767_p2 = ap_const_lv1_1) and (icmp_ln77_reg_1282 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                s_4_1_13_reg_255 <= s_4_45_fu_160;
            end if; 
        end if;
    end process;

    s_4_2_18_reg_291_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln75_fu_682_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                s_4_2_18_reg_291 <= s_4_13_fu_677_p2;
            elsif (((icmp_ln75_reg_1278 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                s_4_2_18_reg_291 <= grp_ROUND_fu_440_ap_return_4;
            end if; 
        end if;
    end process;

    s_4_45_fu_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln77_fu_698_p2 = ap_const_lv1_0) and (icmp_ln75_fu_682_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                s_4_45_fu_160 <= s_4_13_fu_677_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                s_4_45_fu_160 <= grp_ROUND_fu_440_ap_return_4;
            end if; 
        end if;
    end process;

    s_4_4_24_reg_383_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln104_fu_916_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                s_4_4_24_reg_383 <= s_4_58_fu_901_p2;
            elsif (((icmp_ln104_1_fu_984_p2 = ap_const_lv1_1) and (icmp_ln104_reg_1383 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                s_4_4_24_reg_383 <= s_4_59_fu_188;
            end if; 
        end if;
    end process;

    s_4_59_fu_188_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln104_fu_916_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                s_4_59_fu_188 <= s_4_58_fu_901_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                s_4_59_fu_188 <= grp_ROUND_fu_440_ap_return_4;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                K0_reg_1222 <= grp_LOADBYTES_1_fu_422_ap_return;
                N0_reg_1230 <= grp_LOADBYTES_1_fu_430_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                K1_reg_1235 <= grp_LOADBYTES_1_fu_422_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                add_ln28_4_reg_1523 <= add_ln28_4_fu_1217_p2;
                s_3_reg_1513 <= s_3_fu_1206_p2;
                xor_ln135_reg_1518 <= xor_ln135_fu_1212_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                empty_12_reg_1261 <= empty_12_fu_653_p1;
                icmp_ln75_reg_1278 <= icmp_ln75_fu_682_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                icmp_ln104_reg_1383 <= icmp_ln104_fu_916_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln75_fu_682_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                icmp_ln77_reg_1282 <= icmp_ln77_fu_698_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln28_fu_1048_p2 = ap_const_lv1_1)))) then
                reg_578 <= grp_ROUND_fu_440_ap_return_0;
                reg_585 <= grp_ROUND_fu_440_ap_return_1;
                reg_592 <= grp_ROUND_fu_440_ap_return_2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state28) or ((ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln28_fu_1048_p2 = ap_const_lv1_1)))) then
                reg_599 <= grp_ROUND_fu_440_ap_return_3;
                reg_604 <= grp_ROUND_fu_440_ap_return_4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then
                reg_609 <= grp_ROUND_fu_455_ap_return_0;
                reg_614 <= grp_ROUND_fu_455_ap_return_1;
                reg_619 <= grp_ROUND_fu_455_ap_return_2;
                reg_624 <= grp_ROUND_fu_455_ap_return_3;
                reg_629 <= grp_ROUND_fu_455_ap_return_4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state12))) then
                reg_634 <= grp_ROUND_fu_440_ap_return_0;
                reg_639 <= grp_ROUND_fu_440_ap_return_1;
                reg_644 <= grp_ROUND_fu_440_ap_return_2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln75_fu_682_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln75_reg_1278 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20)))) then
                s_0_2_22_reg_330 <= grp_ROUND_fu_440_ap_return_0;
                s_1_2_21_reg_320 <= grp_ROUND_fu_440_ap_return_1;
                s_2_2_20_reg_310 <= grp_ROUND_fu_440_ap_return_2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) or ((icmp_ln77_fu_698_p2 = ap_const_lv1_0) and (icmp_ln75_fu_682_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then
                s_0_45_fu_144 <= grp_ROUND_fu_440_ap_return_0;
                s_1_43_fu_148 <= grp_ROUND_fu_440_ap_return_1;
                s_2_43_fu_152 <= grp_ROUND_fu_440_ap_return_2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                s_0_53_reg_1373 <= s_0_53_fu_895_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                s_0_61_reg_1489 <= s_0_61_fu_1039_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then
                s_0_62_reg_1508 <= s_0_62_fu_1180_p2;
                xor_ln117_reg_1503 <= xor_ln117_fu_1153_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln104_1_fu_984_p2 = ap_const_lv1_0) and (icmp_ln104_reg_1383 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                trunc_ln104_1_reg_1467 <= trunc_ln104_1_fu_990_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state21) and ((icmp_ln104_1_fu_984_p2 = ap_const_lv1_1) or (icmp_ln104_reg_1383 = ap_const_lv1_1)))) then
                    trunc_ln117_1_reg_1478(4 downto 3) <= trunc_ln117_1_fu_1029_p1(4 downto 3);
                trunc_ln117_2_reg_1483 <= trunc_ln117_2_fu_1034_p1;
                trunc_ln117_reg_1472 <= trunc_ln117_fu_1025_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln77_1_fu_767_p2 = ap_const_lv1_0) and (icmp_ln77_reg_1282 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                trunc_ln77_1_reg_1363 <= trunc_ln77_1_fu_776_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and ((icmp_ln77_1_fu_767_p2 = ap_const_lv1_1) or (icmp_ln77_reg_1282 = ap_const_lv1_1)))) then
                trunc_ln88_reg_1368 <= trunc_ln88_fu_833_p1;
            end if;
        end if;
    end process;
    trunc_ln117_1_reg_1478(2 downto 0) <= "000";
    ad_addr_0_lcssa_idx_reg_224(2 downto 0) <= "000";
    m_addr_0_lcssa_idx_reg_350(2 downto 0) <= "000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state4, ap_CS_fsm_state10, ap_CS_fsm_state23, icmp_ln28_fu_1048_p2, ap_CS_fsm_state28, ap_CS_fsm_state12, ap_CS_fsm_state2, icmp_ln75_fu_682_p2, icmp_ln77_reg_1282, ap_CS_fsm_state11, icmp_ln77_1_fu_767_p2, ap_CS_fsm_state16, icmp_ln104_reg_1383, ap_CS_fsm_state21, icmp_ln104_1_fu_984_p2, ap_CS_fsm_state22, ap_CS_fsm_state27, grp_LOADBYTES_2_fu_486_ap_done, grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_done, grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_done, grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_done, ap_CS_fsm_state35, ap_CS_fsm_state37, ap_block_state2_on_subcall_done, ap_block_state4_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((icmp_ln75_fu_682_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and ((icmp_ln77_1_fu_767_p2 = ap_const_lv1_1) or (icmp_ln77_reg_1282 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                if (((grp_LOADBYTES_2_fu_486_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state16 => 
                if (((grp_LOADBYTES_2_fu_486_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state21) and ((icmp_ln104_1_fu_984_p2 = ap_const_lv1_1) or (icmp_ln104_reg_1383 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state22 => 
                if (((grp_LOADBYTES_2_fu_486_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln28_fu_1048_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state27 => 
                if (((grp_LOADBYTES_2_fu_486_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state28 => 
                if (((grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                if (((grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                    ap_NS_fsm <= ap_ST_fsm_state36;
                else
                    ap_NS_fsm <= ap_ST_fsm_state35;
                end if;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                if (((grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state37;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ad_address0 <= grp_LOADBYTES_2_fu_486_ad_address0;

    ad_ce0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state16, grp_LOADBYTES_2_fu_486_ad_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ad_ce0 <= grp_LOADBYTES_2_fu_486_ad_ce0;
        else 
            ad_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln113_fu_1107_p2 <= std_logic_vector(unsigned(m_assign_fu_164) + unsigned(ap_const_lv64_8));
    add_ln114_fu_1113_p2 <= std_logic_vector(unsigned(mlen_assign_fu_168) + unsigned(ap_const_lv64_FFFFFFFFFFFFFFF8));
    add_ln28_1_fu_1054_p2 <= std_logic_vector(unsigned(i_reg_362) + unsigned(ap_const_lv4_1));
    add_ln28_4_fu_1217_p2 <= std_logic_vector(unsigned(trunc_ln117_reg_1472) + unsigned(m_addr_0_lcssa_idx_reg_350));
    add_ln28_fu_1096_p2 <= std_logic_vector(unsigned(zext_ln28_fu_1044_p1) + unsigned(trunc_ln104_2_fu_1092_p1));
    add_ln84_fu_781_p2 <= std_logic_vector(unsigned(ad_assign_fu_136) + unsigned(ap_const_lv64_8));
    add_ln85_fu_787_p2 <= std_logic_vector(unsigned(adlen_assign_fu_140) + unsigned(ap_const_lv64_FFFFFFFFFFFFFFF8));
    and_ln104_1_fu_1016_p3 <= (ap_const_lv58_0 & trunc_ln104_fu_1013_p1);
    and_ln1_fu_1004_p3 <= (tmp_6_fu_995_p4 & ap_const_lv3_0);
    and_ln77_1_fu_824_p3 <= (ap_const_lv58_0 & trunc_ln77_fu_821_p1);
    and_ln_fu_812_p3 <= (tmp_4_fu_803_p4 & ap_const_lv3_0);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state12_blk_assign_proc : process(grp_LOADBYTES_2_fu_486_ap_done)
    begin
        if ((grp_LOADBYTES_2_fu_486_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;

    ap_ST_fsm_state16_blk_assign_proc : process(grp_LOADBYTES_2_fu_486_ap_done)
    begin
        if ((grp_LOADBYTES_2_fu_486_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state16_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state16_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;

    ap_ST_fsm_state22_blk_assign_proc : process(grp_LOADBYTES_2_fu_486_ap_done)
    begin
        if ((grp_LOADBYTES_2_fu_486_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state22_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state22_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;

    ap_ST_fsm_state27_blk_assign_proc : process(grp_LOADBYTES_2_fu_486_ap_done)
    begin
        if ((grp_LOADBYTES_2_fu_486_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state27_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state27_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state28_blk_assign_proc : process(grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_done)
    begin
        if ((grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state28_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state28_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state29_blk <= ap_const_logic_0;

    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state2_on_subcall_done)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;

    ap_ST_fsm_state35_blk_assign_proc : process(grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_done)
    begin
        if ((grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state35_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state35_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state36_blk <= ap_const_logic_0;

    ap_ST_fsm_state37_blk_assign_proc : process(grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_done)
    begin
        if ((grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state37_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state37_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(ap_block_state4_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state4_on_subcall_done)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state2_on_subcall_done_assign_proc : process(grp_LOADBYTES_1_fu_422_ap_done, grp_LOADBYTES_1_fu_430_ap_done)
    begin
                ap_block_state2_on_subcall_done <= ((grp_LOADBYTES_1_fu_430_ap_done = ap_const_logic_0) or (grp_LOADBYTES_1_fu_422_ap_done = ap_const_logic_0));
    end process;


    ap_block_state4_on_subcall_done_assign_proc : process(grp_LOADBYTES_1_fu_422_ap_done, grp_LOADBYTES_1_fu_430_ap_done)
    begin
                ap_block_state4_on_subcall_done <= ((grp_LOADBYTES_1_fu_430_ap_done = ap_const_logic_0) or (grp_LOADBYTES_1_fu_422_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_done, ap_CS_fsm_state37)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state37)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_adlen_addr_0_lcssa_phi_fu_239_p4_assign_proc : process(icmp_ln77_reg_1282, ap_CS_fsm_state11, icmp_ln77_1_fu_767_p2, and_ln77_1_fu_824_p3, adlen_addr_0_lcssa_reg_236)
    begin
        if (((icmp_ln77_1_fu_767_p2 = ap_const_lv1_1) and (icmp_ln77_reg_1282 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ap_phi_mux_adlen_addr_0_lcssa_phi_fu_239_p4 <= and_ln77_1_fu_824_p3;
        else 
            ap_phi_mux_adlen_addr_0_lcssa_phi_fu_239_p4 <= adlen_addr_0_lcssa_reg_236;
        end if; 
    end process;


    ap_phi_mux_m_addr_0_lcssa_idx_phi_fu_354_p4_assign_proc : process(icmp_ln104_reg_1383, ap_CS_fsm_state21, icmp_ln104_1_fu_984_p2, and_ln1_fu_1004_p3, m_addr_0_lcssa_idx_reg_350)
    begin
        if (((icmp_ln104_1_fu_984_p2 = ap_const_lv1_1) and (icmp_ln104_reg_1383 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            ap_phi_mux_m_addr_0_lcssa_idx_phi_fu_354_p4 <= and_ln1_fu_1004_p3;
        else 
            ap_phi_mux_m_addr_0_lcssa_idx_phi_fu_354_p4 <= m_addr_0_lcssa_idx_reg_350;
        end if; 
    end process;


    ap_phi_mux_mlen_addr_0_lcssa_phi_fu_343_p4_assign_proc : process(icmp_ln104_reg_1383, ap_CS_fsm_state21, icmp_ln104_1_fu_984_p2, and_ln104_1_fu_1016_p3, mlen_addr_0_lcssa_reg_340)
    begin
        if (((icmp_ln104_1_fu_984_p2 = ap_const_lv1_1) and (icmp_ln104_reg_1383 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            ap_phi_mux_mlen_addr_0_lcssa_phi_fu_343_p4 <= and_ln104_1_fu_1016_p3;
        else 
            ap_phi_mux_mlen_addr_0_lcssa_phi_fu_343_p4 <= mlen_addr_0_lcssa_reg_340;
        end if; 
    end process;


    ap_phi_mux_s_0_2_22_phi_fu_333_p4_assign_proc : process(icmp_ln75_reg_1278, ap_CS_fsm_state20, grp_ROUND_fu_440_ap_return_0, s_0_2_22_reg_330)
    begin
        if (((icmp_ln75_reg_1278 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            ap_phi_mux_s_0_2_22_phi_fu_333_p4 <= grp_ROUND_fu_440_ap_return_0;
        else 
            ap_phi_mux_s_0_2_22_phi_fu_333_p4 <= s_0_2_22_reg_330;
        end if; 
    end process;


    ap_phi_mux_s_1_2_21_phi_fu_323_p4_assign_proc : process(icmp_ln75_reg_1278, ap_CS_fsm_state20, grp_ROUND_fu_440_ap_return_1, s_1_2_21_reg_320)
    begin
        if (((icmp_ln75_reg_1278 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            ap_phi_mux_s_1_2_21_phi_fu_323_p4 <= grp_ROUND_fu_440_ap_return_1;
        else 
            ap_phi_mux_s_1_2_21_phi_fu_323_p4 <= s_1_2_21_reg_320;
        end if; 
    end process;


    ap_phi_mux_s_2_2_20_phi_fu_313_p4_assign_proc : process(icmp_ln75_reg_1278, ap_CS_fsm_state20, grp_ROUND_fu_440_ap_return_2, s_2_2_20_reg_310)
    begin
        if (((icmp_ln75_reg_1278 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            ap_phi_mux_s_2_2_20_phi_fu_313_p4 <= grp_ROUND_fu_440_ap_return_2;
        else 
            ap_phi_mux_s_2_2_20_phi_fu_313_p4 <= s_2_2_20_reg_310;
        end if; 
    end process;


    ap_phi_mux_s_3_2_19_phi_fu_303_p4_assign_proc : process(icmp_ln75_reg_1278, ap_CS_fsm_state20, grp_ROUND_fu_440_ap_return_3, s_3_2_19_reg_300)
    begin
        if (((icmp_ln75_reg_1278 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            ap_phi_mux_s_3_2_19_phi_fu_303_p4 <= grp_ROUND_fu_440_ap_return_3;
        else 
            ap_phi_mux_s_3_2_19_phi_fu_303_p4 <= s_3_2_19_reg_300;
        end if; 
    end process;


    ap_phi_mux_s_4_2_18_phi_fu_294_p4_assign_proc : process(icmp_ln75_reg_1278, ap_CS_fsm_state20, grp_ROUND_fu_440_ap_return_4, s_4_2_18_reg_291)
    begin
        if (((icmp_ln75_reg_1278 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            ap_phi_mux_s_4_2_18_phi_fu_294_p4 <= grp_ROUND_fu_440_ap_return_4;
        else 
            ap_phi_mux_s_4_2_18_phi_fu_294_p4 <= s_4_2_18_reg_291;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_done, ap_CS_fsm_state37)
    begin
        if (((grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    c_address0_assign_proc : process(ap_CS_fsm_state23, ap_CS_fsm_state28, grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_c_address0, grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_c_address0, grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_c_address0, ap_CS_fsm_state35, ap_CS_fsm_state37, zext_ln28_3_fu_1102_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            c_address0 <= zext_ln28_3_fu_1102_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            c_address0 <= grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_c_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            c_address0 <= grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_c_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            c_address0 <= grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_c_address0;
        else 
            c_address0 <= "XXXXXX";
        end if; 
    end process;


    c_ce0_assign_proc : process(ap_CS_fsm_state23, ap_CS_fsm_state28, grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_c_ce0, grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_c_ce0, grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_c_ce0, ap_CS_fsm_state35, ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            c_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            c_ce0 <= grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_c_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            c_ce0 <= grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_c_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            c_ce0 <= grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_c_ce0;
        else 
            c_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    c_d0_assign_proc : process(ap_CS_fsm_state23, ap_CS_fsm_state28, grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_c_d0, grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_c_d0, grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_c_d0, ap_CS_fsm_state35, ap_CS_fsm_state37, trunc_ln28_3_fu_1087_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            c_d0 <= trunc_ln28_3_fu_1087_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            c_d0 <= grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_c_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            c_d0 <= grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_c_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            c_d0 <= grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_c_d0;
        else 
            c_d0 <= "XXXXXXXX";
        end if; 
    end process;


    c_we0_assign_proc : process(ap_CS_fsm_state23, icmp_ln28_fu_1048_p2, ap_CS_fsm_state28, grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_c_we0, grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_c_we0, grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_c_we0, ap_CS_fsm_state35, ap_CS_fsm_state37)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln28_fu_1048_p2 = ap_const_lv1_0))) then 
            c_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            c_we0 <= grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_c_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            c_we0 <= grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_c_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            c_we0 <= grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_c_we0;
        else 
            c_we0 <= ap_const_logic_0;
        end if; 
    end process;

    clen <= std_logic_vector(unsigned(mlen) + unsigned(ap_const_lv64_10));

    clen_ap_vld_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            clen_ap_vld <= ap_const_logic_1;
        else 
            clen_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    empty_12_fu_653_p1 <= mlen(61 - 1 downto 0);
    empty_fu_649_p1 <= adlen(61 - 1 downto 0);
    grp_LOADBYTES_1_fu_422_ap_start <= grp_LOADBYTES_1_fu_422_ap_start_reg;

    grp_LOADBYTES_1_fu_422_bytes_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_LOADBYTES_1_fu_422_bytes <= ap_const_lv4_8;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_LOADBYTES_1_fu_422_bytes <= ap_const_lv4_0;
        else 
            grp_LOADBYTES_1_fu_422_bytes <= "XXXX";
        end if; 
    end process;

    grp_LOADBYTES_1_fu_430_ap_start <= grp_LOADBYTES_1_fu_430_ap_start_reg;

    grp_LOADBYTES_1_fu_430_bytes_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_LOADBYTES_1_fu_430_bytes <= ap_const_lv4_8;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_LOADBYTES_1_fu_430_bytes <= ap_const_lv4_0;
        else 
            grp_LOADBYTES_1_fu_430_bytes <= "XXXX";
        end if; 
    end process;


    grp_LOADBYTES_2_fu_486_ad_q0_assign_proc : process(m_q0, ad_q0, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state22, ap_CS_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            grp_LOADBYTES_2_fu_486_ad_q0 <= m_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            grp_LOADBYTES_2_fu_486_ad_q0 <= ad_q0;
        else 
            grp_LOADBYTES_2_fu_486_ad_q0 <= "XXXXXXXX";
        end if; 
    end process;

    grp_LOADBYTES_2_fu_486_ap_start <= grp_LOADBYTES_2_fu_486_ap_start_reg;

    grp_LOADBYTES_2_fu_486_bytes_assign_proc : process(ap_CS_fsm_state12, trunc_ln77_1_reg_1363, ap_CS_fsm_state16, trunc_ln104_1_reg_1467, trunc_ln117_1_reg_1478, ap_CS_fsm_state22, ap_CS_fsm_state27, ad_addr_0_lcssa_idx_reg_224)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_LOADBYTES_2_fu_486_bytes <= trunc_ln117_1_reg_1478;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            grp_LOADBYTES_2_fu_486_bytes <= trunc_ln104_1_reg_1467;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_LOADBYTES_2_fu_486_bytes <= ad_addr_0_lcssa_idx_reg_224;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_LOADBYTES_2_fu_486_bytes <= trunc_ln77_1_reg_1363;
        else 
            grp_LOADBYTES_2_fu_486_bytes <= "XXXXX";
        end if; 
    end process;


    grp_LOADBYTES_2_fu_486_n_assign_proc : process(ap_CS_fsm_state12, trunc_ln88_reg_1368, ap_CS_fsm_state16, trunc_ln117_2_reg_1483, ap_CS_fsm_state22, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_LOADBYTES_2_fu_486_n <= trunc_ln117_2_reg_1483;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_LOADBYTES_2_fu_486_n <= trunc_ln88_reg_1368;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            grp_LOADBYTES_2_fu_486_n <= ap_const_lv32_8;
        else 
            grp_LOADBYTES_2_fu_486_n <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ROUND_fu_440_C_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state10, ap_CS_fsm_state23, icmp_ln28_fu_1048_p2, ap_CS_fsm_state28, ap_CS_fsm_state12, ap_CS_fsm_state19, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, icmp_ln75_reg_1278, ap_CS_fsm_state20, ap_CS_fsm_state34, ap_CS_fsm_state15, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_ROUND_fu_440_C <= ap_const_lv8_5A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_ROUND_fu_440_C <= ap_const_lv8_78;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln28_fu_1048_p2 = ap_const_lv1_1)))) then 
            grp_ROUND_fu_440_C <= ap_const_lv8_96;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state10) or ((icmp_ln75_reg_1278 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20)))) then 
            grp_ROUND_fu_440_C <= ap_const_lv8_4B;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_ROUND_fu_440_C <= ap_const_lv8_69;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            grp_ROUND_fu_440_C <= ap_const_lv8_87;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            grp_ROUND_fu_440_C <= ap_const_lv8_A5;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_ROUND_fu_440_C <= ap_const_lv8_C3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            grp_ROUND_fu_440_C <= ap_const_lv8_E1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            grp_ROUND_fu_440_C <= ap_const_lv8_F0;
        else 
            grp_ROUND_fu_440_C <= "XXXXXXXX";
        end if; 
    end process;


    grp_ROUND_fu_440_s_0_read_assign_proc : process(reg_578, ap_CS_fsm_state4, ap_CS_fsm_state10, ap_CS_fsm_state23, icmp_ln28_fu_1048_p2, ap_CS_fsm_state28, ap_CS_fsm_state12, ap_CS_fsm_state19, reg_609, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, reg_634, icmp_ln75_reg_1278, s_0_53_reg_1373, ap_CS_fsm_state20, s_0_61_reg_1489, s_0_62_reg_1508, ap_CS_fsm_state34, s_0_46_fu_838_p2, ap_CS_fsm_state15, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            grp_ROUND_fu_440_s_0_read <= s_0_62_reg_1508;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln28_fu_1048_p2 = ap_const_lv1_1))) then 
            grp_ROUND_fu_440_s_0_read <= s_0_61_reg_1489;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_ROUND_fu_440_s_0_read <= s_0_53_reg_1373;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or ((icmp_ln75_reg_1278 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20)))) then 
            grp_ROUND_fu_440_s_0_read <= reg_634;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_ROUND_fu_440_s_0_read <= s_0_46_fu_838_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            grp_ROUND_fu_440_s_0_read <= reg_609;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            grp_ROUND_fu_440_s_0_read <= reg_578;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_ROUND_fu_440_s_0_read <= ap_const_lv64_80400C0600000000;
        else 
            grp_ROUND_fu_440_s_0_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ROUND_fu_440_s_1_read_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state10, ap_CS_fsm_state23, icmp_ln28_fu_1048_p2, ap_CS_fsm_state28, reg_585, ap_CS_fsm_state12, ap_CS_fsm_state19, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, reg_614, reg_639, K0_reg_1222, icmp_ln75_reg_1278, ap_CS_fsm_state20, ap_CS_fsm_state34, s_1_1_16_reg_282, ap_CS_fsm_state15, ap_CS_fsm_state26, s_1_57_fu_1186_p2, s_1_43_fu_148, s_1_56_fu_176)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            grp_ROUND_fu_440_s_1_read <= s_1_57_fu_1186_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln28_fu_1048_p2 = ap_const_lv1_1))) then 
            grp_ROUND_fu_440_s_1_read <= s_1_56_fu_176;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_ROUND_fu_440_s_1_read <= s_1_1_16_reg_282;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or ((icmp_ln75_reg_1278 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20)))) then 
            grp_ROUND_fu_440_s_1_read <= reg_639;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_ROUND_fu_440_s_1_read <= s_1_43_fu_148;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            grp_ROUND_fu_440_s_1_read <= reg_614;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            grp_ROUND_fu_440_s_1_read <= reg_585;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_ROUND_fu_440_s_1_read <= K0_reg_1222;
        else 
            grp_ROUND_fu_440_s_1_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ROUND_fu_440_s_2_read_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state10, ap_CS_fsm_state23, icmp_ln28_fu_1048_p2, ap_CS_fsm_state28, reg_592, ap_CS_fsm_state12, ap_CS_fsm_state19, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, reg_619, reg_644, grp_LOADBYTES_1_fu_422_ap_return, icmp_ln75_reg_1278, ap_CS_fsm_state20, ap_CS_fsm_state34, s_2_1_15_reg_273, ap_CS_fsm_state15, ap_CS_fsm_state26, s_2_57_fu_1192_p2, s_2_43_fu_152, s_2_56_fu_180)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            grp_ROUND_fu_440_s_2_read <= s_2_57_fu_1192_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln28_fu_1048_p2 = ap_const_lv1_1))) then 
            grp_ROUND_fu_440_s_2_read <= s_2_56_fu_180;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_ROUND_fu_440_s_2_read <= s_2_1_15_reg_273;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or ((icmp_ln75_reg_1278 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20)))) then 
            grp_ROUND_fu_440_s_2_read <= reg_644;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_ROUND_fu_440_s_2_read <= s_2_43_fu_152;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            grp_ROUND_fu_440_s_2_read <= reg_619;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            grp_ROUND_fu_440_s_2_read <= reg_592;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_ROUND_fu_440_s_2_read <= grp_LOADBYTES_1_fu_422_ap_return;
        else 
            grp_ROUND_fu_440_s_2_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ROUND_fu_440_s_3_read_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state10, ap_CS_fsm_state23, icmp_ln28_fu_1048_p2, ap_CS_fsm_state28, reg_599, ap_CS_fsm_state12, ap_CS_fsm_state19, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, reg_624, N0_reg_1230, icmp_ln75_reg_1278, ap_CS_fsm_state20, ap_CS_fsm_state34, s_3_1_14_reg_264, s_3_4_25_reg_392, ap_CS_fsm_state15, ap_CS_fsm_state26, s_3_45_fu_156, s_3_58_fu_184)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            grp_ROUND_fu_440_s_3_read <= s_3_4_25_reg_392;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln28_fu_1048_p2 = ap_const_lv1_1))) then 
            grp_ROUND_fu_440_s_3_read <= s_3_58_fu_184;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_ROUND_fu_440_s_3_read <= s_3_1_14_reg_264;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_ROUND_fu_440_s_3_read <= s_3_45_fu_156;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            grp_ROUND_fu_440_s_3_read <= reg_624;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((icmp_ln75_reg_1278 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20)))) then 
            grp_ROUND_fu_440_s_3_read <= reg_599;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_ROUND_fu_440_s_3_read <= N0_reg_1230;
        else 
            grp_ROUND_fu_440_s_3_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ROUND_fu_440_s_4_read_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state10, ap_CS_fsm_state23, icmp_ln28_fu_1048_p2, ap_CS_fsm_state28, ap_CS_fsm_state12, ap_CS_fsm_state19, reg_604, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, reg_629, grp_LOADBYTES_1_fu_430_ap_return, icmp_ln75_reg_1278, ap_CS_fsm_state20, ap_CS_fsm_state34, s_4_1_13_reg_255, s_4_4_24_reg_383, ap_CS_fsm_state15, ap_CS_fsm_state26, s_4_45_fu_160, s_4_59_fu_188)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            grp_ROUND_fu_440_s_4_read <= s_4_4_24_reg_383;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln28_fu_1048_p2 = ap_const_lv1_1))) then 
            grp_ROUND_fu_440_s_4_read <= s_4_59_fu_188;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_ROUND_fu_440_s_4_read <= s_4_1_13_reg_255;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_ROUND_fu_440_s_4_read <= s_4_45_fu_160;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            grp_ROUND_fu_440_s_4_read <= reg_629;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((icmp_ln75_reg_1278 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20)))) then 
            grp_ROUND_fu_440_s_4_read <= reg_604;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_ROUND_fu_440_s_4_read <= grp_LOADBYTES_1_fu_430_ap_return;
        else 
            grp_ROUND_fu_440_s_4_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ROUND_fu_455_C_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_ROUND_fu_455_C <= ap_const_lv8_69;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_ROUND_fu_455_C <= ap_const_lv8_87;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_ROUND_fu_455_C <= ap_const_lv8_5A;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            grp_ROUND_fu_455_C <= ap_const_lv8_78;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            grp_ROUND_fu_455_C <= ap_const_lv8_96;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_ROUND_fu_455_C <= ap_const_lv8_B4;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            grp_ROUND_fu_455_C <= ap_const_lv8_D2;
        else 
            grp_ROUND_fu_455_C <= "XXXXXXXX";
        end if; 
    end process;

    grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_start <= grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_start_reg;
    grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_start <= grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_start_reg;
    grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_start <= grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_start_reg;
    icmp_ln104_1_fu_984_p2 <= "1" when (tmp_9_fu_974_p4 = ap_const_lv61_0) else "0";
    icmp_ln104_fu_916_p2 <= "1" when (tmp_8_fu_907_p4 = ap_const_lv61_0) else "0";
    icmp_ln28_fu_1048_p2 <= "1" when (i_reg_362 = ap_const_lv4_8) else "0";
    icmp_ln75_fu_682_p2 <= "1" when (adlen = ap_const_lv64_0) else "0";
    icmp_ln77_1_fu_767_p2 <= "1" when (tmp_7_fu_757_p4 = ap_const_lv61_0) else "0";
    icmp_ln77_fu_698_p2 <= "1" when (tmp_5_fu_688_p4 = ap_const_lv61_0) else "0";
    k_address0 <= grp_LOADBYTES_1_fu_422_k_address0;

    k_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, grp_LOADBYTES_1_fu_422_k_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            k_ce0 <= grp_LOADBYTES_1_fu_422_k_ce0;
        else 
            k_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln28_fu_1082_p2 <= std_logic_vector(shift_right(unsigned(s_0_61_reg_1489),to_integer(unsigned('0' & zext_ln28_2_fu_1078_p1(31-1 downto 0)))));
    m_address0 <= grp_LOADBYTES_2_fu_486_ad_address0;

    m_ce0_assign_proc : process(ap_CS_fsm_state22, ap_CS_fsm_state27, grp_LOADBYTES_2_fu_486_ad_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            m_ce0 <= grp_LOADBYTES_2_fu_486_ad_ce0;
        else 
            m_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    npub_address0 <= grp_LOADBYTES_1_fu_430_k_address0;

    npub_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, grp_LOADBYTES_1_fu_430_k_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            npub_ce0 <= grp_LOADBYTES_1_fu_430_k_ce0;
        else 
            npub_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    s_0_46_fu_838_p2 <= (s_0_45_fu_144 xor grp_LOADBYTES_2_fu_486_ap_return);
    s_0_53_fu_895_p2 <= (xor_ln89_fu_889_p2 xor s_0_1_17_reg_246);
    s_0_61_fu_1039_p2 <= (s_0_60_fu_172 xor grp_LOADBYTES_2_fu_486_ap_return);
    s_0_62_fu_1180_p2 <= (xor_ln117_fu_1153_p2 xor shl_ln119_fu_1174_p2);
    s_1_57_fu_1186_p2 <= (s_1_4_27_reg_412 xor K0_reg_1222);
    s_2_57_fu_1192_p2 <= (s_2_4_26_reg_402 xor K1_reg_1235);
    s_3_14_fu_672_p2 <= (grp_ROUND_fu_440_ap_return_3 xor K0_reg_1222);
    s_3_fu_1206_p2 <= (grp_ROUND_fu_440_ap_return_3 xor K0_reg_1222);
    s_4_13_fu_677_p2 <= (grp_ROUND_fu_440_ap_return_4 xor K1_reg_1235);
    s_4_58_fu_901_p2 <= (ap_phi_mux_s_4_2_18_phi_fu_294_p4 xor ap_const_lv64_1);
    shl_ln119_fu_1174_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv64_80),to_integer(unsigned('0' & sub_ln119_fu_1168_p2(31-1 downto 0)))));
    shl_ln1_fu_1064_p3 <= (trunc_ln28_fu_1060_p1 & ap_const_lv3_0);
    shl_ln2_fu_1160_p3 <= (mlen_addr_0_lcssa_reg_340 & ap_const_lv3_0);
    shl_ln89_fu_883_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv64_80),to_integer(unsigned('0' & sub_ln89_fu_877_p2(31-1 downto 0)))));
    shl_ln_fu_869_p3 <= (adlen_addr_0_lcssa_reg_236 & ap_const_lv3_0);
    sub_ln119_fu_1168_p2 <= std_logic_vector(unsigned(ap_const_lv64_38) - unsigned(shl_ln2_fu_1160_p3));
    sub_ln28_fu_1072_p2 <= std_logic_vector(signed(ap_const_lv6_38) - signed(shl_ln1_fu_1064_p3));
    sub_ln89_fu_877_p2 <= std_logic_vector(unsigned(ap_const_lv64_38) - unsigned(shl_ln_fu_869_p3));
    tmp_4_fu_803_p4 <= adlen(4 downto 3);
    tmp_5_fu_688_p4 <= adlen(63 downto 3);
    tmp_6_fu_995_p4 <= mlen(5 downto 3);
    tmp_7_fu_757_p4 <= adlen_assign_fu_140(63 downto 3);
    tmp_8_fu_907_p4 <= mlen(63 downto 3);
    tmp_9_fu_974_p4 <= mlen_assign_fu_168(63 downto 3);
    trunc_ln104_1_fu_990_p1 <= m_assign_fu_164(5 - 1 downto 0);
    trunc_ln104_2_fu_1092_p1 <= m_assign_fu_164(6 - 1 downto 0);
    trunc_ln104_fu_1013_p1 <= mlen(3 - 1 downto 0);
    trunc_ln117_1_fu_1029_p1 <= ap_phi_mux_m_addr_0_lcssa_idx_phi_fu_354_p4(5 - 1 downto 0);
    trunc_ln117_2_fu_1034_p1 <= ap_phi_mux_mlen_addr_0_lcssa_phi_fu_343_p4(32 - 1 downto 0);
    trunc_ln117_fu_1025_p1 <= ap_phi_mux_mlen_addr_0_lcssa_phi_fu_343_p4(6 - 1 downto 0);
    trunc_ln28_3_fu_1087_p1 <= lshr_ln28_fu_1082_p2(8 - 1 downto 0);
    trunc_ln28_fu_1060_p1 <= i_reg_362(3 - 1 downto 0);
    trunc_ln77_1_fu_776_p1 <= ad_assign_fu_136(5 - 1 downto 0);
    trunc_ln77_fu_821_p1 <= adlen(3 - 1 downto 0);
    trunc_ln88_fu_833_p1 <= ap_phi_mux_adlen_addr_0_lcssa_phi_fu_239_p4(32 - 1 downto 0);
    xor_ln117_fu_1153_p2 <= (s_0_4_28_reg_373 xor grp_LOADBYTES_2_fu_486_ap_return);
    xor_ln135_fu_1212_p2 <= (grp_ROUND_fu_440_ap_return_4 xor K1_reg_1235);
    xor_ln89_fu_889_p2 <= (shl_ln89_fu_883_p2 xor grp_LOADBYTES_2_fu_486_ap_return);
    zext_ln28_2_fu_1078_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln28_fu_1072_p2),64));
    zext_ln28_3_fu_1102_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln28_fu_1096_p2),64));
    zext_ln28_fu_1044_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_362),6));
end behav;
