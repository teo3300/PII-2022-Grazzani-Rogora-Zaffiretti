// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module crypto_aead_encrypt_c_crypto_aead_encrypt_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        c_address0,
        c_ce0,
        c_we0,
        c_d0,
        clen,
        clen_ap_vld,
        m_address0,
        m_ce0,
        m_q0,
        mlen,
        ad_address0,
        ad_ce0,
        ad_q0,
        adlen,
        npub_address0,
        npub_ce0,
        npub_q0,
        k_address0,
        k_ce0,
        k_q0
);

parameter    ap_ST_fsm_state1 = 37'd1;
parameter    ap_ST_fsm_state2 = 37'd2;
parameter    ap_ST_fsm_state3 = 37'd4;
parameter    ap_ST_fsm_state4 = 37'd8;
parameter    ap_ST_fsm_state5 = 37'd16;
parameter    ap_ST_fsm_state6 = 37'd32;
parameter    ap_ST_fsm_state7 = 37'd64;
parameter    ap_ST_fsm_state8 = 37'd128;
parameter    ap_ST_fsm_state9 = 37'd256;
parameter    ap_ST_fsm_state10 = 37'd512;
parameter    ap_ST_fsm_state11 = 37'd1024;
parameter    ap_ST_fsm_state12 = 37'd2048;
parameter    ap_ST_fsm_state13 = 37'd4096;
parameter    ap_ST_fsm_state14 = 37'd8192;
parameter    ap_ST_fsm_state15 = 37'd16384;
parameter    ap_ST_fsm_state16 = 37'd32768;
parameter    ap_ST_fsm_state17 = 37'd65536;
parameter    ap_ST_fsm_state18 = 37'd131072;
parameter    ap_ST_fsm_state19 = 37'd262144;
parameter    ap_ST_fsm_state20 = 37'd524288;
parameter    ap_ST_fsm_state21 = 37'd1048576;
parameter    ap_ST_fsm_state22 = 37'd2097152;
parameter    ap_ST_fsm_state23 = 37'd4194304;
parameter    ap_ST_fsm_state24 = 37'd8388608;
parameter    ap_ST_fsm_state25 = 37'd16777216;
parameter    ap_ST_fsm_state26 = 37'd33554432;
parameter    ap_ST_fsm_state27 = 37'd67108864;
parameter    ap_ST_fsm_state28 = 37'd134217728;
parameter    ap_ST_fsm_state29 = 37'd268435456;
parameter    ap_ST_fsm_state30 = 37'd536870912;
parameter    ap_ST_fsm_state31 = 37'd1073741824;
parameter    ap_ST_fsm_state32 = 37'd2147483648;
parameter    ap_ST_fsm_state33 = 37'd4294967296;
parameter    ap_ST_fsm_state34 = 37'd8589934592;
parameter    ap_ST_fsm_state35 = 37'd17179869184;
parameter    ap_ST_fsm_state36 = 37'd34359738368;
parameter    ap_ST_fsm_state37 = 37'd68719476736;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] c_address0;
output   c_ce0;
output   c_we0;
output  [7:0] c_d0;
output  [63:0] clen;
output   clen_ap_vld;
output  [4:0] m_address0;
output   m_ce0;
input  [7:0] m_q0;
input  [63:0] mlen;
output  [4:0] ad_address0;
output   ad_ce0;
input  [7:0] ad_q0;
input  [63:0] adlen;
output  [3:0] npub_address0;
output   npub_ce0;
input  [7:0] npub_q0;
output  [3:0] k_address0;
output   k_ce0;
input  [7:0] k_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] c_address0;
reg c_ce0;
reg c_we0;
reg[7:0] c_d0;
reg clen_ap_vld;
reg m_ce0;
reg ad_ce0;
reg npub_ce0;
reg k_ce0;

(* fsm_encoding = "none" *) reg   [36:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [63:0] reg_578;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state23;
wire   [0:0] icmp_ln28_fu_1048_p2;
wire    ap_CS_fsm_state28;
reg   [63:0] reg_585;
reg   [63:0] reg_592;
reg   [63:0] reg_599;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state19;
reg   [63:0] reg_604;
reg   [63:0] reg_609;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state33;
reg   [63:0] reg_614;
reg   [63:0] reg_619;
reg   [63:0] reg_624;
reg   [63:0] reg_629;
reg   [63:0] reg_634;
reg   [63:0] reg_639;
reg   [63:0] reg_644;
wire   [63:0] grp_LOADBYTES_1_fu_422_ap_return;
reg   [63:0] K0_reg_1222;
wire    ap_CS_fsm_state2;
wire   [63:0] grp_LOADBYTES_1_fu_430_ap_return;
reg   [63:0] N0_reg_1230;
reg   [63:0] K1_reg_1235;
wire   [60:0] empty_fu_649_p1;
wire   [60:0] empty_12_fu_653_p1;
reg   [60:0] empty_12_reg_1261;
wire   [63:0] s_3_14_fu_672_p2;
wire   [63:0] s_4_13_fu_677_p2;
wire   [0:0] icmp_ln77_fu_682_p2;
reg   [0:0] icmp_ln77_reg_1278;
wire   [0:0] icmp_ln79_fu_698_p2;
reg   [0:0] icmp_ln79_reg_1282;
wire    ap_CS_fsm_state11;
wire   [4:0] trunc_ln79_1_fu_776_p1;
reg   [4:0] trunc_ln79_1_reg_1363;
wire   [0:0] icmp_ln79_1_fu_767_p2;
wire   [31:0] trunc_ln90_fu_833_p1;
reg   [31:0] trunc_ln90_reg_1368;
wire   [63:0] s_0_53_fu_895_p2;
reg   [63:0] s_0_53_reg_1373;
wire    ap_CS_fsm_state16;
wire   [63:0] s_4_58_fu_901_p2;
wire    ap_CS_fsm_state20;
wire   [0:0] icmp_ln106_fu_916_p2;
reg   [0:0] icmp_ln106_reg_1383;
wire    ap_CS_fsm_state21;
wire   [4:0] trunc_ln106_1_fu_990_p1;
reg   [4:0] trunc_ln106_1_reg_1467;
wire   [0:0] icmp_ln106_1_fu_984_p2;
wire   [5:0] trunc_ln119_fu_1025_p1;
reg   [5:0] trunc_ln119_reg_1472;
wire   [4:0] trunc_ln119_1_fu_1029_p1;
reg   [4:0] trunc_ln119_1_reg_1478;
wire   [31:0] trunc_ln119_2_fu_1034_p1;
reg   [31:0] trunc_ln119_2_reg_1483;
wire   [63:0] s_0_61_fu_1039_p2;
reg   [63:0] s_0_61_reg_1489;
wire    ap_CS_fsm_state22;
wire   [3:0] add_ln28_1_fu_1054_p2;
wire   [63:0] xor_ln119_fu_1153_p2;
reg   [63:0] xor_ln119_reg_1503;
wire    ap_CS_fsm_state27;
wire   [63:0] s_0_62_fu_1180_p2;
reg   [63:0] s_0_62_reg_1508;
wire   [63:0] s_3_fu_1206_p2;
reg   [63:0] s_3_reg_1513;
wire    ap_CS_fsm_state34;
wire   [63:0] xor_ln137_fu_1212_p2;
reg   [63:0] xor_ln137_reg_1518;
wire   [5:0] add_ln28_4_fu_1217_p2;
reg   [5:0] add_ln28_4_reg_1523;
wire    grp_LOADBYTES_1_fu_422_ap_start;
wire    grp_LOADBYTES_1_fu_422_ap_done;
wire    grp_LOADBYTES_1_fu_422_ap_idle;
wire    grp_LOADBYTES_1_fu_422_ap_ready;
wire   [3:0] grp_LOADBYTES_1_fu_422_k_address0;
wire    grp_LOADBYTES_1_fu_422_k_ce0;
reg   [3:0] grp_LOADBYTES_1_fu_422_bytes;
wire    grp_LOADBYTES_1_fu_430_ap_start;
wire    grp_LOADBYTES_1_fu_430_ap_done;
wire    grp_LOADBYTES_1_fu_430_ap_idle;
wire    grp_LOADBYTES_1_fu_430_ap_ready;
wire   [3:0] grp_LOADBYTES_1_fu_430_k_address0;
wire    grp_LOADBYTES_1_fu_430_k_ce0;
reg   [3:0] grp_LOADBYTES_1_fu_430_bytes;
wire    grp_ROUND_fu_440_ap_ready;
reg   [63:0] grp_ROUND_fu_440_s_0_read;
reg   [63:0] grp_ROUND_fu_440_s_1_read;
reg   [63:0] grp_ROUND_fu_440_s_2_read;
reg   [63:0] grp_ROUND_fu_440_s_3_read;
reg   [63:0] grp_ROUND_fu_440_s_4_read;
reg   [7:0] grp_ROUND_fu_440_C;
wire   [63:0] grp_ROUND_fu_440_ap_return_0;
wire   [63:0] grp_ROUND_fu_440_ap_return_1;
wire   [63:0] grp_ROUND_fu_440_ap_return_2;
wire   [63:0] grp_ROUND_fu_440_ap_return_3;
wire   [63:0] grp_ROUND_fu_440_ap_return_4;
wire    grp_ROUND_fu_455_ap_ready;
reg   [7:0] grp_ROUND_fu_455_C;
wire   [63:0] grp_ROUND_fu_455_ap_return_0;
wire   [63:0] grp_ROUND_fu_455_ap_return_1;
wire   [63:0] grp_ROUND_fu_455_ap_return_2;
wire   [63:0] grp_ROUND_fu_455_ap_return_3;
wire   [63:0] grp_ROUND_fu_455_ap_return_4;
wire    grp_LOADBYTES_2_fu_486_ap_start;
wire    grp_LOADBYTES_2_fu_486_ap_done;
wire    grp_LOADBYTES_2_fu_486_ap_idle;
wire    grp_LOADBYTES_2_fu_486_ap_ready;
wire   [4:0] grp_LOADBYTES_2_fu_486_ad_address0;
wire    grp_LOADBYTES_2_fu_486_ad_ce0;
reg   [7:0] grp_LOADBYTES_2_fu_486_ad_q0;
reg   [4:0] grp_LOADBYTES_2_fu_486_bytes;
reg   [31:0] grp_LOADBYTES_2_fu_486_n;
wire   [63:0] grp_LOADBYTES_2_fu_486_ap_return;
wire    grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_start;
wire    grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_done;
wire    grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_idle;
wire    grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_ready;
wire   [5:0] grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_c_address0;
wire    grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_c_ce0;
wire    grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_c_we0;
wire   [7:0] grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_c_d0;
wire    grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_start;
wire    grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_done;
wire    grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_idle;
wire    grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_ready;
wire   [5:0] grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_c_address0;
wire    grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_c_ce0;
wire    grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_c_we0;
wire   [7:0] grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_c_d0;
wire    grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_start;
wire    grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_done;
wire    grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_idle;
wire    grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_ready;
wire   [5:0] grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_c_address0;
wire    grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_c_ce0;
wire    grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_c_we0;
wire   [7:0] grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_c_d0;
wire   [4:0] and_ln_fu_812_p3;
reg   [4:0] ad_addr_0_lcssa_idx_reg_224;
wire   [60:0] and_ln79_1_fu_824_p3;
reg   [60:0] ap_phi_mux_adlen_addr_0_lcssa_phi_fu_239_p4;
reg   [60:0] adlen_addr_0_lcssa_reg_236;
reg   [63:0] s_0_1_17_reg_246;
reg   [63:0] s_4_1_13_reg_255;
reg   [63:0] s_3_1_14_reg_264;
reg   [63:0] s_2_1_15_reg_273;
reg   [63:0] s_1_1_16_reg_282;
reg   [63:0] ap_phi_mux_s_4_2_18_phi_fu_294_p4;
reg   [63:0] s_4_2_18_reg_291;
reg   [63:0] ap_phi_mux_s_3_2_19_phi_fu_303_p4;
reg   [63:0] s_3_2_19_reg_300;
reg   [63:0] ap_phi_mux_s_2_2_20_phi_fu_313_p4;
reg   [63:0] s_2_2_20_reg_310;
reg   [63:0] ap_phi_mux_s_1_2_21_phi_fu_323_p4;
reg   [63:0] s_1_2_21_reg_320;
reg   [63:0] ap_phi_mux_s_0_2_22_phi_fu_333_p4;
reg   [63:0] s_0_2_22_reg_330;
wire   [60:0] and_ln106_1_fu_1016_p3;
reg   [60:0] ap_phi_mux_mlen_addr_0_lcssa_phi_fu_343_p4;
reg   [60:0] mlen_addr_0_lcssa_reg_340;
wire   [5:0] and_ln1_fu_1004_p3;
reg   [5:0] ap_phi_mux_m_addr_0_lcssa_idx_phi_fu_354_p4;
reg   [5:0] m_addr_0_lcssa_idx_reg_350;
reg   [3:0] i_reg_362;
reg   [63:0] s_0_4_28_reg_373;
reg   [63:0] s_4_4_24_reg_383;
reg   [63:0] s_3_4_25_reg_392;
reg   [63:0] s_2_4_26_reg_402;
reg   [63:0] s_1_4_27_reg_412;
reg    grp_LOADBYTES_1_fu_422_ap_start_reg;
wire    ap_CS_fsm_state3;
reg    grp_LOADBYTES_1_fu_430_ap_start_reg;
wire   [63:0] s_0_46_fu_838_p2;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state26;
wire   [63:0] s_1_57_fu_1186_p2;
wire   [63:0] s_2_57_fu_1192_p2;
reg    grp_LOADBYTES_2_fu_486_ap_start_reg;
reg    grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_start_reg;
reg    grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_start_reg;
wire    ap_CS_fsm_state35;
reg    grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_start_reg;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state37;
wire   [63:0] zext_ln28_3_fu_1102_p1;
reg   [63:0] ad_assign_fu_136;
wire   [63:0] add_ln86_fu_781_p2;
reg   [63:0] adlen_assign_fu_140;
wire   [63:0] add_ln87_fu_787_p2;
reg   [63:0] s_0_45_fu_144;
reg   [63:0] s_1_43_fu_148;
reg   [63:0] s_2_43_fu_152;
reg   [63:0] s_3_45_fu_156;
reg   [63:0] s_4_45_fu_160;
reg   [63:0] m_assign_fu_164;
wire   [63:0] add_ln115_fu_1107_p2;
reg   [63:0] mlen_assign_fu_168;
wire   [63:0] add_ln116_fu_1113_p2;
reg   [63:0] s_0_60_fu_172;
reg   [63:0] s_1_56_fu_176;
reg   [63:0] s_2_56_fu_180;
reg   [63:0] s_3_58_fu_184;
reg   [63:0] s_4_59_fu_188;
wire   [7:0] trunc_ln28_3_fu_1087_p1;
wire   [60:0] tmp_5_fu_688_p4;
wire   [60:0] tmp_7_fu_757_p4;
wire   [1:0] tmp_4_fu_803_p4;
wire   [2:0] trunc_ln79_fu_821_p1;
wire   [63:0] shl_ln_fu_869_p3;
wire   [63:0] sub_ln91_fu_877_p2;
wire   [63:0] shl_ln91_fu_883_p2;
wire   [63:0] xor_ln91_fu_889_p2;
wire   [60:0] tmp_8_fu_907_p4;
wire   [60:0] tmp_9_fu_974_p4;
wire   [2:0] tmp_6_fu_995_p4;
wire   [2:0] trunc_ln106_fu_1013_p1;
wire   [2:0] trunc_ln28_fu_1060_p1;
wire   [5:0] shl_ln1_fu_1064_p3;
wire   [5:0] sub_ln28_fu_1072_p2;
wire   [63:0] zext_ln28_2_fu_1078_p1;
wire   [63:0] lshr_ln28_fu_1082_p2;
wire   [5:0] zext_ln28_fu_1044_p1;
wire   [5:0] trunc_ln106_2_fu_1092_p1;
wire   [5:0] add_ln28_fu_1096_p2;
wire   [63:0] shl_ln2_fu_1160_p3;
wire   [63:0] sub_ln121_fu_1168_p2;
wire   [63:0] shl_ln121_fu_1174_p2;
reg   [36:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_block_state2_on_subcall_done;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_block_state4_on_subcall_done;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
reg    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
reg    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
reg    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
reg    ap_ST_fsm_state27_blk;
reg    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
reg    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
reg    ap_ST_fsm_state37_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 37'd1;
#0 grp_LOADBYTES_1_fu_422_ap_start_reg = 1'b0;
#0 grp_LOADBYTES_1_fu_430_ap_start_reg = 1'b0;
#0 grp_LOADBYTES_2_fu_486_ap_start_reg = 1'b0;
#0 grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_start_reg = 1'b0;
#0 grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_start_reg = 1'b0;
#0 grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_start_reg = 1'b0;
end

crypto_aead_encrypt_c_LOADBYTES_1 grp_LOADBYTES_1_fu_422(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_LOADBYTES_1_fu_422_ap_start),
    .ap_done(grp_LOADBYTES_1_fu_422_ap_done),
    .ap_idle(grp_LOADBYTES_1_fu_422_ap_idle),
    .ap_ready(grp_LOADBYTES_1_fu_422_ap_ready),
    .k_address0(grp_LOADBYTES_1_fu_422_k_address0),
    .k_ce0(grp_LOADBYTES_1_fu_422_k_ce0),
    .k_q0(k_q0),
    .bytes(grp_LOADBYTES_1_fu_422_bytes),
    .ap_return(grp_LOADBYTES_1_fu_422_ap_return)
);

crypto_aead_encrypt_c_LOADBYTES_1 grp_LOADBYTES_1_fu_430(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_LOADBYTES_1_fu_430_ap_start),
    .ap_done(grp_LOADBYTES_1_fu_430_ap_done),
    .ap_idle(grp_LOADBYTES_1_fu_430_ap_idle),
    .ap_ready(grp_LOADBYTES_1_fu_430_ap_ready),
    .k_address0(grp_LOADBYTES_1_fu_430_k_address0),
    .k_ce0(grp_LOADBYTES_1_fu_430_k_ce0),
    .k_q0(npub_q0),
    .bytes(grp_LOADBYTES_1_fu_430_bytes),
    .ap_return(grp_LOADBYTES_1_fu_430_ap_return)
);

crypto_aead_encrypt_c_ROUND grp_ROUND_fu_440(
    .ap_ready(grp_ROUND_fu_440_ap_ready),
    .s_0_read(grp_ROUND_fu_440_s_0_read),
    .s_1_read(grp_ROUND_fu_440_s_1_read),
    .s_2_read(grp_ROUND_fu_440_s_2_read),
    .s_3_read(grp_ROUND_fu_440_s_3_read),
    .s_4_read(grp_ROUND_fu_440_s_4_read),
    .C(grp_ROUND_fu_440_C),
    .ap_return_0(grp_ROUND_fu_440_ap_return_0),
    .ap_return_1(grp_ROUND_fu_440_ap_return_1),
    .ap_return_2(grp_ROUND_fu_440_ap_return_2),
    .ap_return_3(grp_ROUND_fu_440_ap_return_3),
    .ap_return_4(grp_ROUND_fu_440_ap_return_4)
);

crypto_aead_encrypt_c_ROUND grp_ROUND_fu_455(
    .ap_ready(grp_ROUND_fu_455_ap_ready),
    .s_0_read(grp_ROUND_fu_440_ap_return_0),
    .s_1_read(grp_ROUND_fu_440_ap_return_1),
    .s_2_read(grp_ROUND_fu_440_ap_return_2),
    .s_3_read(grp_ROUND_fu_440_ap_return_3),
    .s_4_read(grp_ROUND_fu_440_ap_return_4),
    .C(grp_ROUND_fu_455_C),
    .ap_return_0(grp_ROUND_fu_455_ap_return_0),
    .ap_return_1(grp_ROUND_fu_455_ap_return_1),
    .ap_return_2(grp_ROUND_fu_455_ap_return_2),
    .ap_return_3(grp_ROUND_fu_455_ap_return_3),
    .ap_return_4(grp_ROUND_fu_455_ap_return_4)
);

crypto_aead_encrypt_c_LOADBYTES_2 grp_LOADBYTES_2_fu_486(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_LOADBYTES_2_fu_486_ap_start),
    .ap_done(grp_LOADBYTES_2_fu_486_ap_done),
    .ap_idle(grp_LOADBYTES_2_fu_486_ap_idle),
    .ap_ready(grp_LOADBYTES_2_fu_486_ap_ready),
    .ad_address0(grp_LOADBYTES_2_fu_486_ad_address0),
    .ad_ce0(grp_LOADBYTES_2_fu_486_ad_ce0),
    .ad_q0(grp_LOADBYTES_2_fu_486_ad_q0),
    .bytes(grp_LOADBYTES_2_fu_486_bytes),
    .n(grp_LOADBYTES_2_fu_486_n),
    .ap_return(grp_LOADBYTES_2_fu_486_ap_return)
);

crypto_aead_encrypt_c_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1 grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_start),
    .ap_done(grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_done),
    .ap_idle(grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_idle),
    .ap_ready(grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_ready),
    .n_assign(trunc_ln119_2_reg_1483),
    .xor_ln119(xor_ln119_reg_1503),
    .m_addr_0_lcssa_idx(m_addr_0_lcssa_idx_reg_350),
    .c_address0(grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_c_address0),
    .c_ce0(grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_c_ce0),
    .c_we0(grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_c_we0),
    .c_d0(grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_c_d0)
);

crypto_aead_encrypt_c_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11 grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_start),
    .ap_done(grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_done),
    .ap_idle(grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_idle),
    .ap_ready(grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_ready),
    .s_3(s_3_reg_1513),
    .trunc_ln3(trunc_ln119_reg_1472),
    .m_addr_0_lcssa_idx(m_addr_0_lcssa_idx_reg_350),
    .c_address0(grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_c_address0),
    .c_ce0(grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_c_ce0),
    .c_we0(grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_c_we0),
    .c_d0(grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_c_d0)
);

crypto_aead_encrypt_c_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12 grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_start),
    .ap_done(grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_done),
    .ap_idle(grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_idle),
    .ap_ready(grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_ready),
    .xor_ln137(xor_ln137_reg_1518),
    .add_ln28_7(add_ln28_4_reg_1523),
    .c_address0(grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_c_address0),
    .c_ce0(grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_c_ce0),
    .c_we0(grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_c_we0),
    .c_d0(grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_c_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_LOADBYTES_1_fu_422_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
            grp_LOADBYTES_1_fu_422_ap_start_reg <= 1'b1;
        end else if ((grp_LOADBYTES_1_fu_422_ap_ready == 1'b1)) begin
            grp_LOADBYTES_1_fu_422_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_LOADBYTES_1_fu_430_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
            grp_LOADBYTES_1_fu_430_ap_start_reg <= 1'b1;
        end else if ((grp_LOADBYTES_1_fu_430_ap_ready == 1'b1)) begin
            grp_LOADBYTES_1_fu_430_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_LOADBYTES_2_fu_486_ap_start_reg <= 1'b0;
    end else begin
        if ((((icmp_ln106_1_fu_984_p2 == 1'd0) & (icmp_ln106_reg_1383 == 1'd0) & (1'b1 == ap_CS_fsm_state21)) | ((1'b1 == ap_CS_fsm_state21) & ((icmp_ln106_1_fu_984_p2 == 1'd1) | (icmp_ln106_reg_1383 == 1'd1))) | ((icmp_ln79_1_fu_767_p2 == 1'd0) & (icmp_ln79_reg_1282 == 1'd0) & (1'b1 == ap_CS_fsm_state11)) | ((1'b1 == ap_CS_fsm_state11) & ((icmp_ln79_1_fu_767_p2 == 1'd1) | (icmp_ln79_reg_1282 == 1'd1))))) begin
            grp_LOADBYTES_2_fu_486_ap_start_reg <= 1'b1;
        end else if ((grp_LOADBYTES_2_fu_486_ap_ready == 1'b1)) begin
            grp_LOADBYTES_2_fu_486_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state34)) begin
            grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_start_reg <= 1'b1;
        end else if ((grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_ready == 1'b1)) begin
            grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state36)) begin
            grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_start_reg <= 1'b1;
        end else if ((grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_ready == 1'b1)) begin
            grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_start_reg <= 1'b0;
    end else begin
        if (((grp_LOADBYTES_2_fu_486_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
            grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_start_reg <= 1'b1;
        end else if ((grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_ready == 1'b1)) begin
            grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_fu_698_p2 == 1'd1) & (icmp_ln77_fu_682_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
                ad_addr_0_lcssa_idx_reg_224[3] <= 1'b0;
        ad_addr_0_lcssa_idx_reg_224[4] <= 1'b0;
    end else if (((icmp_ln79_1_fu_767_p2 == 1'd1) & (icmp_ln79_reg_1282 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
                ad_addr_0_lcssa_idx_reg_224[4 : 3] <= and_ln_fu_812_p3[4 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_fu_698_p2 == 1'd0) & (icmp_ln77_fu_682_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        ad_assign_fu_136 <= 64'd0;
    end else if (((icmp_ln79_1_fu_767_p2 == 1'd0) & (icmp_ln79_reg_1282 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        ad_assign_fu_136 <= add_ln86_fu_781_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_fu_698_p2 == 1'd1) & (icmp_ln77_fu_682_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        adlen_addr_0_lcssa_reg_236 <= empty_fu_649_p1;
    end else if (((icmp_ln79_1_fu_767_p2 == 1'd1) & (icmp_ln79_reg_1282 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        adlen_addr_0_lcssa_reg_236 <= and_ln79_1_fu_824_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_fu_698_p2 == 1'd0) & (icmp_ln77_fu_682_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        adlen_assign_fu_140 <= adlen;
    end else if (((icmp_ln79_1_fu_767_p2 == 1'd0) & (icmp_ln79_reg_1282 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        adlen_assign_fu_140 <= add_ln87_fu_787_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_LOADBYTES_2_fu_486_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
        i_reg_362 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln28_fu_1048_p2 == 1'd0))) begin
        i_reg_362 <= add_ln28_1_fu_1054_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln106_fu_916_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                m_addr_0_lcssa_idx_reg_350[3] <= 1'b0;
        m_addr_0_lcssa_idx_reg_350[4] <= 1'b0;
        m_addr_0_lcssa_idx_reg_350[5] <= 1'b0;
    end else if (((icmp_ln106_1_fu_984_p2 == 1'd1) & (icmp_ln106_reg_1383 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
                m_addr_0_lcssa_idx_reg_350[5 : 3] <= and_ln1_fu_1004_p3[5 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln106_fu_916_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        m_assign_fu_164 <= 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln28_fu_1048_p2 == 1'd1))) begin
        m_assign_fu_164 <= add_ln115_fu_1107_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln106_fu_916_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        mlen_addr_0_lcssa_reg_340 <= empty_12_reg_1261;
    end else if (((icmp_ln106_1_fu_984_p2 == 1'd1) & (icmp_ln106_reg_1383 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        mlen_addr_0_lcssa_reg_340 <= and_ln106_1_fu_1016_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln106_fu_916_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        mlen_assign_fu_168 <= mlen;
    end else if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln28_fu_1048_p2 == 1'd1))) begin
        mlen_assign_fu_168 <= add_ln116_fu_1113_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_fu_698_p2 == 1'd1) & (icmp_ln77_fu_682_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        s_0_1_17_reg_246 <= grp_ROUND_fu_440_ap_return_0;
    end else if (((icmp_ln79_1_fu_767_p2 == 1'd1) & (icmp_ln79_reg_1282 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        s_0_1_17_reg_246 <= s_0_45_fu_144;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln106_fu_916_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        s_0_4_28_reg_373 <= ap_phi_mux_s_0_2_22_phi_fu_333_p4;
    end else if (((icmp_ln106_1_fu_984_p2 == 1'd1) & (icmp_ln106_reg_1383 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        s_0_4_28_reg_373 <= s_0_60_fu_172;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln106_fu_916_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        s_0_60_fu_172 <= ap_phi_mux_s_0_2_22_phi_fu_333_p4;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        s_0_60_fu_172 <= grp_ROUND_fu_440_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_fu_698_p2 == 1'd1) & (icmp_ln77_fu_682_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        s_1_1_16_reg_282 <= grp_ROUND_fu_440_ap_return_1;
    end else if (((icmp_ln79_1_fu_767_p2 == 1'd1) & (icmp_ln79_reg_1282 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        s_1_1_16_reg_282 <= s_1_43_fu_148;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln106_fu_916_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        s_1_4_27_reg_412 <= ap_phi_mux_s_1_2_21_phi_fu_323_p4;
    end else if (((icmp_ln106_1_fu_984_p2 == 1'd1) & (icmp_ln106_reg_1383 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        s_1_4_27_reg_412 <= s_1_56_fu_176;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln106_fu_916_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        s_1_56_fu_176 <= ap_phi_mux_s_1_2_21_phi_fu_323_p4;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        s_1_56_fu_176 <= grp_ROUND_fu_440_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_fu_698_p2 == 1'd1) & (icmp_ln77_fu_682_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        s_2_1_15_reg_273 <= grp_ROUND_fu_440_ap_return_2;
    end else if (((icmp_ln79_1_fu_767_p2 == 1'd1) & (icmp_ln79_reg_1282 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        s_2_1_15_reg_273 <= s_2_43_fu_152;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln106_fu_916_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        s_2_4_26_reg_402 <= ap_phi_mux_s_2_2_20_phi_fu_313_p4;
    end else if (((icmp_ln106_1_fu_984_p2 == 1'd1) & (icmp_ln106_reg_1383 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        s_2_4_26_reg_402 <= s_2_56_fu_180;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln106_fu_916_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        s_2_56_fu_180 <= ap_phi_mux_s_2_2_20_phi_fu_313_p4;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        s_2_56_fu_180 <= grp_ROUND_fu_440_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_fu_698_p2 == 1'd1) & (icmp_ln77_fu_682_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        s_3_1_14_reg_264 <= s_3_14_fu_672_p2;
    end else if (((icmp_ln79_1_fu_767_p2 == 1'd1) & (icmp_ln79_reg_1282 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        s_3_1_14_reg_264 <= s_3_45_fu_156;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln77_fu_682_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        s_3_2_19_reg_300 <= s_3_14_fu_672_p2;
    end else if (((icmp_ln77_reg_1278 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        s_3_2_19_reg_300 <= grp_ROUND_fu_440_ap_return_3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_fu_698_p2 == 1'd0) & (icmp_ln77_fu_682_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        s_3_45_fu_156 <= s_3_14_fu_672_p2;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        s_3_45_fu_156 <= grp_ROUND_fu_440_ap_return_3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln106_fu_916_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        s_3_4_25_reg_392 <= ap_phi_mux_s_3_2_19_phi_fu_303_p4;
    end else if (((icmp_ln106_1_fu_984_p2 == 1'd1) & (icmp_ln106_reg_1383 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        s_3_4_25_reg_392 <= s_3_58_fu_184;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln106_fu_916_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        s_3_58_fu_184 <= ap_phi_mux_s_3_2_19_phi_fu_303_p4;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        s_3_58_fu_184 <= grp_ROUND_fu_440_ap_return_3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_fu_698_p2 == 1'd1) & (icmp_ln77_fu_682_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        s_4_1_13_reg_255 <= s_4_13_fu_677_p2;
    end else if (((icmp_ln79_1_fu_767_p2 == 1'd1) & (icmp_ln79_reg_1282 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        s_4_1_13_reg_255 <= s_4_45_fu_160;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln77_fu_682_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        s_4_2_18_reg_291 <= s_4_13_fu_677_p2;
    end else if (((icmp_ln77_reg_1278 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        s_4_2_18_reg_291 <= grp_ROUND_fu_440_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_fu_698_p2 == 1'd0) & (icmp_ln77_fu_682_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        s_4_45_fu_160 <= s_4_13_fu_677_p2;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        s_4_45_fu_160 <= grp_ROUND_fu_440_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln106_fu_916_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        s_4_4_24_reg_383 <= s_4_58_fu_901_p2;
    end else if (((icmp_ln106_1_fu_984_p2 == 1'd1) & (icmp_ln106_reg_1383 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        s_4_4_24_reg_383 <= s_4_59_fu_188;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln106_fu_916_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        s_4_59_fu_188 <= s_4_58_fu_901_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        s_4_59_fu_188 <= grp_ROUND_fu_440_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        K0_reg_1222 <= grp_LOADBYTES_1_fu_422_ap_return;
        N0_reg_1230 <= grp_LOADBYTES_1_fu_430_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        K1_reg_1235 <= grp_LOADBYTES_1_fu_422_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        add_ln28_4_reg_1523 <= add_ln28_4_fu_1217_p2;
        s_3_reg_1513 <= s_3_fu_1206_p2;
        xor_ln137_reg_1518 <= xor_ln137_fu_1212_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        empty_12_reg_1261 <= empty_12_fu_653_p1;
        icmp_ln77_reg_1278 <= icmp_ln77_fu_682_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        icmp_ln106_reg_1383 <= icmp_ln106_fu_916_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln77_fu_682_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        icmp_ln79_reg_1282 <= icmp_ln79_fu_698_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state10) | ((1'b1 == ap_CS_fsm_state23) & (icmp_ln28_fu_1048_p2 == 1'd1)))) begin
        reg_578 <= grp_ROUND_fu_440_ap_return_0;
        reg_585 <= grp_ROUND_fu_440_ap_return_1;
        reg_592 <= grp_ROUND_fu_440_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state28) | ((1'b1 == ap_CS_fsm_state23) & (icmp_ln28_fu_1048_p2 == 1'd1)))) begin
        reg_599 <= grp_ROUND_fu_440_ap_return_3;
        reg_604 <= grp_ROUND_fu_440_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        reg_609 <= grp_ROUND_fu_455_ap_return_0;
        reg_614 <= grp_ROUND_fu_455_ap_return_1;
        reg_619 <= grp_ROUND_fu_455_ap_return_2;
        reg_624 <= grp_ROUND_fu_455_ap_return_3;
        reg_629 <= grp_ROUND_fu_455_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state12))) begin
        reg_634 <= grp_ROUND_fu_440_ap_return_0;
        reg_639 <= grp_ROUND_fu_440_ap_return_1;
        reg_644 <= grp_ROUND_fu_440_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln77_fu_682_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)) | ((icmp_ln77_reg_1278 == 1'd0) & (1'b1 == ap_CS_fsm_state20)))) begin
        s_0_2_22_reg_330 <= grp_ROUND_fu_440_ap_return_0;
        s_1_2_21_reg_320 <= grp_ROUND_fu_440_ap_return_1;
        s_2_2_20_reg_310 <= grp_ROUND_fu_440_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((icmp_ln79_fu_698_p2 == 1'd0) & (icmp_ln77_fu_682_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10)))) begin
        s_0_45_fu_144 <= grp_ROUND_fu_440_ap_return_0;
        s_1_43_fu_148 <= grp_ROUND_fu_440_ap_return_1;
        s_2_43_fu_152 <= grp_ROUND_fu_440_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        s_0_53_reg_1373 <= s_0_53_fu_895_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        s_0_61_reg_1489 <= s_0_61_fu_1039_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        s_0_62_reg_1508 <= s_0_62_fu_1180_p2;
        xor_ln119_reg_1503 <= xor_ln119_fu_1153_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln106_1_fu_984_p2 == 1'd0) & (icmp_ln106_reg_1383 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        trunc_ln106_1_reg_1467 <= trunc_ln106_1_fu_990_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & ((icmp_ln106_1_fu_984_p2 == 1'd1) | (icmp_ln106_reg_1383 == 1'd1)))) begin
        trunc_ln119_1_reg_1478[4 : 3] <= trunc_ln119_1_fu_1029_p1[4 : 3];
        trunc_ln119_2_reg_1483 <= trunc_ln119_2_fu_1034_p1;
        trunc_ln119_reg_1472 <= trunc_ln119_fu_1025_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_1_fu_767_p2 == 1'd0) & (icmp_ln79_reg_1282 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        trunc_ln79_1_reg_1363 <= trunc_ln79_1_fu_776_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & ((icmp_ln79_1_fu_767_p2 == 1'd1) | (icmp_ln79_reg_1282 == 1'd1)))) begin
        trunc_ln90_reg_1368 <= trunc_ln90_fu_833_p1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state12))) begin
        ad_ce0 = grp_LOADBYTES_2_fu_486_ad_ce0;
    end else begin
        ad_ce0 = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

always @ (*) begin
    if ((grp_LOADBYTES_2_fu_486_ap_done == 1'b0)) begin
        ap_ST_fsm_state12_blk = 1'b1;
    end else begin
        ap_ST_fsm_state12_blk = 1'b0;
    end
end

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

always @ (*) begin
    if ((grp_LOADBYTES_2_fu_486_ap_done == 1'b0)) begin
        ap_ST_fsm_state16_blk = 1'b1;
    end else begin
        ap_ST_fsm_state16_blk = 1'b0;
    end
end

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

always @ (*) begin
    if ((grp_LOADBYTES_2_fu_486_ap_done == 1'b0)) begin
        ap_ST_fsm_state22_blk = 1'b1;
    end else begin
        ap_ST_fsm_state22_blk = 1'b0;
    end
end

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

always @ (*) begin
    if ((grp_LOADBYTES_2_fu_486_ap_done == 1'b0)) begin
        ap_ST_fsm_state27_blk = 1'b1;
    end else begin
        ap_ST_fsm_state27_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_done == 1'b0)) begin
        ap_ST_fsm_state28_blk = 1'b1;
    end else begin
        ap_ST_fsm_state28_blk = 1'b0;
    end
end

assign ap_ST_fsm_state29_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state2_on_subcall_done)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

always @ (*) begin
    if ((grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_done == 1'b0)) begin
        ap_ST_fsm_state35_blk = 1'b1;
    end else begin
        ap_ST_fsm_state35_blk = 1'b0;
    end
end

assign ap_ST_fsm_state36_blk = 1'b0;

always @ (*) begin
    if ((grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_done == 1'b0)) begin
        ap_ST_fsm_state37_blk = 1'b1;
    end else begin
        ap_ST_fsm_state37_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state4_on_subcall_done)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state37)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln79_1_fu_767_p2 == 1'd1) & (icmp_ln79_reg_1282 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_phi_mux_adlen_addr_0_lcssa_phi_fu_239_p4 = and_ln79_1_fu_824_p3;
    end else begin
        ap_phi_mux_adlen_addr_0_lcssa_phi_fu_239_p4 = adlen_addr_0_lcssa_reg_236;
    end
end

always @ (*) begin
    if (((icmp_ln106_1_fu_984_p2 == 1'd1) & (icmp_ln106_reg_1383 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        ap_phi_mux_m_addr_0_lcssa_idx_phi_fu_354_p4 = and_ln1_fu_1004_p3;
    end else begin
        ap_phi_mux_m_addr_0_lcssa_idx_phi_fu_354_p4 = m_addr_0_lcssa_idx_reg_350;
    end
end

always @ (*) begin
    if (((icmp_ln106_1_fu_984_p2 == 1'd1) & (icmp_ln106_reg_1383 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        ap_phi_mux_mlen_addr_0_lcssa_phi_fu_343_p4 = and_ln106_1_fu_1016_p3;
    end else begin
        ap_phi_mux_mlen_addr_0_lcssa_phi_fu_343_p4 = mlen_addr_0_lcssa_reg_340;
    end
end

always @ (*) begin
    if (((icmp_ln77_reg_1278 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        ap_phi_mux_s_0_2_22_phi_fu_333_p4 = grp_ROUND_fu_440_ap_return_0;
    end else begin
        ap_phi_mux_s_0_2_22_phi_fu_333_p4 = s_0_2_22_reg_330;
    end
end

always @ (*) begin
    if (((icmp_ln77_reg_1278 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        ap_phi_mux_s_1_2_21_phi_fu_323_p4 = grp_ROUND_fu_440_ap_return_1;
    end else begin
        ap_phi_mux_s_1_2_21_phi_fu_323_p4 = s_1_2_21_reg_320;
    end
end

always @ (*) begin
    if (((icmp_ln77_reg_1278 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        ap_phi_mux_s_2_2_20_phi_fu_313_p4 = grp_ROUND_fu_440_ap_return_2;
    end else begin
        ap_phi_mux_s_2_2_20_phi_fu_313_p4 = s_2_2_20_reg_310;
    end
end

always @ (*) begin
    if (((icmp_ln77_reg_1278 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        ap_phi_mux_s_3_2_19_phi_fu_303_p4 = grp_ROUND_fu_440_ap_return_3;
    end else begin
        ap_phi_mux_s_3_2_19_phi_fu_303_p4 = s_3_2_19_reg_300;
    end
end

always @ (*) begin
    if (((icmp_ln77_reg_1278 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        ap_phi_mux_s_4_2_18_phi_fu_294_p4 = grp_ROUND_fu_440_ap_return_4;
    end else begin
        ap_phi_mux_s_4_2_18_phi_fu_294_p4 = s_4_2_18_reg_291;
    end
end

always @ (*) begin
    if (((grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        c_address0 = zext_ln28_3_fu_1102_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        c_address0 = grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_c_address0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        c_address0 = grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_c_address0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        c_address0 = grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_c_address0;
    end else begin
        c_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        c_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        c_ce0 = grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_c_ce0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        c_ce0 = grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_c_ce0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        c_ce0 = grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_c_ce0;
    end else begin
        c_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        c_d0 = trunc_ln28_3_fu_1087_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        c_d0 = grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_c_d0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        c_d0 = grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_c_d0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        c_d0 = grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_c_d0;
    end else begin
        c_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln28_fu_1048_p2 == 1'd0))) begin
        c_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        c_we0 = grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_c_we0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        c_we0 = grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_c_we0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        c_we0 = grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_c_we0;
    end else begin
        c_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        clen_ap_vld = 1'b1;
    end else begin
        clen_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_LOADBYTES_1_fu_422_bytes = 4'd8;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_LOADBYTES_1_fu_422_bytes = 4'd0;
    end else begin
        grp_LOADBYTES_1_fu_422_bytes = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_LOADBYTES_1_fu_430_bytes = 4'd8;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_LOADBYTES_1_fu_430_bytes = 4'd0;
    end else begin
        grp_LOADBYTES_1_fu_430_bytes = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_LOADBYTES_2_fu_486_ad_q0 = m_q0;
    end else if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_LOADBYTES_2_fu_486_ad_q0 = ad_q0;
    end else begin
        grp_LOADBYTES_2_fu_486_ad_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_LOADBYTES_2_fu_486_bytes = trunc_ln119_1_reg_1478;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_LOADBYTES_2_fu_486_bytes = trunc_ln106_1_reg_1467;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_LOADBYTES_2_fu_486_bytes = ad_addr_0_lcssa_idx_reg_224;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_LOADBYTES_2_fu_486_bytes = trunc_ln79_1_reg_1363;
    end else begin
        grp_LOADBYTES_2_fu_486_bytes = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_LOADBYTES_2_fu_486_n = trunc_ln119_2_reg_1483;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_LOADBYTES_2_fu_486_n = trunc_ln90_reg_1368;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_LOADBYTES_2_fu_486_n = 32'd8;
    end else begin
        grp_LOADBYTES_2_fu_486_n = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_ROUND_fu_440_C = 8'd90;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_ROUND_fu_440_C = 8'd120;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_state23) & (icmp_ln28_fu_1048_p2 == 1'd1)))) begin
        grp_ROUND_fu_440_C = 8'd150;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state10) | ((icmp_ln77_reg_1278 == 1'd0) & (1'b1 == ap_CS_fsm_state20)))) begin
        grp_ROUND_fu_440_C = 8'd75;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_ROUND_fu_440_C = 8'd105;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_ROUND_fu_440_C = 8'd135;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_ROUND_fu_440_C = 8'd165;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state6))) begin
        grp_ROUND_fu_440_C = 8'd195;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_ROUND_fu_440_C = 8'd225;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_ROUND_fu_440_C = 8'd240;
    end else begin
        grp_ROUND_fu_440_C = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_ROUND_fu_440_s_0_read = s_0_62_reg_1508;
    end else if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln28_fu_1048_p2 == 1'd1))) begin
        grp_ROUND_fu_440_s_0_read = s_0_61_reg_1489;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_ROUND_fu_440_s_0_read = s_0_53_reg_1373;
    end else if (((1'b1 == ap_CS_fsm_state13) | ((icmp_ln77_reg_1278 == 1'd0) & (1'b1 == ap_CS_fsm_state20)))) begin
        grp_ROUND_fu_440_s_0_read = reg_634;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_ROUND_fu_440_s_0_read = s_0_46_fu_838_p2;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_ROUND_fu_440_s_0_read = reg_609;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_ROUND_fu_440_s_0_read = reg_578;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_ROUND_fu_440_s_0_read = 64'd9241399655273594880;
    end else begin
        grp_ROUND_fu_440_s_0_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_ROUND_fu_440_s_1_read = s_1_57_fu_1186_p2;
    end else if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln28_fu_1048_p2 == 1'd1))) begin
        grp_ROUND_fu_440_s_1_read = s_1_56_fu_176;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_ROUND_fu_440_s_1_read = s_1_1_16_reg_282;
    end else if (((1'b1 == ap_CS_fsm_state13) | ((icmp_ln77_reg_1278 == 1'd0) & (1'b1 == ap_CS_fsm_state20)))) begin
        grp_ROUND_fu_440_s_1_read = reg_639;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_ROUND_fu_440_s_1_read = s_1_43_fu_148;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_ROUND_fu_440_s_1_read = reg_614;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_ROUND_fu_440_s_1_read = reg_585;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_ROUND_fu_440_s_1_read = K0_reg_1222;
    end else begin
        grp_ROUND_fu_440_s_1_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_ROUND_fu_440_s_2_read = s_2_57_fu_1192_p2;
    end else if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln28_fu_1048_p2 == 1'd1))) begin
        grp_ROUND_fu_440_s_2_read = s_2_56_fu_180;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_ROUND_fu_440_s_2_read = s_2_1_15_reg_273;
    end else if (((1'b1 == ap_CS_fsm_state13) | ((icmp_ln77_reg_1278 == 1'd0) & (1'b1 == ap_CS_fsm_state20)))) begin
        grp_ROUND_fu_440_s_2_read = reg_644;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_ROUND_fu_440_s_2_read = s_2_43_fu_152;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_ROUND_fu_440_s_2_read = reg_619;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_ROUND_fu_440_s_2_read = reg_592;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_ROUND_fu_440_s_2_read = grp_LOADBYTES_1_fu_422_ap_return;
    end else begin
        grp_ROUND_fu_440_s_2_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_ROUND_fu_440_s_3_read = s_3_4_25_reg_392;
    end else if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln28_fu_1048_p2 == 1'd1))) begin
        grp_ROUND_fu_440_s_3_read = s_3_58_fu_184;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_ROUND_fu_440_s_3_read = s_3_1_14_reg_264;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_ROUND_fu_440_s_3_read = s_3_45_fu_156;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_ROUND_fu_440_s_3_read = reg_624;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state5) | ((icmp_ln77_reg_1278 == 1'd0) & (1'b1 == ap_CS_fsm_state20)))) begin
        grp_ROUND_fu_440_s_3_read = reg_599;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_ROUND_fu_440_s_3_read = N0_reg_1230;
    end else begin
        grp_ROUND_fu_440_s_3_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_ROUND_fu_440_s_4_read = s_4_4_24_reg_383;
    end else if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln28_fu_1048_p2 == 1'd1))) begin
        grp_ROUND_fu_440_s_4_read = s_4_59_fu_188;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_ROUND_fu_440_s_4_read = s_4_1_13_reg_255;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_ROUND_fu_440_s_4_read = s_4_45_fu_160;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_ROUND_fu_440_s_4_read = reg_629;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state5) | ((icmp_ln77_reg_1278 == 1'd0) & (1'b1 == ap_CS_fsm_state20)))) begin
        grp_ROUND_fu_440_s_4_read = reg_604;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_ROUND_fu_440_s_4_read = grp_LOADBYTES_1_fu_430_ap_return;
    end else begin
        grp_ROUND_fu_440_s_4_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_ROUND_fu_455_C = 8'd105;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_ROUND_fu_455_C = 8'd135;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_ROUND_fu_455_C = 8'd90;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_ROUND_fu_455_C = 8'd120;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_ROUND_fu_455_C = 8'd150;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state6))) begin
        grp_ROUND_fu_455_C = 8'd180;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_ROUND_fu_455_C = 8'd210;
    end else begin
        grp_ROUND_fu_455_C = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        k_ce0 = grp_LOADBYTES_1_fu_422_k_ce0;
    end else begin
        k_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state22))) begin
        m_ce0 = grp_LOADBYTES_2_fu_486_ad_ce0;
    end else begin
        m_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        npub_ce0 = grp_LOADBYTES_1_fu_430_k_ce0;
    end else begin
        npub_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == ap_block_state4_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((icmp_ln77_fu_682_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & ((icmp_ln79_1_fu_767_p2 == 1'd1) | (icmp_ln79_reg_1282 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((grp_LOADBYTES_2_fu_486_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state16 : begin
            if (((grp_LOADBYTES_2_fu_486_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & ((icmp_ln106_1_fu_984_p2 == 1'd1) | (icmp_ln106_reg_1383 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((grp_LOADBYTES_2_fu_486_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln28_fu_1048_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state27 : begin
            if (((grp_LOADBYTES_2_fu_486_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            if (((grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state35))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            if (((grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ad_address0 = grp_LOADBYTES_2_fu_486_ad_address0;

assign add_ln115_fu_1107_p2 = (m_assign_fu_164 + 64'd8);

assign add_ln116_fu_1113_p2 = ($signed(mlen_assign_fu_168) + $signed(64'd18446744073709551608));

assign add_ln28_1_fu_1054_p2 = (i_reg_362 + 4'd1);

assign add_ln28_4_fu_1217_p2 = (trunc_ln119_reg_1472 + m_addr_0_lcssa_idx_reg_350);

assign add_ln28_fu_1096_p2 = (zext_ln28_fu_1044_p1 + trunc_ln106_2_fu_1092_p1);

assign add_ln86_fu_781_p2 = (ad_assign_fu_136 + 64'd8);

assign add_ln87_fu_787_p2 = ($signed(adlen_assign_fu_140) + $signed(64'd18446744073709551608));

assign and_ln106_1_fu_1016_p3 = {{58'd0}, {trunc_ln106_fu_1013_p1}};

assign and_ln1_fu_1004_p3 = {{tmp_6_fu_995_p4}, {3'd0}};

assign and_ln79_1_fu_824_p3 = {{58'd0}, {trunc_ln79_fu_821_p1}};

assign and_ln_fu_812_p3 = {{tmp_4_fu_803_p4}, {3'd0}};

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state2_on_subcall_done = ((grp_LOADBYTES_1_fu_430_ap_done == 1'b0) | (grp_LOADBYTES_1_fu_422_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state4_on_subcall_done = ((grp_LOADBYTES_1_fu_430_ap_done == 1'b0) | (grp_LOADBYTES_1_fu_422_ap_done == 1'b0));
end

assign clen = (mlen + 64'd16);

assign empty_12_fu_653_p1 = mlen[60:0];

assign empty_fu_649_p1 = adlen[60:0];

assign grp_LOADBYTES_1_fu_422_ap_start = grp_LOADBYTES_1_fu_422_ap_start_reg;

assign grp_LOADBYTES_1_fu_430_ap_start = grp_LOADBYTES_1_fu_430_ap_start_reg;

assign grp_LOADBYTES_2_fu_486_ap_start = grp_LOADBYTES_2_fu_486_ap_start_reg;

assign grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_start = grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_11_fu_507_ap_start_reg;

assign grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_start = grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_12_fu_517_ap_start_reg;

assign grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_start = grp_crypto_aead_encrypt_1_Pipeline_VITIS_LOOP_28_1_fu_497_ap_start_reg;

assign icmp_ln106_1_fu_984_p2 = ((tmp_9_fu_974_p4 == 61'd0) ? 1'b1 : 1'b0);

assign icmp_ln106_fu_916_p2 = ((tmp_8_fu_907_p4 == 61'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_fu_1048_p2 = ((i_reg_362 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln77_fu_682_p2 = ((adlen == 64'd0) ? 1'b1 : 1'b0);

assign icmp_ln79_1_fu_767_p2 = ((tmp_7_fu_757_p4 == 61'd0) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_698_p2 = ((tmp_5_fu_688_p4 == 61'd0) ? 1'b1 : 1'b0);

assign k_address0 = grp_LOADBYTES_1_fu_422_k_address0;

assign lshr_ln28_fu_1082_p2 = s_0_61_reg_1489 >> zext_ln28_2_fu_1078_p1;

assign m_address0 = grp_LOADBYTES_2_fu_486_ad_address0;

assign npub_address0 = grp_LOADBYTES_1_fu_430_k_address0;

assign s_0_46_fu_838_p2 = (s_0_45_fu_144 ^ grp_LOADBYTES_2_fu_486_ap_return);

assign s_0_53_fu_895_p2 = (xor_ln91_fu_889_p2 ^ s_0_1_17_reg_246);

assign s_0_61_fu_1039_p2 = (s_0_60_fu_172 ^ grp_LOADBYTES_2_fu_486_ap_return);

assign s_0_62_fu_1180_p2 = (xor_ln119_fu_1153_p2 ^ shl_ln121_fu_1174_p2);

assign s_1_57_fu_1186_p2 = (s_1_4_27_reg_412 ^ K0_reg_1222);

assign s_2_57_fu_1192_p2 = (s_2_4_26_reg_402 ^ K1_reg_1235);

assign s_3_14_fu_672_p2 = (grp_ROUND_fu_440_ap_return_3 ^ K0_reg_1222);

assign s_3_fu_1206_p2 = (grp_ROUND_fu_440_ap_return_3 ^ K0_reg_1222);

assign s_4_13_fu_677_p2 = (grp_ROUND_fu_440_ap_return_4 ^ K1_reg_1235);

assign s_4_58_fu_901_p2 = (ap_phi_mux_s_4_2_18_phi_fu_294_p4 ^ 64'd1);

assign shl_ln121_fu_1174_p2 = 64'd128 << sub_ln121_fu_1168_p2;

assign shl_ln1_fu_1064_p3 = {{trunc_ln28_fu_1060_p1}, {3'd0}};

assign shl_ln2_fu_1160_p3 = {{mlen_addr_0_lcssa_reg_340}, {3'd0}};

assign shl_ln91_fu_883_p2 = 64'd128 << sub_ln91_fu_877_p2;

assign shl_ln_fu_869_p3 = {{adlen_addr_0_lcssa_reg_236}, {3'd0}};

assign sub_ln121_fu_1168_p2 = (64'd56 - shl_ln2_fu_1160_p3);

assign sub_ln28_fu_1072_p2 = ($signed(6'd56) - $signed(shl_ln1_fu_1064_p3));

assign sub_ln91_fu_877_p2 = (64'd56 - shl_ln_fu_869_p3);

assign tmp_4_fu_803_p4 = {{adlen[4:3]}};

assign tmp_5_fu_688_p4 = {{adlen[63:3]}};

assign tmp_6_fu_995_p4 = {{mlen[5:3]}};

assign tmp_7_fu_757_p4 = {{adlen_assign_fu_140[63:3]}};

assign tmp_8_fu_907_p4 = {{mlen[63:3]}};

assign tmp_9_fu_974_p4 = {{mlen_assign_fu_168[63:3]}};

assign trunc_ln106_1_fu_990_p1 = m_assign_fu_164[4:0];

assign trunc_ln106_2_fu_1092_p1 = m_assign_fu_164[5:0];

assign trunc_ln106_fu_1013_p1 = mlen[2:0];

assign trunc_ln119_1_fu_1029_p1 = ap_phi_mux_m_addr_0_lcssa_idx_phi_fu_354_p4[4:0];

assign trunc_ln119_2_fu_1034_p1 = ap_phi_mux_mlen_addr_0_lcssa_phi_fu_343_p4[31:0];

assign trunc_ln119_fu_1025_p1 = ap_phi_mux_mlen_addr_0_lcssa_phi_fu_343_p4[5:0];

assign trunc_ln28_3_fu_1087_p1 = lshr_ln28_fu_1082_p2[7:0];

assign trunc_ln28_fu_1060_p1 = i_reg_362[2:0];

assign trunc_ln79_1_fu_776_p1 = ad_assign_fu_136[4:0];

assign trunc_ln79_fu_821_p1 = adlen[2:0];

assign trunc_ln90_fu_833_p1 = ap_phi_mux_adlen_addr_0_lcssa_phi_fu_239_p4[31:0];

assign xor_ln119_fu_1153_p2 = (s_0_4_28_reg_373 ^ grp_LOADBYTES_2_fu_486_ap_return);

assign xor_ln137_fu_1212_p2 = (grp_ROUND_fu_440_ap_return_4 ^ K1_reg_1235);

assign xor_ln91_fu_889_p2 = (shl_ln91_fu_883_p2 ^ grp_LOADBYTES_2_fu_486_ap_return);

assign zext_ln28_2_fu_1078_p1 = sub_ln28_fu_1072_p2;

assign zext_ln28_3_fu_1102_p1 = add_ln28_fu_1096_p2;

assign zext_ln28_fu_1044_p1 = i_reg_362;

always @ (posedge ap_clk) begin
    trunc_ln119_1_reg_1478[2:0] <= 3'b000;
    ad_addr_0_lcssa_idx_reg_224[2:0] <= 3'b000;
    m_addr_0_lcssa_idx_reg_350[2:0] <= 3'b000;
end

endmodule //crypto_aead_encrypt_c_crypto_aead_encrypt_1
