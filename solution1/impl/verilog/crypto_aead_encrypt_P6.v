// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module crypto_aead_encrypt_P6 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        s_0_read,
        s_1_read,
        s_2_read,
        s_3_read,
        s_4_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] s_0_read;
input  [63:0] s_1_read;
input  [63:0] s_2_read;
input  [63:0] s_3_read;
input  [63:0] s_4_read;
output  [63:0] ap_return_0;
output  [63:0] ap_return_1;
output  [63:0] ap_return_2;
output  [63:0] ap_return_3;
output  [63:0] ap_return_4;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [63:0] t_14_fu_742_p2;
reg   [63:0] t_14_reg_1542;
wire   [63:0] t_15_fu_772_p2;
reg   [63:0] t_15_reg_1547;
wire   [63:0] t_16_fu_802_p2;
reg   [63:0] t_16_reg_1553;
wire   [63:0] t_17_fu_814_p2;
reg   [63:0] t_17_reg_1561;
wire   [63:0] t_19_fu_826_p2;
reg   [63:0] t_19_reg_1568;
wire   [63:0] t_21_fu_937_p2;
reg   [63:0] t_21_reg_1575;
wire    ap_CS_fsm_state2;
wire   [63:0] t_22_fu_967_p2;
reg   [63:0] t_22_reg_1580;
wire   [63:0] t_23_fu_997_p2;
reg   [63:0] t_23_reg_1586;
wire   [63:0] t_24_fu_1009_p2;
reg   [63:0] t_24_reg_1594;
wire   [63:0] t_26_fu_1021_p2;
reg   [63:0] t_26_reg_1601;
wire    grp_ROR_r_fu_80_ap_ready;
reg   [63:0] grp_ROR_r_fu_80_x;
wire   [63:0] grp_ROR_r_fu_80_ap_return;
wire    grp_ROR_r_fu_87_ap_ready;
reg   [63:0] grp_ROR_r_fu_87_x;
wire   [63:0] grp_ROR_r_fu_87_ap_return;
wire    grp_ROR_r_fu_94_ap_ready;
reg   [63:0] grp_ROR_r_fu_94_x;
wire   [63:0] grp_ROR_r_fu_94_ap_return;
wire    grp_ROR_r_fu_101_ap_ready;
reg   [63:0] grp_ROR_r_fu_101_x;
wire   [63:0] grp_ROR_r_fu_101_ap_return;
wire    grp_ROR_r_fu_108_ap_ready;
reg   [63:0] grp_ROR_r_fu_108_x;
wire   [63:0] grp_ROR_r_fu_108_ap_return;
wire    grp_ROR_r_fu_115_ap_ready;
reg   [63:0] grp_ROR_r_fu_115_x;
wire   [63:0] grp_ROR_r_fu_115_ap_return;
wire    grp_ROR_r_fu_122_ap_ready;
reg   [63:0] grp_ROR_r_fu_122_x;
wire   [63:0] grp_ROR_r_fu_122_ap_return;
wire    grp_ROR_r_fu_129_ap_ready;
reg   [63:0] grp_ROR_r_fu_129_x;
wire   [63:0] grp_ROR_r_fu_129_ap_return;
wire    grp_ROR_r_fu_136_ap_ready;
reg   [63:0] grp_ROR_r_fu_136_x;
wire   [63:0] grp_ROR_r_fu_136_ap_return;
wire    grp_ROR_r_fu_143_ap_ready;
reg   [63:0] grp_ROR_r_fu_143_x;
wire   [63:0] grp_ROR_r_fu_143_ap_return;
wire    grp_ROR_r_fu_150_ap_ready;
reg   [63:0] grp_ROR_r_fu_150_x;
wire   [63:0] grp_ROR_r_fu_150_ap_return;
wire    grp_ROR_r_fu_157_ap_ready;
reg   [63:0] grp_ROR_r_fu_157_x;
wire   [63:0] grp_ROR_r_fu_157_ap_return;
wire    grp_ROR_r_fu_164_ap_ready;
reg   [63:0] grp_ROR_r_fu_164_x;
wire   [63:0] grp_ROR_r_fu_164_ap_return;
wire    grp_ROR_r_fu_171_ap_ready;
reg   [63:0] grp_ROR_r_fu_171_x;
wire   [63:0] grp_ROR_r_fu_171_ap_return;
wire    grp_ROR_r_fu_178_ap_ready;
reg   [63:0] grp_ROR_r_fu_178_x;
wire   [63:0] grp_ROR_r_fu_178_ap_return;
wire    grp_ROR_r_fu_185_ap_ready;
reg   [63:0] grp_ROR_r_fu_185_x;
wire   [63:0] grp_ROR_r_fu_185_ap_return;
wire    grp_ROR_r_fu_192_ap_ready;
reg   [63:0] grp_ROR_r_fu_192_x;
wire   [63:0] grp_ROR_r_fu_192_ap_return;
wire    grp_ROR_r_fu_199_ap_ready;
reg   [63:0] grp_ROR_r_fu_199_x;
wire   [63:0] grp_ROR_r_fu_199_ap_return;
wire    grp_ROR_r_fu_206_ap_ready;
reg   [63:0] grp_ROR_r_fu_206_x;
wire   [63:0] grp_ROR_r_fu_206_ap_return;
wire    grp_ROR_r_fu_213_ap_ready;
reg   [63:0] grp_ROR_r_fu_213_x;
wire   [63:0] grp_ROR_r_fu_213_ap_return;
wire    tmp_49_ROR_r_fu_220_ap_ready;
wire   [63:0] tmp_49_ROR_r_fu_220_ap_return;
wire    tmp_50_ROR_r_fu_227_ap_ready;
wire   [63:0] tmp_50_ROR_r_fu_227_ap_return;
wire    tmp_51_ROR_r_fu_234_ap_ready;
wire   [63:0] tmp_51_ROR_r_fu_234_ap_return;
wire    tmp_52_ROR_r_fu_241_ap_ready;
wire   [63:0] tmp_52_ROR_r_fu_241_ap_return;
wire    tmp_53_ROR_r_fu_248_ap_ready;
wire   [63:0] tmp_53_ROR_r_fu_248_ap_return;
wire    tmp_54_ROR_r_fu_255_ap_ready;
wire   [63:0] tmp_54_ROR_r_fu_255_ap_return;
wire    tmp_55_ROR_r_fu_262_ap_ready;
wire   [63:0] tmp_55_ROR_r_fu_262_ap_return;
wire    tmp_56_ROR_r_fu_269_ap_ready;
wire   [63:0] tmp_56_ROR_r_fu_269_ap_return;
wire    tmp_57_ROR_r_fu_276_ap_ready;
wire   [63:0] tmp_57_ROR_r_fu_276_ap_return;
wire    tmp_58_ROR_r_fu_283_ap_ready;
wire   [63:0] tmp_58_ROR_r_fu_283_ap_return;
wire   [63:0] t_4_fu_408_p2;
wire   [63:0] t_18_fu_832_p2;
wire   [63:0] t_25_fu_1027_p2;
wire    ap_CS_fsm_state3;
wire   [63:0] t_3_fu_400_p2;
wire   [63:0] t_6_fu_430_p2;
wire   [63:0] t_20_fu_838_p2;
wire   [63:0] t_27_fu_1033_p2;
wire   [63:0] t_5_fu_422_p2;
wire   [63:0] t_2_fu_386_p2;
wire   [63:0] t_11_fu_616_p2;
wire   [63:0] t_32_fu_1214_p2;
wire   [63:0] t_10_fu_608_p2;
wire   [63:0] t_31_fu_1206_p2;
wire   [63:0] t_13_fu_638_p2;
wire   [63:0] t_34_fu_1236_p2;
wire   [63:0] t_12_fu_630_p2;
wire   [63:0] t_33_fu_1228_p2;
wire   [63:0] t_9_fu_594_p2;
wire   [63:0] t_30_fu_1192_p2;
wire   [63:0] t_39_fu_1422_p2;
wire   [63:0] t_38_fu_1414_p2;
wire   [63:0] t_41_fu_1444_p2;
wire   [63:0] t_40_fu_1436_p2;
wire   [63:0] t_37_fu_1400_p2;
wire   [63:0] xor_ln41_fu_290_p2;
wire   [63:0] xor_ln41_4_fu_314_p2;
wire   [63:0] and_ln41_fu_320_p2;
wire   [63:0] xor_ln41_1_fu_296_p2;
wire   [63:0] xor_ln41_3_fu_308_p2;
wire   [63:0] xor_ln41_6_fu_332_p2;
wire   [63:0] xor_ln41_7_fu_344_p2;
wire   [63:0] and_ln41_2_fu_350_p2;
wire   [63:0] xor_ln41_2_fu_302_p2;
wire   [63:0] xor_ln41_9_fu_362_p2;
wire   [63:0] xor_ln41_10_fu_374_p2;
wire   [63:0] and_ln41_4_fu_380_p2;
wire   [63:0] t_fu_326_p2;
wire   [63:0] xor_ln41_12_fu_394_p2;
wire   [63:0] and_ln41_1_fu_338_p2;
wire   [63:0] t_1_fu_356_p2;
wire   [63:0] xor_ln41_15_fu_416_p2;
wire   [63:0] and_ln41_3_fu_368_p2;
wire   [63:0] xor_ln41_18_fu_438_p2;
wire   [63:0] xor_ln41_20_fu_450_p2;
wire   [63:0] xor_ln41_22_fu_462_p2;
wire   [63:0] xor_ln42_8_fu_480_p2;
wire   [63:0] xor_ln42_5_fu_474_p2;
wire   [63:0] xor_ln41_23_fu_468_p2;
wire   [63:0] xor_ln42_12_fu_498_p2;
wire   [63:0] xor_ln42_11_fu_492_p2;
wire   [63:0] xor_ln41_21_fu_456_p2;
wire   [63:0] xor_ln42_fu_486_p2;
wire   [63:0] xor_ln41_19_fu_444_p2;
wire   [63:0] xor_ln42_4_fu_522_p2;
wire   [63:0] xor_ln42_1_fu_504_p2;
wire   [63:0] and_ln42_fu_528_p2;
wire   [63:0] xor_ln42_3_fu_516_p2;
wire   [63:0] xor_ln42_6_fu_540_p2;
wire   [63:0] xor_ln42_7_fu_552_p2;
wire   [63:0] and_ln42_2_fu_558_p2;
wire   [63:0] xor_ln42_2_fu_510_p2;
wire   [63:0] xor_ln42_9_fu_570_p2;
wire   [63:0] xor_ln42_10_fu_582_p2;
wire   [63:0] and_ln42_4_fu_588_p2;
wire   [63:0] t_7_fu_534_p2;
wire   [63:0] xor_ln42_16_fu_602_p2;
wire   [63:0] and_ln42_1_fu_546_p2;
wire   [63:0] t_8_fu_564_p2;
wire   [63:0] xor_ln42_20_fu_624_p2;
wire   [63:0] and_ln42_3_fu_576_p2;
wire   [63:0] xor_ln42_25_fu_646_p2;
wire   [63:0] xor_ln42_26_fu_658_p2;
wire   [63:0] xor_ln42_27_fu_670_p2;
wire   [63:0] xor_ln43_8_fu_688_p2;
wire   [63:0] xor_ln43_5_fu_682_p2;
wire   [63:0] xor_ln42_23_fu_676_p2;
wire   [63:0] xor_ln43_12_fu_706_p2;
wire   [63:0] xor_ln43_11_fu_700_p2;
wire   [63:0] xor_ln42_21_fu_664_p2;
wire   [63:0] xor_ln43_fu_694_p2;
wire   [63:0] xor_ln42_19_fu_652_p2;
wire   [63:0] xor_ln43_4_fu_730_p2;
wire   [63:0] xor_ln43_1_fu_712_p2;
wire   [63:0] and_ln43_fu_736_p2;
wire   [63:0] xor_ln43_3_fu_724_p2;
wire   [63:0] xor_ln43_6_fu_748_p2;
wire   [63:0] xor_ln43_7_fu_760_p2;
wire   [63:0] and_ln43_2_fu_766_p2;
wire   [63:0] xor_ln43_2_fu_718_p2;
wire   [63:0] xor_ln43_9_fu_778_p2;
wire   [63:0] xor_ln43_10_fu_790_p2;
wire   [63:0] and_ln43_4_fu_796_p2;
wire   [63:0] xor_ln43_16_fu_808_p2;
wire   [63:0] and_ln43_1_fu_754_p2;
wire   [63:0] xor_ln43_20_fu_820_p2;
wire   [63:0] and_ln43_3_fu_784_p2;
wire   [63:0] xor_ln43_25_fu_845_p2;
wire   [63:0] xor_ln43_26_fu_856_p2;
wire   [63:0] xor_ln43_27_fu_867_p2;
wire   [63:0] xor_ln44_8_fu_883_p2;
wire   [63:0] xor_ln44_5_fu_878_p2;
wire   [63:0] xor_ln43_23_fu_872_p2;
wire   [63:0] xor_ln44_12_fu_901_p2;
wire   [63:0] xor_ln44_11_fu_895_p2;
wire   [63:0] xor_ln43_21_fu_861_p2;
wire   [63:0] xor_ln44_fu_889_p2;
wire   [63:0] xor_ln43_19_fu_851_p2;
wire   [63:0] xor_ln44_4_fu_925_p2;
wire   [63:0] xor_ln44_1_fu_907_p2;
wire   [63:0] and_ln44_fu_931_p2;
wire   [63:0] xor_ln44_3_fu_919_p2;
wire   [63:0] xor_ln44_6_fu_943_p2;
wire   [63:0] xor_ln44_7_fu_955_p2;
wire   [63:0] and_ln44_2_fu_961_p2;
wire   [63:0] xor_ln44_2_fu_913_p2;
wire   [63:0] xor_ln44_9_fu_973_p2;
wire   [63:0] xor_ln44_10_fu_985_p2;
wire   [63:0] and_ln44_4_fu_991_p2;
wire   [63:0] xor_ln44_16_fu_1003_p2;
wire   [63:0] and_ln44_1_fu_949_p2;
wire   [63:0] xor_ln44_20_fu_1015_p2;
wire   [63:0] and_ln44_3_fu_979_p2;
wire   [63:0] xor_ln44_25_fu_1040_p2;
wire   [63:0] xor_ln44_26_fu_1051_p2;
wire   [63:0] xor_ln44_27_fu_1062_p2;
wire   [63:0] xor_ln45_8_fu_1078_p2;
wire   [63:0] xor_ln45_5_fu_1073_p2;
wire   [63:0] xor_ln44_23_fu_1067_p2;
wire   [63:0] xor_ln45_12_fu_1096_p2;
wire   [63:0] xor_ln45_11_fu_1090_p2;
wire   [63:0] xor_ln44_21_fu_1056_p2;
wire   [63:0] xor_ln45_fu_1084_p2;
wire   [63:0] xor_ln44_19_fu_1046_p2;
wire   [63:0] xor_ln45_4_fu_1120_p2;
wire   [63:0] xor_ln45_1_fu_1102_p2;
wire   [63:0] and_ln45_fu_1126_p2;
wire   [63:0] xor_ln45_3_fu_1114_p2;
wire   [63:0] xor_ln45_6_fu_1138_p2;
wire   [63:0] xor_ln45_7_fu_1150_p2;
wire   [63:0] and_ln45_2_fu_1156_p2;
wire   [63:0] xor_ln45_2_fu_1108_p2;
wire   [63:0] xor_ln45_9_fu_1168_p2;
wire   [63:0] xor_ln45_10_fu_1180_p2;
wire   [63:0] and_ln45_4_fu_1186_p2;
wire   [63:0] t_28_fu_1132_p2;
wire   [63:0] xor_ln45_16_fu_1200_p2;
wire   [63:0] and_ln45_1_fu_1144_p2;
wire   [63:0] t_29_fu_1162_p2;
wire   [63:0] xor_ln45_20_fu_1222_p2;
wire   [63:0] and_ln45_3_fu_1174_p2;
wire   [63:0] xor_ln45_25_fu_1244_p2;
wire   [63:0] xor_ln45_26_fu_1256_p2;
wire   [63:0] xor_ln45_27_fu_1268_p2;
wire   [63:0] xor_ln46_8_fu_1286_p2;
wire   [63:0] xor_ln46_5_fu_1280_p2;
wire   [63:0] xor_ln45_23_fu_1274_p2;
wire   [63:0] xor_ln46_12_fu_1304_p2;
wire   [63:0] xor_ln46_11_fu_1298_p2;
wire   [63:0] xor_ln45_21_fu_1262_p2;
wire   [63:0] xor_ln46_fu_1292_p2;
wire   [63:0] xor_ln45_19_fu_1250_p2;
wire   [63:0] xor_ln46_4_fu_1328_p2;
wire   [63:0] xor_ln46_1_fu_1310_p2;
wire   [63:0] and_ln46_fu_1334_p2;
wire   [63:0] xor_ln46_3_fu_1322_p2;
wire   [63:0] xor_ln46_6_fu_1346_p2;
wire   [63:0] xor_ln46_7_fu_1358_p2;
wire   [63:0] and_ln46_2_fu_1364_p2;
wire   [63:0] xor_ln46_2_fu_1316_p2;
wire   [63:0] xor_ln46_9_fu_1376_p2;
wire   [63:0] xor_ln46_10_fu_1388_p2;
wire   [63:0] and_ln46_4_fu_1394_p2;
wire   [63:0] t_35_fu_1340_p2;
wire   [63:0] xor_ln46_16_fu_1408_p2;
wire   [63:0] and_ln46_1_fu_1352_p2;
wire   [63:0] t_36_fu_1370_p2;
wire   [63:0] xor_ln46_20_fu_1430_p2;
wire   [63:0] and_ln46_3_fu_1382_p2;
wire   [63:0] xor_ln46_26_fu_1452_p2;
wire   [63:0] xor_ln46_28_fu_1464_p2;
wire   [63:0] xor_ln46_29_fu_1476_p2;
wire   [63:0] xor_ln46_30_fu_1488_p2;
wire   [63:0] xor_ln46_31_fu_1500_p2;
wire   [63:0] xor_ln46_19_fu_1458_p2;
wire   [63:0] xor_ln46_21_fu_1470_p2;
wire   [63:0] xor_ln46_23_fu_1482_p2;
wire   [63:0] xor_ln46_25_fu_1494_p2;
wire   [63:0] xor_ln46_27_fu_1506_p2;
reg   [2:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
end

crypto_aead_encrypt_ROR_r grp_ROR_r_fu_80(
    .ap_ready(grp_ROR_r_fu_80_ap_ready),
    .x(grp_ROR_r_fu_80_x),
    .n(6'd19),
    .ap_return(grp_ROR_r_fu_80_ap_return)
);

crypto_aead_encrypt_ROR_r grp_ROR_r_fu_87(
    .ap_ready(grp_ROR_r_fu_87_ap_ready),
    .x(grp_ROR_r_fu_87_x),
    .n(6'd28),
    .ap_return(grp_ROR_r_fu_87_ap_return)
);

crypto_aead_encrypt_ROR_r grp_ROR_r_fu_94(
    .ap_ready(grp_ROR_r_fu_94_ap_ready),
    .x(grp_ROR_r_fu_94_x),
    .n(6'd61),
    .ap_return(grp_ROR_r_fu_94_ap_return)
);

crypto_aead_encrypt_ROR_r grp_ROR_r_fu_101(
    .ap_ready(grp_ROR_r_fu_101_ap_ready),
    .x(grp_ROR_r_fu_101_x),
    .n(6'd39),
    .ap_return(grp_ROR_r_fu_101_ap_return)
);

crypto_aead_encrypt_ROR_r grp_ROR_r_fu_108(
    .ap_ready(grp_ROR_r_fu_108_ap_ready),
    .x(grp_ROR_r_fu_108_x),
    .n(6'd1),
    .ap_return(grp_ROR_r_fu_108_ap_return)
);

crypto_aead_encrypt_ROR_r grp_ROR_r_fu_115(
    .ap_ready(grp_ROR_r_fu_115_ap_ready),
    .x(grp_ROR_r_fu_115_x),
    .n(6'd6),
    .ap_return(grp_ROR_r_fu_115_ap_return)
);

crypto_aead_encrypt_ROR_r grp_ROR_r_fu_122(
    .ap_ready(grp_ROR_r_fu_122_ap_ready),
    .x(grp_ROR_r_fu_122_x),
    .n(6'd10),
    .ap_return(grp_ROR_r_fu_122_ap_return)
);

crypto_aead_encrypt_ROR_r grp_ROR_r_fu_129(
    .ap_ready(grp_ROR_r_fu_129_ap_ready),
    .x(grp_ROR_r_fu_129_x),
    .n(6'd17),
    .ap_return(grp_ROR_r_fu_129_ap_return)
);

crypto_aead_encrypt_ROR_r grp_ROR_r_fu_136(
    .ap_ready(grp_ROR_r_fu_136_ap_ready),
    .x(grp_ROR_r_fu_136_x),
    .n(6'd7),
    .ap_return(grp_ROR_r_fu_136_ap_return)
);

crypto_aead_encrypt_ROR_r grp_ROR_r_fu_143(
    .ap_ready(grp_ROR_r_fu_143_ap_ready),
    .x(grp_ROR_r_fu_143_x),
    .n(6'd41),
    .ap_return(grp_ROR_r_fu_143_ap_return)
);

crypto_aead_encrypt_ROR_r grp_ROR_r_fu_150(
    .ap_ready(grp_ROR_r_fu_150_ap_ready),
    .x(grp_ROR_r_fu_150_x),
    .n(6'd19),
    .ap_return(grp_ROR_r_fu_150_ap_return)
);

crypto_aead_encrypt_ROR_r grp_ROR_r_fu_157(
    .ap_ready(grp_ROR_r_fu_157_ap_ready),
    .x(grp_ROR_r_fu_157_x),
    .n(6'd28),
    .ap_return(grp_ROR_r_fu_157_ap_return)
);

crypto_aead_encrypt_ROR_r grp_ROR_r_fu_164(
    .ap_ready(grp_ROR_r_fu_164_ap_ready),
    .x(grp_ROR_r_fu_164_x),
    .n(6'd61),
    .ap_return(grp_ROR_r_fu_164_ap_return)
);

crypto_aead_encrypt_ROR_r grp_ROR_r_fu_171(
    .ap_ready(grp_ROR_r_fu_171_ap_ready),
    .x(grp_ROR_r_fu_171_x),
    .n(6'd39),
    .ap_return(grp_ROR_r_fu_171_ap_return)
);

crypto_aead_encrypt_ROR_r grp_ROR_r_fu_178(
    .ap_ready(grp_ROR_r_fu_178_ap_ready),
    .x(grp_ROR_r_fu_178_x),
    .n(6'd1),
    .ap_return(grp_ROR_r_fu_178_ap_return)
);

crypto_aead_encrypt_ROR_r grp_ROR_r_fu_185(
    .ap_ready(grp_ROR_r_fu_185_ap_ready),
    .x(grp_ROR_r_fu_185_x),
    .n(6'd6),
    .ap_return(grp_ROR_r_fu_185_ap_return)
);

crypto_aead_encrypt_ROR_r grp_ROR_r_fu_192(
    .ap_ready(grp_ROR_r_fu_192_ap_ready),
    .x(grp_ROR_r_fu_192_x),
    .n(6'd10),
    .ap_return(grp_ROR_r_fu_192_ap_return)
);

crypto_aead_encrypt_ROR_r grp_ROR_r_fu_199(
    .ap_ready(grp_ROR_r_fu_199_ap_ready),
    .x(grp_ROR_r_fu_199_x),
    .n(6'd17),
    .ap_return(grp_ROR_r_fu_199_ap_return)
);

crypto_aead_encrypt_ROR_r grp_ROR_r_fu_206(
    .ap_ready(grp_ROR_r_fu_206_ap_ready),
    .x(grp_ROR_r_fu_206_x),
    .n(6'd7),
    .ap_return(grp_ROR_r_fu_206_ap_return)
);

crypto_aead_encrypt_ROR_r grp_ROR_r_fu_213(
    .ap_ready(grp_ROR_r_fu_213_ap_ready),
    .x(grp_ROR_r_fu_213_x),
    .n(6'd41),
    .ap_return(grp_ROR_r_fu_213_ap_return)
);

crypto_aead_encrypt_ROR_r tmp_49_ROR_r_fu_220(
    .ap_ready(tmp_49_ROR_r_fu_220_ap_ready),
    .x(t_39_fu_1422_p2),
    .n(6'd19),
    .ap_return(tmp_49_ROR_r_fu_220_ap_return)
);

crypto_aead_encrypt_ROR_r tmp_50_ROR_r_fu_227(
    .ap_ready(tmp_50_ROR_r_fu_227_ap_ready),
    .x(t_39_fu_1422_p2),
    .n(6'd28),
    .ap_return(tmp_50_ROR_r_fu_227_ap_return)
);

crypto_aead_encrypt_ROR_r tmp_51_ROR_r_fu_234(
    .ap_ready(tmp_51_ROR_r_fu_234_ap_ready),
    .x(t_38_fu_1414_p2),
    .n(6'd61),
    .ap_return(tmp_51_ROR_r_fu_234_ap_return)
);

crypto_aead_encrypt_ROR_r tmp_52_ROR_r_fu_241(
    .ap_ready(tmp_52_ROR_r_fu_241_ap_ready),
    .x(t_38_fu_1414_p2),
    .n(6'd39),
    .ap_return(tmp_52_ROR_r_fu_241_ap_return)
);

crypto_aead_encrypt_ROR_r tmp_53_ROR_r_fu_248(
    .ap_ready(tmp_53_ROR_r_fu_248_ap_ready),
    .x(t_41_fu_1444_p2),
    .n(6'd1),
    .ap_return(tmp_53_ROR_r_fu_248_ap_return)
);

crypto_aead_encrypt_ROR_r tmp_54_ROR_r_fu_255(
    .ap_ready(tmp_54_ROR_r_fu_255_ap_ready),
    .x(t_41_fu_1444_p2),
    .n(6'd6),
    .ap_return(tmp_54_ROR_r_fu_255_ap_return)
);

crypto_aead_encrypt_ROR_r tmp_55_ROR_r_fu_262(
    .ap_ready(tmp_55_ROR_r_fu_262_ap_ready),
    .x(t_40_fu_1436_p2),
    .n(6'd10),
    .ap_return(tmp_55_ROR_r_fu_262_ap_return)
);

crypto_aead_encrypt_ROR_r tmp_56_ROR_r_fu_269(
    .ap_ready(tmp_56_ROR_r_fu_269_ap_ready),
    .x(t_40_fu_1436_p2),
    .n(6'd17),
    .ap_return(tmp_56_ROR_r_fu_269_ap_return)
);

crypto_aead_encrypt_ROR_r tmp_57_ROR_r_fu_276(
    .ap_ready(tmp_57_ROR_r_fu_276_ap_ready),
    .x(t_37_fu_1400_p2),
    .n(6'd7),
    .ap_return(tmp_57_ROR_r_fu_276_ap_return)
);

crypto_aead_encrypt_ROR_r tmp_58_ROR_r_fu_283(
    .ap_ready(tmp_58_ROR_r_fu_283_ap_ready),
    .x(t_37_fu_1400_p2),
    .n(6'd41),
    .ap_return(tmp_58_ROR_r_fu_283_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        t_14_reg_1542 <= t_14_fu_742_p2;
        t_15_reg_1547 <= t_15_fu_772_p2;
        t_16_reg_1553 <= t_16_fu_802_p2;
        t_17_reg_1561 <= t_17_fu_814_p2;
        t_19_reg_1568 <= t_19_fu_826_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        t_21_reg_1575 <= t_21_fu_937_p2;
        t_22_reg_1580 <= t_22_fu_967_p2;
        t_23_reg_1586 <= t_23_fu_997_p2;
        t_24_reg_1594 <= t_24_fu_1009_p2;
        t_26_reg_1601 <= t_26_fu_1021_p2;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_ROR_r_fu_101_x = t_24_reg_1594;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_ROR_r_fu_101_x = t_17_reg_1561;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_ROR_r_fu_101_x = t_3_fu_400_p2;
    end else begin
        grp_ROR_r_fu_101_x = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_ROR_r_fu_108_x = t_27_fu_1033_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_ROR_r_fu_108_x = t_20_fu_838_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_ROR_r_fu_108_x = t_6_fu_430_p2;
    end else begin
        grp_ROR_r_fu_108_x = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_ROR_r_fu_115_x = t_27_fu_1033_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_ROR_r_fu_115_x = t_20_fu_838_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_ROR_r_fu_115_x = t_6_fu_430_p2;
    end else begin
        grp_ROR_r_fu_115_x = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_ROR_r_fu_122_x = t_26_reg_1601;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_ROR_r_fu_122_x = t_19_reg_1568;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_ROR_r_fu_122_x = t_5_fu_422_p2;
    end else begin
        grp_ROR_r_fu_122_x = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_ROR_r_fu_129_x = t_26_reg_1601;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_ROR_r_fu_129_x = t_19_reg_1568;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_ROR_r_fu_129_x = t_5_fu_422_p2;
    end else begin
        grp_ROR_r_fu_129_x = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_ROR_r_fu_136_x = t_23_reg_1586;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_ROR_r_fu_136_x = t_16_reg_1553;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_ROR_r_fu_136_x = t_2_fu_386_p2;
    end else begin
        grp_ROR_r_fu_136_x = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_ROR_r_fu_143_x = t_23_reg_1586;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_ROR_r_fu_143_x = t_16_reg_1553;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_ROR_r_fu_143_x = t_2_fu_386_p2;
    end else begin
        grp_ROR_r_fu_143_x = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_ROR_r_fu_150_x = t_32_fu_1214_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_ROR_r_fu_150_x = t_11_fu_616_p2;
    end else begin
        grp_ROR_r_fu_150_x = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_ROR_r_fu_157_x = t_32_fu_1214_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_ROR_r_fu_157_x = t_11_fu_616_p2;
    end else begin
        grp_ROR_r_fu_157_x = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_ROR_r_fu_164_x = t_31_fu_1206_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_ROR_r_fu_164_x = t_10_fu_608_p2;
    end else begin
        grp_ROR_r_fu_164_x = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_ROR_r_fu_171_x = t_31_fu_1206_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_ROR_r_fu_171_x = t_10_fu_608_p2;
    end else begin
        grp_ROR_r_fu_171_x = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_ROR_r_fu_178_x = t_34_fu_1236_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_ROR_r_fu_178_x = t_13_fu_638_p2;
    end else begin
        grp_ROR_r_fu_178_x = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_ROR_r_fu_185_x = t_34_fu_1236_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_ROR_r_fu_185_x = t_13_fu_638_p2;
    end else begin
        grp_ROR_r_fu_185_x = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_ROR_r_fu_192_x = t_33_fu_1228_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_ROR_r_fu_192_x = t_12_fu_630_p2;
    end else begin
        grp_ROR_r_fu_192_x = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_ROR_r_fu_199_x = t_33_fu_1228_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_ROR_r_fu_199_x = t_12_fu_630_p2;
    end else begin
        grp_ROR_r_fu_199_x = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_ROR_r_fu_206_x = t_30_fu_1192_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_ROR_r_fu_206_x = t_9_fu_594_p2;
    end else begin
        grp_ROR_r_fu_206_x = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_ROR_r_fu_213_x = t_30_fu_1192_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_ROR_r_fu_213_x = t_9_fu_594_p2;
    end else begin
        grp_ROR_r_fu_213_x = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_ROR_r_fu_80_x = t_25_fu_1027_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_ROR_r_fu_80_x = t_18_fu_832_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_ROR_r_fu_80_x = t_4_fu_408_p2;
    end else begin
        grp_ROR_r_fu_80_x = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_ROR_r_fu_87_x = t_25_fu_1027_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_ROR_r_fu_87_x = t_18_fu_832_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_ROR_r_fu_87_x = t_4_fu_408_p2;
    end else begin
        grp_ROR_r_fu_87_x = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_ROR_r_fu_94_x = t_24_reg_1594;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_ROR_r_fu_94_x = t_17_reg_1561;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_ROR_r_fu_94_x = t_3_fu_400_p2;
    end else begin
        grp_ROR_r_fu_94_x = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln41_1_fu_338_p2 = (xor_ln41_6_fu_332_p2 & s_3_read);

assign and_ln41_2_fu_350_p2 = (xor_ln41_7_fu_344_p2 & s_4_read);

assign and_ln41_3_fu_368_p2 = (xor_ln41_9_fu_362_p2 & xor_ln41_1_fu_296_p2);

assign and_ln41_4_fu_380_p2 = (xor_ln41_10_fu_374_p2 & s_1_read);

assign and_ln41_fu_320_p2 = (xor_ln41_fu_290_p2 & xor_ln41_4_fu_314_p2);

assign and_ln42_1_fu_546_p2 = (xor_ln42_6_fu_540_p2 & xor_ln41_21_fu_456_p2);

assign and_ln42_2_fu_558_p2 = (xor_ln42_7_fu_552_p2 & xor_ln41_23_fu_468_p2);

assign and_ln42_3_fu_576_p2 = (xor_ln42_9_fu_570_p2 & xor_ln42_1_fu_504_p2);

assign and_ln42_4_fu_588_p2 = (xor_ln42_10_fu_582_p2 & xor_ln41_19_fu_444_p2);

assign and_ln42_fu_528_p2 = (xor_ln42_fu_486_p2 & xor_ln42_4_fu_522_p2);

assign and_ln43_1_fu_754_p2 = (xor_ln43_6_fu_748_p2 & xor_ln42_21_fu_664_p2);

assign and_ln43_2_fu_766_p2 = (xor_ln43_7_fu_760_p2 & xor_ln42_23_fu_676_p2);

assign and_ln43_3_fu_784_p2 = (xor_ln43_9_fu_778_p2 & xor_ln43_1_fu_712_p2);

assign and_ln43_4_fu_796_p2 = (xor_ln43_10_fu_790_p2 & xor_ln42_19_fu_652_p2);

assign and_ln43_fu_736_p2 = (xor_ln43_fu_694_p2 & xor_ln43_4_fu_730_p2);

assign and_ln44_1_fu_949_p2 = (xor_ln44_6_fu_943_p2 & xor_ln43_21_fu_861_p2);

assign and_ln44_2_fu_961_p2 = (xor_ln44_7_fu_955_p2 & xor_ln43_23_fu_872_p2);

assign and_ln44_3_fu_979_p2 = (xor_ln44_9_fu_973_p2 & xor_ln44_1_fu_907_p2);

assign and_ln44_4_fu_991_p2 = (xor_ln44_10_fu_985_p2 & xor_ln43_19_fu_851_p2);

assign and_ln44_fu_931_p2 = (xor_ln44_fu_889_p2 & xor_ln44_4_fu_925_p2);

assign and_ln45_1_fu_1144_p2 = (xor_ln45_6_fu_1138_p2 & xor_ln44_21_fu_1056_p2);

assign and_ln45_2_fu_1156_p2 = (xor_ln45_7_fu_1150_p2 & xor_ln44_23_fu_1067_p2);

assign and_ln45_3_fu_1174_p2 = (xor_ln45_9_fu_1168_p2 & xor_ln45_1_fu_1102_p2);

assign and_ln45_4_fu_1186_p2 = (xor_ln45_10_fu_1180_p2 & xor_ln44_19_fu_1046_p2);

assign and_ln45_fu_1126_p2 = (xor_ln45_fu_1084_p2 & xor_ln45_4_fu_1120_p2);

assign and_ln46_1_fu_1352_p2 = (xor_ln46_6_fu_1346_p2 & xor_ln45_21_fu_1262_p2);

assign and_ln46_2_fu_1364_p2 = (xor_ln46_7_fu_1358_p2 & xor_ln45_23_fu_1274_p2);

assign and_ln46_3_fu_1382_p2 = (xor_ln46_9_fu_1376_p2 & xor_ln46_1_fu_1310_p2);

assign and_ln46_4_fu_1394_p2 = (xor_ln46_10_fu_1388_p2 & xor_ln45_19_fu_1250_p2);

assign and_ln46_fu_1334_p2 = (xor_ln46_fu_1292_p2 & xor_ln46_4_fu_1328_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_return_0 = xor_ln46_19_fu_1458_p2;

assign ap_return_1 = xor_ln46_21_fu_1470_p2;

assign ap_return_2 = xor_ln46_23_fu_1482_p2;

assign ap_return_3 = xor_ln46_25_fu_1494_p2;

assign ap_return_4 = xor_ln46_27_fu_1506_p2;

assign t_10_fu_608_p2 = (xor_ln42_16_fu_602_p2 ^ and_ln42_1_fu_546_p2);

assign t_11_fu_616_p2 = (t_9_fu_594_p2 ^ t_7_fu_534_p2);

assign t_12_fu_630_p2 = (xor_ln42_20_fu_624_p2 ^ and_ln42_3_fu_576_p2);

assign t_13_fu_638_p2 = (t_8_fu_564_p2 ^ 64'd18446744073709551615);

assign t_14_fu_742_p2 = (xor_ln43_1_fu_712_p2 ^ and_ln43_fu_736_p2);

assign t_15_fu_772_p2 = (xor_ln43_3_fu_724_p2 ^ and_ln43_2_fu_766_p2);

assign t_16_fu_802_p2 = (xor_ln43_2_fu_718_p2 ^ and_ln43_4_fu_796_p2);

assign t_17_fu_814_p2 = (xor_ln43_16_fu_808_p2 ^ and_ln43_1_fu_754_p2);

assign t_18_fu_832_p2 = (t_16_reg_1553 ^ t_14_reg_1542);

assign t_19_fu_826_p2 = (xor_ln43_20_fu_820_p2 ^ and_ln43_3_fu_784_p2);

assign t_1_fu_356_p2 = (xor_ln41_3_fu_308_p2 ^ and_ln41_2_fu_350_p2);

assign t_20_fu_838_p2 = (t_15_reg_1547 ^ 64'd18446744073709551615);

assign t_21_fu_937_p2 = (xor_ln44_1_fu_907_p2 ^ and_ln44_fu_931_p2);

assign t_22_fu_967_p2 = (xor_ln44_3_fu_919_p2 ^ and_ln44_2_fu_961_p2);

assign t_23_fu_997_p2 = (xor_ln44_2_fu_913_p2 ^ and_ln44_4_fu_991_p2);

assign t_24_fu_1009_p2 = (xor_ln44_16_fu_1003_p2 ^ and_ln44_1_fu_949_p2);

assign t_25_fu_1027_p2 = (t_23_reg_1586 ^ t_21_reg_1575);

assign t_26_fu_1021_p2 = (xor_ln44_20_fu_1015_p2 ^ and_ln44_3_fu_979_p2);

assign t_27_fu_1033_p2 = (t_22_reg_1580 ^ 64'd18446744073709551615);

assign t_28_fu_1132_p2 = (xor_ln45_1_fu_1102_p2 ^ and_ln45_fu_1126_p2);

assign t_29_fu_1162_p2 = (xor_ln45_3_fu_1114_p2 ^ and_ln45_2_fu_1156_p2);

assign t_2_fu_386_p2 = (xor_ln41_2_fu_302_p2 ^ and_ln41_4_fu_380_p2);

assign t_30_fu_1192_p2 = (xor_ln45_2_fu_1108_p2 ^ and_ln45_4_fu_1186_p2);

assign t_31_fu_1206_p2 = (xor_ln45_16_fu_1200_p2 ^ and_ln45_1_fu_1144_p2);

assign t_32_fu_1214_p2 = (t_30_fu_1192_p2 ^ t_28_fu_1132_p2);

assign t_33_fu_1228_p2 = (xor_ln45_20_fu_1222_p2 ^ and_ln45_3_fu_1174_p2);

assign t_34_fu_1236_p2 = (t_29_fu_1162_p2 ^ 64'd18446744073709551615);

assign t_35_fu_1340_p2 = (xor_ln46_1_fu_1310_p2 ^ and_ln46_fu_1334_p2);

assign t_36_fu_1370_p2 = (xor_ln46_3_fu_1322_p2 ^ and_ln46_2_fu_1364_p2);

assign t_37_fu_1400_p2 = (xor_ln46_2_fu_1316_p2 ^ and_ln46_4_fu_1394_p2);

assign t_38_fu_1414_p2 = (xor_ln46_16_fu_1408_p2 ^ and_ln46_1_fu_1352_p2);

assign t_39_fu_1422_p2 = (t_37_fu_1400_p2 ^ t_35_fu_1340_p2);

assign t_3_fu_400_p2 = (xor_ln41_12_fu_394_p2 ^ and_ln41_1_fu_338_p2);

assign t_40_fu_1436_p2 = (xor_ln46_20_fu_1430_p2 ^ and_ln46_3_fu_1382_p2);

assign t_41_fu_1444_p2 = (t_36_fu_1370_p2 ^ 64'd18446744073709551615);

assign t_4_fu_408_p2 = (t_fu_326_p2 ^ t_2_fu_386_p2);

assign t_5_fu_422_p2 = (xor_ln41_15_fu_416_p2 ^ and_ln41_3_fu_368_p2);

assign t_6_fu_430_p2 = (t_1_fu_356_p2 ^ 64'd18446744073709551615);

assign t_7_fu_534_p2 = (xor_ln42_1_fu_504_p2 ^ and_ln42_fu_528_p2);

assign t_8_fu_564_p2 = (xor_ln42_3_fu_516_p2 ^ and_ln42_2_fu_558_p2);

assign t_9_fu_594_p2 = (xor_ln42_2_fu_510_p2 ^ and_ln42_4_fu_588_p2);

assign t_fu_326_p2 = (xor_ln41_1_fu_296_p2 ^ and_ln41_fu_320_p2);

assign xor_ln41_10_fu_374_p2 = (xor_ln41_1_fu_296_p2 ^ 64'd18446744073709551615);

assign xor_ln41_12_fu_394_p2 = (t_fu_326_p2 ^ s_1_read);

assign xor_ln41_15_fu_416_p2 = (t_1_fu_356_p2 ^ s_3_read);

assign xor_ln41_18_fu_438_p2 = (grp_ROR_r_fu_94_ap_return ^ grp_ROR_r_fu_101_ap_return);

assign xor_ln41_19_fu_444_p2 = (xor_ln41_18_fu_438_p2 ^ t_3_fu_400_p2);

assign xor_ln41_1_fu_296_p2 = (s_4_read ^ s_0_read);

assign xor_ln41_20_fu_450_p2 = (t_5_fu_422_p2 ^ grp_ROR_r_fu_129_ap_return);

assign xor_ln41_21_fu_456_p2 = (xor_ln41_20_fu_450_p2 ^ grp_ROR_r_fu_122_ap_return);

assign xor_ln41_22_fu_462_p2 = (t_2_fu_386_p2 ^ grp_ROR_r_fu_143_ap_return);

assign xor_ln41_23_fu_468_p2 = (xor_ln41_22_fu_462_p2 ^ grp_ROR_r_fu_136_ap_return);

assign xor_ln41_2_fu_302_p2 = (s_4_read ^ s_3_read);

assign xor_ln41_3_fu_308_p2 = (xor_ln41_fu_290_p2 ^ s_1_read);

assign xor_ln41_4_fu_314_p2 = (s_1_read ^ 64'd18446744073709551615);

assign xor_ln41_6_fu_332_p2 = (xor_ln41_3_fu_308_p2 ^ 64'd18446744073709551615);

assign xor_ln41_7_fu_344_p2 = (s_3_read ^ 64'd18446744073709551615);

assign xor_ln41_9_fu_362_p2 = (xor_ln41_2_fu_302_p2 ^ 64'd18446744073709551615);

assign xor_ln41_fu_290_p2 = (s_2_read ^ 64'd150);

assign xor_ln42_10_fu_582_p2 = (xor_ln42_1_fu_504_p2 ^ 64'd18446744073709551615);

assign xor_ln42_11_fu_492_p2 = (grp_ROR_r_fu_87_ap_return ^ grp_ROR_r_fu_80_ap_return);

assign xor_ln42_12_fu_498_p2 = (xor_ln41_23_fu_468_p2 ^ t_4_fu_408_p2);

assign xor_ln42_16_fu_602_p2 = (xor_ln41_19_fu_444_p2 ^ t_7_fu_534_p2);

assign xor_ln42_19_fu_652_p2 = (xor_ln42_25_fu_646_p2 ^ t_10_fu_608_p2);

assign xor_ln42_1_fu_504_p2 = (xor_ln42_12_fu_498_p2 ^ xor_ln42_11_fu_492_p2);

assign xor_ln42_20_fu_624_p2 = (xor_ln41_21_fu_456_p2 ^ t_8_fu_564_p2);

assign xor_ln42_21_fu_664_p2 = (xor_ln42_26_fu_658_p2 ^ grp_ROR_r_fu_192_ap_return);

assign xor_ln42_23_fu_676_p2 = (xor_ln42_27_fu_670_p2 ^ grp_ROR_r_fu_206_ap_return);

assign xor_ln42_25_fu_646_p2 = (grp_ROR_r_fu_171_ap_return ^ grp_ROR_r_fu_164_ap_return);

assign xor_ln42_26_fu_658_p2 = (t_12_fu_630_p2 ^ grp_ROR_r_fu_199_ap_return);

assign xor_ln42_27_fu_670_p2 = (t_9_fu_594_p2 ^ grp_ROR_r_fu_213_ap_return);

assign xor_ln42_2_fu_510_p2 = (xor_ln41_23_fu_468_p2 ^ xor_ln41_21_fu_456_p2);

assign xor_ln42_3_fu_516_p2 = (xor_ln42_fu_486_p2 ^ xor_ln41_19_fu_444_p2);

assign xor_ln42_4_fu_522_p2 = (xor_ln41_19_fu_444_p2 ^ 64'd18446744073709551615);

assign xor_ln42_5_fu_474_p2 = (t_1_fu_356_p2 ^ grp_ROR_r_fu_108_ap_return);

assign xor_ln42_6_fu_540_p2 = (xor_ln42_3_fu_516_p2 ^ 64'd18446744073709551615);

assign xor_ln42_7_fu_552_p2 = (xor_ln41_21_fu_456_p2 ^ 64'd18446744073709551615);

assign xor_ln42_8_fu_480_p2 = (grp_ROR_r_fu_115_ap_return ^ 64'd18446744073709551480);

assign xor_ln42_9_fu_570_p2 = (xor_ln42_2_fu_510_p2 ^ 64'd18446744073709551615);

assign xor_ln42_fu_486_p2 = (xor_ln42_8_fu_480_p2 ^ xor_ln42_5_fu_474_p2);

assign xor_ln43_10_fu_790_p2 = (xor_ln43_1_fu_712_p2 ^ 64'd18446744073709551615);

assign xor_ln43_11_fu_700_p2 = (t_11_fu_616_p2 ^ grp_ROR_r_fu_150_ap_return);

assign xor_ln43_12_fu_706_p2 = (xor_ln42_23_fu_676_p2 ^ grp_ROR_r_fu_157_ap_return);

assign xor_ln43_16_fu_808_p2 = (xor_ln42_19_fu_652_p2 ^ t_14_fu_742_p2);

assign xor_ln43_19_fu_851_p2 = (xor_ln43_25_fu_845_p2 ^ t_17_reg_1561);

assign xor_ln43_1_fu_712_p2 = (xor_ln43_12_fu_706_p2 ^ xor_ln43_11_fu_700_p2);

assign xor_ln43_20_fu_820_p2 = (xor_ln42_21_fu_664_p2 ^ t_15_fu_772_p2);

assign xor_ln43_21_fu_861_p2 = (xor_ln43_26_fu_856_p2 ^ grp_ROR_r_fu_122_ap_return);

assign xor_ln43_23_fu_872_p2 = (xor_ln43_27_fu_867_p2 ^ grp_ROR_r_fu_136_ap_return);

assign xor_ln43_25_fu_845_p2 = (grp_ROR_r_fu_94_ap_return ^ grp_ROR_r_fu_101_ap_return);

assign xor_ln43_26_fu_856_p2 = (t_19_reg_1568 ^ grp_ROR_r_fu_129_ap_return);

assign xor_ln43_27_fu_867_p2 = (t_16_reg_1553 ^ grp_ROR_r_fu_143_ap_return);

assign xor_ln43_2_fu_718_p2 = (xor_ln42_23_fu_676_p2 ^ xor_ln42_21_fu_664_p2);

assign xor_ln43_3_fu_724_p2 = (xor_ln43_fu_694_p2 ^ xor_ln42_19_fu_652_p2);

assign xor_ln43_4_fu_730_p2 = (xor_ln42_19_fu_652_p2 ^ 64'd18446744073709551615);

assign xor_ln43_5_fu_682_p2 = (t_8_fu_564_p2 ^ grp_ROR_r_fu_178_ap_return);

assign xor_ln43_6_fu_748_p2 = (xor_ln43_3_fu_724_p2 ^ 64'd18446744073709551615);

assign xor_ln43_7_fu_760_p2 = (xor_ln42_21_fu_664_p2 ^ 64'd18446744073709551615);

assign xor_ln43_8_fu_688_p2 = (grp_ROR_r_fu_185_ap_return ^ 64'd18446744073709551495);

assign xor_ln43_9_fu_778_p2 = (xor_ln43_2_fu_718_p2 ^ 64'd18446744073709551615);

assign xor_ln43_fu_694_p2 = (xor_ln43_8_fu_688_p2 ^ xor_ln43_5_fu_682_p2);

assign xor_ln44_10_fu_985_p2 = (xor_ln44_1_fu_907_p2 ^ 64'd18446744073709551615);

assign xor_ln44_11_fu_895_p2 = (t_18_fu_832_p2 ^ grp_ROR_r_fu_80_ap_return);

assign xor_ln44_12_fu_901_p2 = (xor_ln43_23_fu_872_p2 ^ grp_ROR_r_fu_87_ap_return);

assign xor_ln44_16_fu_1003_p2 = (xor_ln43_19_fu_851_p2 ^ t_21_fu_937_p2);

assign xor_ln44_19_fu_1046_p2 = (xor_ln44_25_fu_1040_p2 ^ t_24_reg_1594);

assign xor_ln44_1_fu_907_p2 = (xor_ln44_12_fu_901_p2 ^ xor_ln44_11_fu_895_p2);

assign xor_ln44_20_fu_1015_p2 = (xor_ln43_21_fu_861_p2 ^ t_22_fu_967_p2);

assign xor_ln44_21_fu_1056_p2 = (xor_ln44_26_fu_1051_p2 ^ grp_ROR_r_fu_122_ap_return);

assign xor_ln44_23_fu_1067_p2 = (xor_ln44_27_fu_1062_p2 ^ grp_ROR_r_fu_136_ap_return);

assign xor_ln44_25_fu_1040_p2 = (grp_ROR_r_fu_94_ap_return ^ grp_ROR_r_fu_101_ap_return);

assign xor_ln44_26_fu_1051_p2 = (t_26_reg_1601 ^ grp_ROR_r_fu_129_ap_return);

assign xor_ln44_27_fu_1062_p2 = (t_23_reg_1586 ^ grp_ROR_r_fu_143_ap_return);

assign xor_ln44_2_fu_913_p2 = (xor_ln43_23_fu_872_p2 ^ xor_ln43_21_fu_861_p2);

assign xor_ln44_3_fu_919_p2 = (xor_ln44_fu_889_p2 ^ xor_ln43_19_fu_851_p2);

assign xor_ln44_4_fu_925_p2 = (xor_ln43_19_fu_851_p2 ^ 64'd18446744073709551615);

assign xor_ln44_5_fu_878_p2 = (t_15_reg_1547 ^ grp_ROR_r_fu_108_ap_return);

assign xor_ln44_6_fu_943_p2 = (xor_ln44_3_fu_919_p2 ^ 64'd18446744073709551615);

assign xor_ln44_7_fu_955_p2 = (xor_ln43_21_fu_861_p2 ^ 64'd18446744073709551615);

assign xor_ln44_8_fu_883_p2 = (grp_ROR_r_fu_115_ap_return ^ 64'd18446744073709551510);

assign xor_ln44_9_fu_973_p2 = (xor_ln44_2_fu_913_p2 ^ 64'd18446744073709551615);

assign xor_ln44_fu_889_p2 = (xor_ln44_8_fu_883_p2 ^ xor_ln44_5_fu_878_p2);

assign xor_ln45_10_fu_1180_p2 = (xor_ln45_1_fu_1102_p2 ^ 64'd18446744073709551615);

assign xor_ln45_11_fu_1090_p2 = (t_25_fu_1027_p2 ^ grp_ROR_r_fu_80_ap_return);

assign xor_ln45_12_fu_1096_p2 = (xor_ln44_23_fu_1067_p2 ^ grp_ROR_r_fu_87_ap_return);

assign xor_ln45_16_fu_1200_p2 = (xor_ln44_19_fu_1046_p2 ^ t_28_fu_1132_p2);

assign xor_ln45_19_fu_1250_p2 = (xor_ln45_25_fu_1244_p2 ^ t_31_fu_1206_p2);

assign xor_ln45_1_fu_1102_p2 = (xor_ln45_12_fu_1096_p2 ^ xor_ln45_11_fu_1090_p2);

assign xor_ln45_20_fu_1222_p2 = (xor_ln44_21_fu_1056_p2 ^ t_29_fu_1162_p2);

assign xor_ln45_21_fu_1262_p2 = (xor_ln45_26_fu_1256_p2 ^ grp_ROR_r_fu_192_ap_return);

assign xor_ln45_23_fu_1274_p2 = (xor_ln45_27_fu_1268_p2 ^ grp_ROR_r_fu_206_ap_return);

assign xor_ln45_25_fu_1244_p2 = (grp_ROR_r_fu_171_ap_return ^ grp_ROR_r_fu_164_ap_return);

assign xor_ln45_26_fu_1256_p2 = (t_33_fu_1228_p2 ^ grp_ROR_r_fu_199_ap_return);

assign xor_ln45_27_fu_1268_p2 = (t_30_fu_1192_p2 ^ grp_ROR_r_fu_213_ap_return);

assign xor_ln45_2_fu_1108_p2 = (xor_ln44_23_fu_1067_p2 ^ xor_ln44_21_fu_1056_p2);

assign xor_ln45_3_fu_1114_p2 = (xor_ln45_fu_1084_p2 ^ xor_ln44_19_fu_1046_p2);

assign xor_ln45_4_fu_1120_p2 = (xor_ln44_19_fu_1046_p2 ^ 64'd18446744073709551615);

assign xor_ln45_5_fu_1073_p2 = (t_22_reg_1580 ^ grp_ROR_r_fu_108_ap_return);

assign xor_ln45_6_fu_1138_p2 = (xor_ln45_3_fu_1114_p2 ^ 64'd18446744073709551615);

assign xor_ln45_7_fu_1150_p2 = (xor_ln44_21_fu_1056_p2 ^ 64'd18446744073709551615);

assign xor_ln45_8_fu_1078_p2 = (grp_ROR_r_fu_115_ap_return ^ 64'd18446744073709551525);

assign xor_ln45_9_fu_1168_p2 = (xor_ln45_2_fu_1108_p2 ^ 64'd18446744073709551615);

assign xor_ln45_fu_1084_p2 = (xor_ln45_8_fu_1078_p2 ^ xor_ln45_5_fu_1073_p2);

assign xor_ln46_10_fu_1388_p2 = (xor_ln46_1_fu_1310_p2 ^ 64'd18446744073709551615);

assign xor_ln46_11_fu_1298_p2 = (t_32_fu_1214_p2 ^ grp_ROR_r_fu_150_ap_return);

assign xor_ln46_12_fu_1304_p2 = (xor_ln45_23_fu_1274_p2 ^ grp_ROR_r_fu_157_ap_return);

assign xor_ln46_16_fu_1408_p2 = (xor_ln45_19_fu_1250_p2 ^ t_35_fu_1340_p2);

assign xor_ln46_19_fu_1458_p2 = (xor_ln46_26_fu_1452_p2 ^ tmp_50_ROR_r_fu_227_ap_return);

assign xor_ln46_1_fu_1310_p2 = (xor_ln46_12_fu_1304_p2 ^ xor_ln46_11_fu_1298_p2);

assign xor_ln46_20_fu_1430_p2 = (xor_ln45_21_fu_1262_p2 ^ t_36_fu_1370_p2);

assign xor_ln46_21_fu_1470_p2 = (xor_ln46_28_fu_1464_p2 ^ t_38_fu_1414_p2);

assign xor_ln46_23_fu_1482_p2 = (xor_ln46_29_fu_1476_p2 ^ tmp_53_ROR_r_fu_248_ap_return);

assign xor_ln46_25_fu_1494_p2 = (xor_ln46_30_fu_1488_p2 ^ tmp_55_ROR_r_fu_262_ap_return);

assign xor_ln46_26_fu_1452_p2 = (tmp_49_ROR_r_fu_220_ap_return ^ t_39_fu_1422_p2);

assign xor_ln46_27_fu_1506_p2 = (xor_ln46_31_fu_1500_p2 ^ tmp_57_ROR_r_fu_276_ap_return);

assign xor_ln46_28_fu_1464_p2 = (tmp_52_ROR_r_fu_241_ap_return ^ tmp_51_ROR_r_fu_234_ap_return);

assign xor_ln46_29_fu_1476_p2 = (tmp_54_ROR_r_fu_255_ap_return ^ t_41_fu_1444_p2);

assign xor_ln46_2_fu_1316_p2 = (xor_ln45_23_fu_1274_p2 ^ xor_ln45_21_fu_1262_p2);

assign xor_ln46_30_fu_1488_p2 = (tmp_56_ROR_r_fu_269_ap_return ^ t_40_fu_1436_p2);

assign xor_ln46_31_fu_1500_p2 = (tmp_58_ROR_r_fu_283_ap_return ^ t_37_fu_1400_p2);

assign xor_ln46_3_fu_1322_p2 = (xor_ln46_fu_1292_p2 ^ xor_ln45_19_fu_1250_p2);

assign xor_ln46_4_fu_1328_p2 = (xor_ln45_19_fu_1250_p2 ^ 64'd18446744073709551615);

assign xor_ln46_5_fu_1280_p2 = (t_29_fu_1162_p2 ^ grp_ROR_r_fu_178_ap_return);

assign xor_ln46_6_fu_1346_p2 = (xor_ln46_3_fu_1322_p2 ^ 64'd18446744073709551615);

assign xor_ln46_7_fu_1358_p2 = (xor_ln45_21_fu_1262_p2 ^ 64'd18446744073709551615);

assign xor_ln46_8_fu_1286_p2 = (grp_ROR_r_fu_185_ap_return ^ 64'd18446744073709551540);

assign xor_ln46_9_fu_1376_p2 = (xor_ln46_2_fu_1316_p2 ^ 64'd18446744073709551615);

assign xor_ln46_fu_1292_p2 = (xor_ln46_8_fu_1286_p2 ^ xor_ln46_5_fu_1280_p2);

endmodule //crypto_aead_encrypt_P6
