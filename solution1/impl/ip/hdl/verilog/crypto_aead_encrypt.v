// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="crypto_aead_encrypt_crypto_aead_encrypt,hls_ip_2021_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbv484-2,HLS_INPUT_CLOCK=30.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=22.625833,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=4539,HLS_SYN_LUT=15586,HLS_VERSION=2021_2}" *)

module crypto_aead_encrypt (
        ap_local_block,
        ap_local_deadlock,
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        c_address0,
        c_ce0,
        c_we0,
        c_d0,
        clen,
        clen_ap_vld,
        m_address0,
        m_ce0,
        m_q0,
        mlen,
        ad_address0,
        ad_ce0,
        ad_q0,
        adlen,
        npub_address0,
        npub_ce0,
        npub_q0,
        k_address0,
        k_ce0,
        k_q0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 21'd1;
parameter    ap_ST_fsm_state2 = 21'd2;
parameter    ap_ST_fsm_state3 = 21'd4;
parameter    ap_ST_fsm_state4 = 21'd8;
parameter    ap_ST_fsm_state5 = 21'd16;
parameter    ap_ST_fsm_state6 = 21'd32;
parameter    ap_ST_fsm_state7 = 21'd64;
parameter    ap_ST_fsm_state8 = 21'd128;
parameter    ap_ST_fsm_state9 = 21'd256;
parameter    ap_ST_fsm_state10 = 21'd512;
parameter    ap_ST_fsm_state11 = 21'd1024;
parameter    ap_ST_fsm_state12 = 21'd2048;
parameter    ap_ST_fsm_state13 = 21'd4096;
parameter    ap_ST_fsm_state14 = 21'd8192;
parameter    ap_ST_fsm_state15 = 21'd16384;
parameter    ap_ST_fsm_state16 = 21'd32768;
parameter    ap_ST_fsm_state17 = 21'd65536;
parameter    ap_ST_fsm_state18 = 21'd131072;
parameter    ap_ST_fsm_state19 = 21'd262144;
parameter    ap_ST_fsm_state20 = 21'd524288;
parameter    ap_ST_fsm_state21 = 21'd1048576;

output   ap_local_block;
output   ap_local_deadlock;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] c_address0;
output   c_ce0;
output   c_we0;
output  [7:0] c_d0;
output  [63:0] clen;
output   clen_ap_vld;
output  [4:0] m_address0;
output   m_ce0;
input  [7:0] m_q0;
input  [63:0] mlen;
output  [4:0] ad_address0;
output   ad_ce0;
input  [7:0] ad_q0;
input  [63:0] adlen;
output  [3:0] npub_address0;
output   npub_ce0;
input  [7:0] npub_q0;
output  [3:0] k_address0;
output   k_ce0;
input  [7:0] k_q0;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] c_address0;
reg c_ce0;
reg c_we0;
reg[7:0] c_d0;
reg clen_ap_vld;
reg m_ce0;
reg ad_ce0;
reg npub_ce0;
reg k_ce0;

(* fsm_encoding = "none" *) reg   [20:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [63:0] reg_693;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state16;
reg   [63:0] reg_698;
reg   [63:0] reg_703;
reg   [63:0] reg_708;
reg   [63:0] reg_713;
reg   [63:0] reg_718;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state17;
reg   [63:0] reg_725;
reg   [63:0] reg_732;
reg   [63:0] reg_739;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state14;
wire   [0:0] icmp_ln25_fu_1164_p2;
reg   [63:0] reg_744;
reg   [63:0] reg_749;
reg   [63:0] reg_754;
reg   [63:0] reg_759;
wire   [63:0] grp_LOADBYTES_1_fu_430_ap_return;
reg   [63:0] K0_reg_1339;
wire    ap_CS_fsm_state2;
wire   [63:0] grp_LOADBYTES_1_fu_438_ap_return;
reg   [63:0] N0_reg_1347;
reg   [63:0] K1_reg_1352;
reg   [63:0] s_0_6_reg_1359;
wire    ap_CS_fsm_state5;
reg   [63:0] s_1_7_reg_1364;
reg   [63:0] s_2_7_reg_1369;
reg   [63:0] s_3_7_reg_1374;
reg   [63:0] s_4_7_reg_1379;
wire   [60:0] empty_fu_764_p1;
wire   [60:0] empty_12_fu_768_p1;
reg   [60:0] empty_12_reg_1403;
wire   [63:0] s_3_14_fu_787_p2;
wire   [63:0] s_4_13_fu_792_p2;
wire   [0:0] icmp_ln38_fu_797_p2;
reg   [0:0] icmp_ln38_reg_1420;
wire   [0:0] icmp_ln40_fu_813_p2;
reg   [0:0] icmp_ln40_reg_1424;
wire    ap_CS_fsm_state7;
wire   [4:0] trunc_ln40_1_fu_891_p1;
reg   [4:0] trunc_ln40_1_reg_1505;
wire   [0:0] icmp_ln40_1_fu_882_p2;
wire   [31:0] trunc_ln48_fu_948_p1;
reg   [31:0] trunc_ln48_reg_1510;
reg   [63:0] s_0_55_reg_1515;
wire    ap_CS_fsm_state10;
reg   [63:0] s_1_51_reg_1520;
reg   [63:0] s_2_51_reg_1525;
reg   [63:0] s_3_53_reg_1530;
reg   [63:0] s_4_54_reg_1535;
wire   [63:0] s_4_59_fu_1017_p2;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln58_fu_1032_p2;
reg   [0:0] icmp_ln58_reg_1545;
wire    ap_CS_fsm_state12;
wire   [4:0] trunc_ln58_1_fu_1106_p1;
reg   [4:0] trunc_ln58_1_reg_1629;
wire   [0:0] icmp_ln58_1_fu_1100_p2;
wire   [5:0] trunc_ln68_fu_1141_p1;
reg   [5:0] trunc_ln68_reg_1634;
wire   [4:0] trunc_ln68_1_fu_1145_p1;
reg   [4:0] trunc_ln68_1_reg_1640;
wire   [31:0] trunc_ln68_2_fu_1150_p1;
reg   [31:0] trunc_ln68_2_reg_1645;
wire   [63:0] s_0_61_fu_1155_p2;
reg   [63:0] s_0_61_reg_1651;
wire    ap_CS_fsm_state13;
wire   [3:0] add_ln25_1_fu_1170_p2;
wire   [63:0] xor_ln68_fu_1269_p2;
reg   [63:0] xor_ln68_reg_1665;
reg   [63:0] s_3_66_reg_1670;
reg   [63:0] s_4_68_reg_1675;
wire   [63:0] s_3_fu_1323_p2;
reg   [63:0] s_3_reg_1680;
wire    ap_CS_fsm_state18;
wire   [63:0] s_4_73_fu_1329_p2;
reg   [63:0] s_4_73_reg_1685;
wire   [5:0] add_ln25_4_fu_1334_p2;
reg   [5:0] add_ln25_4_reg_1690;
wire    grp_LOADBYTES_1_fu_430_ap_start;
wire    grp_LOADBYTES_1_fu_430_ap_done;
wire    grp_LOADBYTES_1_fu_430_ap_idle;
wire    grp_LOADBYTES_1_fu_430_ap_ready;
wire   [3:0] grp_LOADBYTES_1_fu_430_k_address0;
wire    grp_LOADBYTES_1_fu_430_k_ce0;
reg   [3:0] grp_LOADBYTES_1_fu_430_bytes;
wire    grp_LOADBYTES_1_fu_438_ap_start;
wire    grp_LOADBYTES_1_fu_438_ap_done;
wire    grp_LOADBYTES_1_fu_438_ap_idle;
wire    grp_LOADBYTES_1_fu_438_ap_ready;
wire   [3:0] grp_LOADBYTES_1_fu_438_k_address0;
wire    grp_LOADBYTES_1_fu_438_k_ce0;
reg   [3:0] grp_LOADBYTES_1_fu_438_bytes;
wire    grp_ROUND_fu_448_ap_ready;
reg   [63:0] grp_ROUND_fu_448_s_0_read;
reg   [63:0] grp_ROUND_fu_448_s_1_read;
reg   [63:0] grp_ROUND_fu_448_s_2_read;
reg   [63:0] grp_ROUND_fu_448_s_3_read;
reg   [63:0] grp_ROUND_fu_448_s_4_read;
reg   [7:0] grp_ROUND_fu_448_C;
wire   [63:0] grp_ROUND_fu_448_ap_return_0;
wire   [63:0] grp_ROUND_fu_448_ap_return_1;
wire   [63:0] grp_ROUND_fu_448_ap_return_2;
wire   [63:0] grp_ROUND_fu_448_ap_return_3;
wire   [63:0] grp_ROUND_fu_448_ap_return_4;
wire    grp_ROUND_fu_462_ap_ready;
reg   [7:0] grp_ROUND_fu_462_C;
wire   [63:0] grp_ROUND_fu_462_ap_return_0;
wire   [63:0] grp_ROUND_fu_462_ap_return_1;
wire   [63:0] grp_ROUND_fu_462_ap_return_2;
wire   [63:0] grp_ROUND_fu_462_ap_return_3;
wire   [63:0] grp_ROUND_fu_462_ap_return_4;
wire    grp_ROUND_fu_473_ap_ready;
reg   [7:0] grp_ROUND_fu_473_C;
wire   [63:0] grp_ROUND_fu_473_ap_return_0;
wire   [63:0] grp_ROUND_fu_473_ap_return_1;
wire   [63:0] grp_ROUND_fu_473_ap_return_2;
wire   [63:0] grp_ROUND_fu_473_ap_return_3;
wire   [63:0] grp_ROUND_fu_473_ap_return_4;
wire    grp_ROUND_fu_487_ap_ready;
reg   [7:0] grp_ROUND_fu_487_C;
wire   [63:0] grp_ROUND_fu_487_ap_return_0;
wire   [63:0] grp_ROUND_fu_487_ap_return_1;
wire   [63:0] grp_ROUND_fu_487_ap_return_2;
wire   [63:0] grp_ROUND_fu_487_ap_return_3;
wire   [63:0] grp_ROUND_fu_487_ap_return_4;
wire    grp_ROUND_fu_502_ap_ready;
reg   [7:0] grp_ROUND_fu_502_C;
wire   [63:0] grp_ROUND_fu_502_ap_return_0;
wire   [63:0] grp_ROUND_fu_502_ap_return_1;
wire   [63:0] grp_ROUND_fu_502_ap_return_2;
wire   [63:0] grp_ROUND_fu_502_ap_return_3;
wire   [63:0] grp_ROUND_fu_502_ap_return_4;
wire    grp_LOADBYTES_2_fu_526_ap_start;
wire    grp_LOADBYTES_2_fu_526_ap_done;
wire    grp_LOADBYTES_2_fu_526_ap_idle;
wire    grp_LOADBYTES_2_fu_526_ap_ready;
wire   [4:0] grp_LOADBYTES_2_fu_526_ad_address0;
wire    grp_LOADBYTES_2_fu_526_ad_ce0;
reg   [7:0] grp_LOADBYTES_2_fu_526_ad_q0;
reg   [4:0] grp_LOADBYTES_2_fu_526_bytes;
reg   [31:0] grp_LOADBYTES_2_fu_526_n;
wire   [63:0] grp_LOADBYTES_2_fu_526_ap_return;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_start;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_done;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_idle;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_ready;
wire   [5:0] grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_c_address0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_c_ce0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_c_we0;
wire   [7:0] grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_c_d0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_start;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_done;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_idle;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_ready;
wire   [5:0] grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_c_address0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_c_ce0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_c_we0;
wire   [7:0] grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_c_d0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_start;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_done;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_idle;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_ready;
wire   [5:0] grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_c_address0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_c_ce0;
wire    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_c_we0;
wire   [7:0] grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_c_d0;
wire   [4:0] and_ln_fu_927_p3;
reg   [4:0] ad_addr_0_lcssa_idx_reg_232;
wire   [60:0] and_ln40_1_fu_939_p3;
reg   [60:0] ap_phi_mux_adlen_addr_0_lcssa_phi_fu_247_p4;
reg   [60:0] adlen_addr_0_lcssa_reg_244;
reg   [63:0] s_4_1_13_reg_254;
reg   [63:0] s_3_1_14_reg_263;
reg   [63:0] s_2_1_15_reg_272;
reg   [63:0] s_1_1_16_reg_281;
reg   [63:0] s_0_1_17_reg_290;
reg   [63:0] ap_phi_mux_s_4_2_18_phi_fu_302_p4;
reg   [63:0] s_4_2_18_reg_299;
reg   [63:0] ap_phi_mux_s_3_2_19_phi_fu_311_p4;
reg   [63:0] s_3_2_19_reg_308;
reg   [63:0] ap_phi_mux_s_2_2_20_phi_fu_321_p4;
reg   [63:0] s_2_2_20_reg_318;
reg   [63:0] ap_phi_mux_s_1_2_21_phi_fu_331_p4;
reg   [63:0] s_1_2_21_reg_328;
reg   [63:0] ap_phi_mux_s_0_2_22_phi_fu_341_p4;
reg   [63:0] s_0_2_22_reg_338;
wire   [60:0] and_ln58_1_fu_1132_p3;
reg   [60:0] ap_phi_mux_mlen_addr_0_lcssa_phi_fu_351_p4;
reg   [60:0] mlen_addr_0_lcssa_reg_348;
wire   [5:0] and_ln1_fu_1120_p3;
reg   [5:0] ap_phi_mux_m_addr_0_lcssa_idx_phi_fu_362_p4;
reg   [5:0] m_addr_0_lcssa_idx_reg_358;
reg   [3:0] i_reg_370;
reg   [63:0] s_4_4_24_reg_381;
reg   [63:0] s_3_4_25_reg_390;
reg   [63:0] s_2_4_26_reg_400;
reg   [63:0] s_1_4_27_reg_410;
reg   [63:0] s_0_4_28_reg_420;
reg    grp_LOADBYTES_1_fu_430_ap_start_reg;
wire    ap_CS_fsm_state3;
reg    grp_LOADBYTES_1_fu_438_ap_start_reg;
wire   [63:0] s_0_46_fu_953_p2;
wire    ap_CS_fsm_state9;
wire   [63:0] s_0_53_fu_1010_p2;
wire    ap_CS_fsm_state15;
wire   [63:0] s_0_62_fu_1296_p2;
wire   [63:0] s_1_57_fu_1303_p2;
wire   [63:0] s_2_57_fu_1309_p2;
reg    grp_LOADBYTES_2_fu_526_ap_start_reg;
reg    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_start_reg;
reg    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_start_reg;
wire    ap_CS_fsm_state19;
reg    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_start_reg;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire   [63:0] zext_ln25_3_fu_1218_p1;
reg   [63:0] ad_assign_fu_144;
wire   [63:0] add_ln44_fu_896_p2;
reg   [63:0] adlen_assign_fu_148;
wire   [63:0] add_ln45_fu_902_p2;
reg   [63:0] s_0_45_fu_152;
reg   [63:0] s_1_43_fu_156;
reg   [63:0] s_2_43_fu_160;
reg   [63:0] s_3_45_fu_164;
reg   [63:0] s_4_46_fu_168;
reg   [63:0] m_assign_fu_172;
wire   [63:0] add_ln64_fu_1223_p2;
reg   [63:0] mlen_assign_fu_176;
wire   [63:0] add_ln65_fu_1229_p2;
reg   [63:0] s_0_60_fu_180;
reg   [63:0] s_1_56_fu_184;
reg   [63:0] s_2_56_fu_188;
reg   [63:0] s_3_58_fu_192;
reg   [63:0] s_4_60_fu_196;
wire   [7:0] trunc_ln25_3_fu_1203_p1;
wire   [60:0] tmp_5_fu_803_p4;
wire   [60:0] tmp_7_fu_872_p4;
wire   [1:0] tmp_4_fu_918_p4;
wire   [2:0] trunc_ln40_fu_936_p1;
wire   [63:0] shl_ln_fu_984_p3;
wire   [63:0] sub_ln49_fu_992_p2;
wire   [63:0] shl_ln49_fu_998_p2;
wire   [63:0] xor_ln49_fu_1004_p2;
wire   [60:0] tmp_8_fu_1023_p4;
wire   [60:0] tmp_9_fu_1090_p4;
wire   [2:0] tmp_6_fu_1111_p4;
wire   [2:0] trunc_ln58_fu_1129_p1;
wire   [2:0] trunc_ln25_fu_1176_p1;
wire   [5:0] shl_ln1_fu_1180_p3;
wire   [5:0] sub_ln25_fu_1188_p2;
wire   [63:0] zext_ln25_2_fu_1194_p1;
wire   [63:0] lshr_ln25_fu_1198_p2;
wire   [5:0] zext_ln25_fu_1160_p1;
wire   [5:0] trunc_ln58_2_fu_1208_p1;
wire   [5:0] add_ln25_fu_1212_p2;
wire   [63:0] shl_ln2_fu_1276_p3;
wire   [63:0] sub_ln70_fu_1284_p2;
wire   [63:0] shl_ln70_fu_1290_p2;
reg   [20:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_block_state2_on_subcall_done;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_block_state4_on_subcall_done;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
reg    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
reg    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
reg    ap_ST_fsm_state16_blk;
reg    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
reg    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
reg    ap_ST_fsm_state21_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 21'd1;
#0 grp_LOADBYTES_1_fu_430_ap_start_reg = 1'b0;
#0 grp_LOADBYTES_1_fu_438_ap_start_reg = 1'b0;
#0 grp_LOADBYTES_2_fu_526_ap_start_reg = 1'b0;
#0 grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_start_reg = 1'b0;
#0 grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_start_reg = 1'b0;
#0 grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_start_reg = 1'b0;
end

crypto_aead_encrypt_LOADBYTES_1 grp_LOADBYTES_1_fu_430(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_LOADBYTES_1_fu_430_ap_start),
    .ap_done(grp_LOADBYTES_1_fu_430_ap_done),
    .ap_idle(grp_LOADBYTES_1_fu_430_ap_idle),
    .ap_ready(grp_LOADBYTES_1_fu_430_ap_ready),
    .k_address0(grp_LOADBYTES_1_fu_430_k_address0),
    .k_ce0(grp_LOADBYTES_1_fu_430_k_ce0),
    .k_q0(k_q0),
    .bytes(grp_LOADBYTES_1_fu_430_bytes),
    .ap_return(grp_LOADBYTES_1_fu_430_ap_return)
);

crypto_aead_encrypt_LOADBYTES_1 grp_LOADBYTES_1_fu_438(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_LOADBYTES_1_fu_438_ap_start),
    .ap_done(grp_LOADBYTES_1_fu_438_ap_done),
    .ap_idle(grp_LOADBYTES_1_fu_438_ap_idle),
    .ap_ready(grp_LOADBYTES_1_fu_438_ap_ready),
    .k_address0(grp_LOADBYTES_1_fu_438_k_address0),
    .k_ce0(grp_LOADBYTES_1_fu_438_k_ce0),
    .k_q0(npub_q0),
    .bytes(grp_LOADBYTES_1_fu_438_bytes),
    .ap_return(grp_LOADBYTES_1_fu_438_ap_return)
);

crypto_aead_encrypt_ROUND grp_ROUND_fu_448(
    .ap_ready(grp_ROUND_fu_448_ap_ready),
    .s_0_read(grp_ROUND_fu_448_s_0_read),
    .s_1_read(grp_ROUND_fu_448_s_1_read),
    .s_2_read(grp_ROUND_fu_448_s_2_read),
    .s_3_read(grp_ROUND_fu_448_s_3_read),
    .s_4_read(grp_ROUND_fu_448_s_4_read),
    .C(grp_ROUND_fu_448_C),
    .ap_return_0(grp_ROUND_fu_448_ap_return_0),
    .ap_return_1(grp_ROUND_fu_448_ap_return_1),
    .ap_return_2(grp_ROUND_fu_448_ap_return_2),
    .ap_return_3(grp_ROUND_fu_448_ap_return_3),
    .ap_return_4(grp_ROUND_fu_448_ap_return_4)
);

crypto_aead_encrypt_ROUND grp_ROUND_fu_462(
    .ap_ready(grp_ROUND_fu_462_ap_ready),
    .s_0_read(grp_ROUND_fu_448_ap_return_0),
    .s_1_read(grp_ROUND_fu_448_ap_return_1),
    .s_2_read(grp_ROUND_fu_448_ap_return_2),
    .s_3_read(grp_ROUND_fu_448_ap_return_3),
    .s_4_read(grp_ROUND_fu_448_ap_return_4),
    .C(grp_ROUND_fu_462_C),
    .ap_return_0(grp_ROUND_fu_462_ap_return_0),
    .ap_return_1(grp_ROUND_fu_462_ap_return_1),
    .ap_return_2(grp_ROUND_fu_462_ap_return_2),
    .ap_return_3(grp_ROUND_fu_462_ap_return_3),
    .ap_return_4(grp_ROUND_fu_462_ap_return_4)
);

crypto_aead_encrypt_ROUND grp_ROUND_fu_473(
    .ap_ready(grp_ROUND_fu_473_ap_ready),
    .s_0_read(grp_ROUND_fu_462_ap_return_0),
    .s_1_read(grp_ROUND_fu_462_ap_return_1),
    .s_2_read(grp_ROUND_fu_462_ap_return_2),
    .s_3_read(grp_ROUND_fu_462_ap_return_3),
    .s_4_read(grp_ROUND_fu_462_ap_return_4),
    .C(grp_ROUND_fu_473_C),
    .ap_return_0(grp_ROUND_fu_473_ap_return_0),
    .ap_return_1(grp_ROUND_fu_473_ap_return_1),
    .ap_return_2(grp_ROUND_fu_473_ap_return_2),
    .ap_return_3(grp_ROUND_fu_473_ap_return_3),
    .ap_return_4(grp_ROUND_fu_473_ap_return_4)
);

crypto_aead_encrypt_ROUND grp_ROUND_fu_487(
    .ap_ready(grp_ROUND_fu_487_ap_ready),
    .s_0_read(grp_ROUND_fu_473_ap_return_0),
    .s_1_read(grp_ROUND_fu_473_ap_return_1),
    .s_2_read(grp_ROUND_fu_473_ap_return_2),
    .s_3_read(grp_ROUND_fu_473_ap_return_3),
    .s_4_read(grp_ROUND_fu_473_ap_return_4),
    .C(grp_ROUND_fu_487_C),
    .ap_return_0(grp_ROUND_fu_487_ap_return_0),
    .ap_return_1(grp_ROUND_fu_487_ap_return_1),
    .ap_return_2(grp_ROUND_fu_487_ap_return_2),
    .ap_return_3(grp_ROUND_fu_487_ap_return_3),
    .ap_return_4(grp_ROUND_fu_487_ap_return_4)
);

crypto_aead_encrypt_ROUND grp_ROUND_fu_502(
    .ap_ready(grp_ROUND_fu_502_ap_ready),
    .s_0_read(grp_ROUND_fu_487_ap_return_0),
    .s_1_read(grp_ROUND_fu_487_ap_return_1),
    .s_2_read(grp_ROUND_fu_487_ap_return_2),
    .s_3_read(grp_ROUND_fu_487_ap_return_3),
    .s_4_read(grp_ROUND_fu_487_ap_return_4),
    .C(grp_ROUND_fu_502_C),
    .ap_return_0(grp_ROUND_fu_502_ap_return_0),
    .ap_return_1(grp_ROUND_fu_502_ap_return_1),
    .ap_return_2(grp_ROUND_fu_502_ap_return_2),
    .ap_return_3(grp_ROUND_fu_502_ap_return_3),
    .ap_return_4(grp_ROUND_fu_502_ap_return_4)
);

crypto_aead_encrypt_LOADBYTES_2 grp_LOADBYTES_2_fu_526(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_LOADBYTES_2_fu_526_ap_start),
    .ap_done(grp_LOADBYTES_2_fu_526_ap_done),
    .ap_idle(grp_LOADBYTES_2_fu_526_ap_idle),
    .ap_ready(grp_LOADBYTES_2_fu_526_ap_ready),
    .ad_address0(grp_LOADBYTES_2_fu_526_ad_address0),
    .ad_ce0(grp_LOADBYTES_2_fu_526_ad_ce0),
    .ad_q0(grp_LOADBYTES_2_fu_526_ad_q0),
    .bytes(grp_LOADBYTES_2_fu_526_bytes),
    .n(grp_LOADBYTES_2_fu_526_n),
    .ap_return(grp_LOADBYTES_2_fu_526_ap_return)
);

crypto_aead_encrypt_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1 grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_start),
    .ap_done(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_done),
    .ap_idle(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_idle),
    .ap_ready(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_ready),
    .n_assign(trunc_ln68_2_reg_1645),
    .xor_ln68(xor_ln68_reg_1665),
    .m_addr_0_lcssa_idx(m_addr_0_lcssa_idx_reg_358),
    .c_address0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_c_address0),
    .c_ce0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_c_ce0),
    .c_we0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_c_we0),
    .c_d0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_c_d0)
);

crypto_aead_encrypt_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11 grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_start),
    .ap_done(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_done),
    .ap_idle(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_idle),
    .ap_ready(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_ready),
    .s_3(s_3_reg_1680),
    .trunc_ln3(trunc_ln68_reg_1634),
    .m_addr_0_lcssa_idx(m_addr_0_lcssa_idx_reg_358),
    .c_address0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_c_address0),
    .c_ce0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_c_ce0),
    .c_we0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_c_we0),
    .c_d0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_c_d0)
);

crypto_aead_encrypt_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12 grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_start),
    .ap_done(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_done),
    .ap_idle(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_idle),
    .ap_ready(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_ready),
    .s_4_45(s_4_73_reg_1685),
    .add_ln25_7(add_ln25_4_reg_1690),
    .c_address0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_c_address0),
    .c_ce0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_c_ce0),
    .c_we0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_c_we0),
    .c_d0(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_c_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_LOADBYTES_1_fu_430_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
            grp_LOADBYTES_1_fu_430_ap_start_reg <= 1'b1;
        end else if ((grp_LOADBYTES_1_fu_430_ap_ready == 1'b1)) begin
            grp_LOADBYTES_1_fu_430_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_LOADBYTES_1_fu_438_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
            grp_LOADBYTES_1_fu_438_ap_start_reg <= 1'b1;
        end else if ((grp_LOADBYTES_1_fu_438_ap_ready == 1'b1)) begin
            grp_LOADBYTES_1_fu_438_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_LOADBYTES_2_fu_526_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state12) & ((icmp_ln58_1_fu_1100_p2 == 1'd1) | (icmp_ln58_reg_1545 == 1'd1))) | ((1'b1 == ap_CS_fsm_state12) & (icmp_ln58_1_fu_1100_p2 == 1'd0) & (icmp_ln58_reg_1545 == 1'd0)) | ((1'b1 == ap_CS_fsm_state7) & ((icmp_ln40_1_fu_882_p2 == 1'd1) | (icmp_ln40_reg_1424 == 1'd1))) | ((1'b1 == ap_CS_fsm_state7) & (icmp_ln40_1_fu_882_p2 == 1'd0) & (icmp_ln40_reg_1424 == 1'd0)))) begin
            grp_LOADBYTES_2_fu_526_ap_start_reg <= 1'b1;
        end else if ((grp_LOADBYTES_2_fu_526_ap_ready == 1'b1)) begin
            grp_LOADBYTES_2_fu_526_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state18)) begin
            grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_start_reg <= 1'b1;
        end else if ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_ready == 1'b1)) begin
            grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state20)) begin
            grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_start_reg <= 1'b1;
        end else if ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_ready == 1'b1)) begin
            grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state16) & (grp_LOADBYTES_2_fu_526_ap_done == 1'b1))) begin
            grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_start_reg <= 1'b1;
        end else if ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_ready == 1'b1)) begin
            grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln40_fu_813_p2 == 1'd1) & (icmp_ln38_fu_797_p2 == 1'd0))) begin
                ad_addr_0_lcssa_idx_reg_232[3] <= 1'b0;
        ad_addr_0_lcssa_idx_reg_232[4] <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln40_1_fu_882_p2 == 1'd1) & (icmp_ln40_reg_1424 == 1'd0))) begin
                ad_addr_0_lcssa_idx_reg_232[4 : 3] <= and_ln_fu_927_p3[4 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln40_fu_813_p2 == 1'd0) & (icmp_ln38_fu_797_p2 == 1'd0))) begin
        ad_assign_fu_144 <= 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln40_1_fu_882_p2 == 1'd0) & (icmp_ln40_reg_1424 == 1'd0))) begin
        ad_assign_fu_144 <= add_ln44_fu_896_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln40_fu_813_p2 == 1'd1) & (icmp_ln38_fu_797_p2 == 1'd0))) begin
        adlen_addr_0_lcssa_reg_244 <= empty_fu_764_p1;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln40_1_fu_882_p2 == 1'd1) & (icmp_ln40_reg_1424 == 1'd0))) begin
        adlen_addr_0_lcssa_reg_244 <= and_ln40_1_fu_939_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln40_fu_813_p2 == 1'd0) & (icmp_ln38_fu_797_p2 == 1'd0))) begin
        adlen_assign_fu_148 <= adlen;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln40_1_fu_882_p2 == 1'd0) & (icmp_ln40_reg_1424 == 1'd0))) begin
        adlen_assign_fu_148 <= add_ln45_fu_902_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (grp_LOADBYTES_2_fu_526_ap_done == 1'b1))) begin
        i_reg_370 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln25_fu_1164_p2 == 1'd0))) begin
        i_reg_370 <= add_ln25_1_fu_1170_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln58_fu_1032_p2 == 1'd1))) begin
                m_addr_0_lcssa_idx_reg_358[3] <= 1'b0;
        m_addr_0_lcssa_idx_reg_358[4] <= 1'b0;
        m_addr_0_lcssa_idx_reg_358[5] <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln58_1_fu_1100_p2 == 1'd1) & (icmp_ln58_reg_1545 == 1'd0))) begin
                m_addr_0_lcssa_idx_reg_358[5 : 3] <= and_ln1_fu_1120_p3[5 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln58_fu_1032_p2 == 1'd0))) begin
        m_assign_fu_172 <= 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln25_fu_1164_p2 == 1'd1))) begin
        m_assign_fu_172 <= add_ln64_fu_1223_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln58_fu_1032_p2 == 1'd1))) begin
        mlen_addr_0_lcssa_reg_348 <= empty_12_reg_1403;
    end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln58_1_fu_1100_p2 == 1'd1) & (icmp_ln58_reg_1545 == 1'd0))) begin
        mlen_addr_0_lcssa_reg_348 <= and_ln58_1_fu_1132_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln58_fu_1032_p2 == 1'd0))) begin
        mlen_assign_fu_176 <= mlen;
    end else if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln25_fu_1164_p2 == 1'd1))) begin
        mlen_assign_fu_176 <= add_ln65_fu_1229_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln40_fu_813_p2 == 1'd1) & (icmp_ln38_fu_797_p2 == 1'd0))) begin
        s_0_1_17_reg_290 <= grp_ROUND_fu_502_ap_return_0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln40_1_fu_882_p2 == 1'd1) & (icmp_ln40_reg_1424 == 1'd0))) begin
        s_0_1_17_reg_290 <= s_0_45_fu_152;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln38_fu_797_p2 == 1'd1))) begin
        s_0_2_22_reg_338 <= grp_ROUND_fu_502_ap_return_0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln38_reg_1420 == 1'd0))) begin
        s_0_2_22_reg_338 <= grp_ROUND_fu_487_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln58_fu_1032_p2 == 1'd1))) begin
        s_0_4_28_reg_420 <= ap_phi_mux_s_0_2_22_phi_fu_341_p4;
    end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln58_1_fu_1100_p2 == 1'd1) & (icmp_ln58_reg_1545 == 1'd0))) begin
        s_0_4_28_reg_420 <= s_0_60_fu_180;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln58_fu_1032_p2 == 1'd0))) begin
        s_0_60_fu_180 <= ap_phi_mux_s_0_2_22_phi_fu_341_p4;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        s_0_60_fu_180 <= grp_ROUND_fu_502_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln40_fu_813_p2 == 1'd1) & (icmp_ln38_fu_797_p2 == 1'd0))) begin
        s_1_1_16_reg_281 <= grp_ROUND_fu_502_ap_return_1;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln40_1_fu_882_p2 == 1'd1) & (icmp_ln40_reg_1424 == 1'd0))) begin
        s_1_1_16_reg_281 <= s_1_43_fu_156;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln38_fu_797_p2 == 1'd1))) begin
        s_1_2_21_reg_328 <= grp_ROUND_fu_502_ap_return_1;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln38_reg_1420 == 1'd0))) begin
        s_1_2_21_reg_328 <= grp_ROUND_fu_487_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln58_fu_1032_p2 == 1'd1))) begin
        s_1_4_27_reg_410 <= ap_phi_mux_s_1_2_21_phi_fu_331_p4;
    end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln58_1_fu_1100_p2 == 1'd1) & (icmp_ln58_reg_1545 == 1'd0))) begin
        s_1_4_27_reg_410 <= s_1_56_fu_184;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln58_fu_1032_p2 == 1'd0))) begin
        s_1_56_fu_184 <= ap_phi_mux_s_1_2_21_phi_fu_331_p4;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        s_1_56_fu_184 <= grp_ROUND_fu_502_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln40_fu_813_p2 == 1'd1) & (icmp_ln38_fu_797_p2 == 1'd0))) begin
        s_2_1_15_reg_272 <= grp_ROUND_fu_502_ap_return_2;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln40_1_fu_882_p2 == 1'd1) & (icmp_ln40_reg_1424 == 1'd0))) begin
        s_2_1_15_reg_272 <= s_2_43_fu_160;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln38_fu_797_p2 == 1'd1))) begin
        s_2_2_20_reg_318 <= grp_ROUND_fu_502_ap_return_2;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln38_reg_1420 == 1'd0))) begin
        s_2_2_20_reg_318 <= grp_ROUND_fu_487_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln58_fu_1032_p2 == 1'd1))) begin
        s_2_4_26_reg_400 <= ap_phi_mux_s_2_2_20_phi_fu_321_p4;
    end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln58_1_fu_1100_p2 == 1'd1) & (icmp_ln58_reg_1545 == 1'd0))) begin
        s_2_4_26_reg_400 <= s_2_56_fu_188;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln58_fu_1032_p2 == 1'd0))) begin
        s_2_56_fu_188 <= ap_phi_mux_s_2_2_20_phi_fu_321_p4;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        s_2_56_fu_188 <= grp_ROUND_fu_502_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln40_fu_813_p2 == 1'd1) & (icmp_ln38_fu_797_p2 == 1'd0))) begin
        s_3_1_14_reg_263 <= s_3_14_fu_787_p2;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln40_1_fu_882_p2 == 1'd1) & (icmp_ln40_reg_1424 == 1'd0))) begin
        s_3_1_14_reg_263 <= s_3_45_fu_164;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln38_fu_797_p2 == 1'd1))) begin
        s_3_2_19_reg_308 <= s_3_14_fu_787_p2;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln38_reg_1420 == 1'd0))) begin
        s_3_2_19_reg_308 <= grp_ROUND_fu_487_ap_return_3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln40_fu_813_p2 == 1'd0) & (icmp_ln38_fu_797_p2 == 1'd0))) begin
        s_3_45_fu_164 <= s_3_14_fu_787_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        s_3_45_fu_164 <= grp_ROUND_fu_502_ap_return_3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln58_fu_1032_p2 == 1'd1))) begin
        s_3_4_25_reg_390 <= ap_phi_mux_s_3_2_19_phi_fu_311_p4;
    end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln58_1_fu_1100_p2 == 1'd1) & (icmp_ln58_reg_1545 == 1'd0))) begin
        s_3_4_25_reg_390 <= s_3_58_fu_192;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln58_fu_1032_p2 == 1'd0))) begin
        s_3_58_fu_192 <= ap_phi_mux_s_3_2_19_phi_fu_311_p4;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        s_3_58_fu_192 <= grp_ROUND_fu_502_ap_return_3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln40_fu_813_p2 == 1'd1) & (icmp_ln38_fu_797_p2 == 1'd0))) begin
        s_4_1_13_reg_254 <= s_4_13_fu_792_p2;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln40_1_fu_882_p2 == 1'd1) & (icmp_ln40_reg_1424 == 1'd0))) begin
        s_4_1_13_reg_254 <= s_4_46_fu_168;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln38_fu_797_p2 == 1'd1))) begin
        s_4_2_18_reg_299 <= s_4_13_fu_792_p2;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln38_reg_1420 == 1'd0))) begin
        s_4_2_18_reg_299 <= grp_ROUND_fu_487_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln40_fu_813_p2 == 1'd0) & (icmp_ln38_fu_797_p2 == 1'd0))) begin
        s_4_46_fu_168 <= s_4_13_fu_792_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        s_4_46_fu_168 <= grp_ROUND_fu_502_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln58_fu_1032_p2 == 1'd1))) begin
        s_4_4_24_reg_381 <= s_4_59_fu_1017_p2;
    end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln58_1_fu_1100_p2 == 1'd1) & (icmp_ln58_reg_1545 == 1'd0))) begin
        s_4_4_24_reg_381 <= s_4_60_fu_196;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln58_fu_1032_p2 == 1'd0))) begin
        s_4_60_fu_196 <= s_4_59_fu_1017_p2;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        s_4_60_fu_196 <= grp_ROUND_fu_502_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        K0_reg_1339 <= grp_LOADBYTES_1_fu_430_ap_return;
        N0_reg_1347 <= grp_LOADBYTES_1_fu_438_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        K1_reg_1352 <= grp_LOADBYTES_1_fu_430_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        add_ln25_4_reg_1690 <= add_ln25_4_fu_1334_p2;
        s_3_reg_1680 <= s_3_fu_1323_p2;
        s_4_73_reg_1685 <= s_4_73_fu_1329_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        empty_12_reg_1403 <= empty_12_fu_768_p1;
        icmp_ln38_reg_1420 <= icmp_ln38_fu_797_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln38_fu_797_p2 == 1'd0))) begin
        icmp_ln40_reg_1424 <= icmp_ln40_fu_813_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        icmp_ln58_reg_1545 <= icmp_ln58_fu_1032_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_693 <= grp_ROUND_fu_473_ap_return_0;
        reg_698 <= grp_ROUND_fu_473_ap_return_1;
        reg_703 <= grp_ROUND_fu_473_ap_return_2;
        reg_708 <= grp_ROUND_fu_473_ap_return_3;
        reg_713 <= grp_ROUND_fu_473_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_718 <= grp_ROUND_fu_502_ap_return_0;
        reg_725 <= grp_ROUND_fu_502_ap_return_1;
        reg_732 <= grp_ROUND_fu_502_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((1'b1 == ap_CS_fsm_state14) & (icmp_ln25_fu_1164_p2 == 1'd1)))) begin
        reg_739 <= grp_ROUND_fu_448_ap_return_0;
        reg_744 <= grp_ROUND_fu_448_ap_return_1;
        reg_749 <= grp_ROUND_fu_448_ap_return_2;
        reg_754 <= grp_ROUND_fu_448_ap_return_3;
        reg_759 <= grp_ROUND_fu_448_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln40_fu_813_p2 == 1'd0) & (icmp_ln38_fu_797_p2 == 1'd0)))) begin
        s_0_45_fu_152 <= grp_ROUND_fu_502_ap_return_0;
        s_1_43_fu_156 <= grp_ROUND_fu_502_ap_return_1;
        s_2_43_fu_160 <= grp_ROUND_fu_502_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        s_0_55_reg_1515 <= grp_ROUND_fu_462_ap_return_0;
        s_1_51_reg_1520 <= grp_ROUND_fu_462_ap_return_1;
        s_2_51_reg_1525 <= grp_ROUND_fu_462_ap_return_2;
        s_3_53_reg_1530 <= grp_ROUND_fu_462_ap_return_3;
        s_4_54_reg_1535 <= grp_ROUND_fu_462_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        s_0_61_reg_1651 <= s_0_61_fu_1155_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        s_0_6_reg_1359 <= grp_ROUND_fu_487_ap_return_0;
        s_1_7_reg_1364 <= grp_ROUND_fu_487_ap_return_1;
        s_2_7_reg_1369 <= grp_ROUND_fu_487_ap_return_2;
        s_3_7_reg_1374 <= grp_ROUND_fu_487_ap_return_3;
        s_4_7_reg_1379 <= grp_ROUND_fu_487_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        s_3_66_reg_1670 <= grp_ROUND_fu_502_ap_return_3;
        s_4_68_reg_1675 <= grp_ROUND_fu_502_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln40_1_fu_882_p2 == 1'd0) & (icmp_ln40_reg_1424 == 1'd0))) begin
        trunc_ln40_1_reg_1505 <= trunc_ln40_1_fu_891_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & ((icmp_ln40_1_fu_882_p2 == 1'd1) | (icmp_ln40_reg_1424 == 1'd1)))) begin
        trunc_ln48_reg_1510 <= trunc_ln48_fu_948_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln58_1_fu_1100_p2 == 1'd0) & (icmp_ln58_reg_1545 == 1'd0))) begin
        trunc_ln58_1_reg_1629 <= trunc_ln58_1_fu_1106_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & ((icmp_ln58_1_fu_1100_p2 == 1'd1) | (icmp_ln58_reg_1545 == 1'd1)))) begin
        trunc_ln68_1_reg_1640[4 : 3] <= trunc_ln68_1_fu_1145_p1[4 : 3];
        trunc_ln68_2_reg_1645 <= trunc_ln68_2_fu_1150_p1;
        trunc_ln68_reg_1634 <= trunc_ln68_fu_1141_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        xor_ln68_reg_1665 <= xor_ln68_fu_1269_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8))) begin
        ad_ce0 = grp_LOADBYTES_2_fu_526_ad_ce0;
    end else begin
        ad_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_LOADBYTES_2_fu_526_ap_done == 1'b0)) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

always @ (*) begin
    if ((grp_LOADBYTES_2_fu_526_ap_done == 1'b0)) begin
        ap_ST_fsm_state13_blk = 1'b1;
    end else begin
        ap_ST_fsm_state13_blk = 1'b0;
    end
end

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

always @ (*) begin
    if ((grp_LOADBYTES_2_fu_526_ap_done == 1'b0)) begin
        ap_ST_fsm_state16_blk = 1'b1;
    end else begin
        ap_ST_fsm_state16_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_done == 1'b0)) begin
        ap_ST_fsm_state17_blk = 1'b1;
    end else begin
        ap_ST_fsm_state17_blk = 1'b0;
    end
end

assign ap_ST_fsm_state18_blk = 1'b0;

always @ (*) begin
    if ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_done == 1'b0)) begin
        ap_ST_fsm_state19_blk = 1'b1;
    end else begin
        ap_ST_fsm_state19_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

always @ (*) begin
    if ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_done == 1'b0)) begin
        ap_ST_fsm_state21_blk = 1'b1;
    end else begin
        ap_ST_fsm_state21_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state2_on_subcall_done)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state4_on_subcall_done)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if ((grp_LOADBYTES_2_fu_526_ap_done == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) & (grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln40_1_fu_882_p2 == 1'd1) & (icmp_ln40_reg_1424 == 1'd0))) begin
        ap_phi_mux_adlen_addr_0_lcssa_phi_fu_247_p4 = and_ln40_1_fu_939_p3;
    end else begin
        ap_phi_mux_adlen_addr_0_lcssa_phi_fu_247_p4 = adlen_addr_0_lcssa_reg_244;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln58_1_fu_1100_p2 == 1'd1) & (icmp_ln58_reg_1545 == 1'd0))) begin
        ap_phi_mux_m_addr_0_lcssa_idx_phi_fu_362_p4 = and_ln1_fu_1120_p3;
    end else begin
        ap_phi_mux_m_addr_0_lcssa_idx_phi_fu_362_p4 = m_addr_0_lcssa_idx_reg_358;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln58_1_fu_1100_p2 == 1'd1) & (icmp_ln58_reg_1545 == 1'd0))) begin
        ap_phi_mux_mlen_addr_0_lcssa_phi_fu_351_p4 = and_ln58_1_fu_1132_p3;
    end else begin
        ap_phi_mux_mlen_addr_0_lcssa_phi_fu_351_p4 = mlen_addr_0_lcssa_reg_348;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln38_reg_1420 == 1'd0))) begin
        ap_phi_mux_s_0_2_22_phi_fu_341_p4 = grp_ROUND_fu_487_ap_return_0;
    end else begin
        ap_phi_mux_s_0_2_22_phi_fu_341_p4 = s_0_2_22_reg_338;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln38_reg_1420 == 1'd0))) begin
        ap_phi_mux_s_1_2_21_phi_fu_331_p4 = grp_ROUND_fu_487_ap_return_1;
    end else begin
        ap_phi_mux_s_1_2_21_phi_fu_331_p4 = s_1_2_21_reg_328;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln38_reg_1420 == 1'd0))) begin
        ap_phi_mux_s_2_2_20_phi_fu_321_p4 = grp_ROUND_fu_487_ap_return_2;
    end else begin
        ap_phi_mux_s_2_2_20_phi_fu_321_p4 = s_2_2_20_reg_318;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln38_reg_1420 == 1'd0))) begin
        ap_phi_mux_s_3_2_19_phi_fu_311_p4 = grp_ROUND_fu_487_ap_return_3;
    end else begin
        ap_phi_mux_s_3_2_19_phi_fu_311_p4 = s_3_2_19_reg_308;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln38_reg_1420 == 1'd0))) begin
        ap_phi_mux_s_4_2_18_phi_fu_302_p4 = grp_ROUND_fu_487_ap_return_4;
    end else begin
        ap_phi_mux_s_4_2_18_phi_fu_302_p4 = s_4_2_18_reg_299;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) & (grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        c_address0 = zext_ln25_3_fu_1218_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        c_address0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_c_address0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        c_address0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_c_address0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        c_address0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_c_address0;
    end else begin
        c_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        c_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        c_ce0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_c_ce0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        c_ce0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_c_ce0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        c_ce0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_c_ce0;
    end else begin
        c_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        c_d0 = trunc_ln25_3_fu_1203_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        c_d0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_c_d0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        c_d0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_c_d0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        c_d0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_c_d0;
    end else begin
        c_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln25_fu_1164_p2 == 1'd0))) begin
        c_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        c_we0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_c_we0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        c_we0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_c_we0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        c_we0 = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_c_we0;
    end else begin
        c_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        clen_ap_vld = 1'b1;
    end else begin
        clen_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_LOADBYTES_1_fu_430_bytes = 4'd8;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_LOADBYTES_1_fu_430_bytes = 4'd0;
    end else begin
        grp_LOADBYTES_1_fu_430_bytes = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_LOADBYTES_1_fu_438_bytes = 4'd8;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_LOADBYTES_1_fu_438_bytes = 4'd0;
    end else begin
        grp_LOADBYTES_1_fu_438_bytes = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_LOADBYTES_2_fu_526_ad_q0 = m_q0;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_LOADBYTES_2_fu_526_ad_q0 = ad_q0;
    end else begin
        grp_LOADBYTES_2_fu_526_ad_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_LOADBYTES_2_fu_526_bytes = trunc_ln68_1_reg_1640;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_LOADBYTES_2_fu_526_bytes = trunc_ln58_1_reg_1629;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_LOADBYTES_2_fu_526_bytes = ad_addr_0_lcssa_idx_reg_232;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_LOADBYTES_2_fu_526_bytes = trunc_ln40_1_reg_1505;
    end else begin
        grp_LOADBYTES_2_fu_526_bytes = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_LOADBYTES_2_fu_526_n = trunc_ln68_2_reg_1645;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_LOADBYTES_2_fu_526_n = trunc_ln48_reg_1510;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_LOADBYTES_2_fu_526_n = 32'd8;
    end else begin
        grp_LOADBYTES_2_fu_526_n = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | ((1'b1 == ap_CS_fsm_state11) & (icmp_ln38_reg_1420 == 1'd0)))) begin
        grp_ROUND_fu_448_C = 8'd120;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | ((1'b1 == ap_CS_fsm_state14) & (icmp_ln25_fu_1164_p2 == 1'd1)))) begin
        grp_ROUND_fu_448_C = 8'd150;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6))) begin
        grp_ROUND_fu_448_C = 8'd135;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_ROUND_fu_448_C = 8'd195;
    end else if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state4))) begin
        grp_ROUND_fu_448_C = 8'd240;
    end else begin
        grp_ROUND_fu_448_C = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_ROUND_fu_448_s_0_read = reg_718;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_ROUND_fu_448_s_0_read = s_0_62_fu_1296_p2;
    end else if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln25_fu_1164_p2 == 1'd1))) begin
        grp_ROUND_fu_448_s_0_read = s_0_61_reg_1651;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln38_reg_1420 == 1'd0))) begin
        grp_ROUND_fu_448_s_0_read = s_0_55_reg_1515;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_ROUND_fu_448_s_0_read = s_0_53_fu_1010_p2;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_ROUND_fu_448_s_0_read = reg_739;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_ROUND_fu_448_s_0_read = s_0_46_fu_953_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_ROUND_fu_448_s_0_read = s_0_6_reg_1359;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_ROUND_fu_448_s_0_read = reg_693;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_ROUND_fu_448_s_0_read = 64'd9241399655273594880;
    end else begin
        grp_ROUND_fu_448_s_0_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_ROUND_fu_448_s_1_read = reg_725;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_ROUND_fu_448_s_1_read = s_1_57_fu_1303_p2;
    end else if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln25_fu_1164_p2 == 1'd1))) begin
        grp_ROUND_fu_448_s_1_read = s_1_56_fu_184;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln38_reg_1420 == 1'd0))) begin
        grp_ROUND_fu_448_s_1_read = s_1_51_reg_1520;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_ROUND_fu_448_s_1_read = s_1_1_16_reg_281;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_ROUND_fu_448_s_1_read = reg_744;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_ROUND_fu_448_s_1_read = s_1_43_fu_156;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_ROUND_fu_448_s_1_read = s_1_7_reg_1364;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_ROUND_fu_448_s_1_read = reg_698;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_ROUND_fu_448_s_1_read = K0_reg_1339;
    end else begin
        grp_ROUND_fu_448_s_1_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_ROUND_fu_448_s_2_read = reg_732;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_ROUND_fu_448_s_2_read = s_2_57_fu_1309_p2;
    end else if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln25_fu_1164_p2 == 1'd1))) begin
        grp_ROUND_fu_448_s_2_read = s_2_56_fu_188;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln38_reg_1420 == 1'd0))) begin
        grp_ROUND_fu_448_s_2_read = s_2_51_reg_1525;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_ROUND_fu_448_s_2_read = s_2_1_15_reg_272;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_ROUND_fu_448_s_2_read = reg_749;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_ROUND_fu_448_s_2_read = s_2_43_fu_160;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_ROUND_fu_448_s_2_read = s_2_7_reg_1369;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_ROUND_fu_448_s_2_read = reg_703;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_ROUND_fu_448_s_2_read = grp_LOADBYTES_1_fu_430_ap_return;
    end else begin
        grp_ROUND_fu_448_s_2_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_ROUND_fu_448_s_3_read = s_3_66_reg_1670;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_ROUND_fu_448_s_3_read = s_3_4_25_reg_390;
    end else if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln25_fu_1164_p2 == 1'd1))) begin
        grp_ROUND_fu_448_s_3_read = s_3_58_fu_192;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln38_reg_1420 == 1'd0))) begin
        grp_ROUND_fu_448_s_3_read = s_3_53_reg_1530;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_ROUND_fu_448_s_3_read = s_3_1_14_reg_263;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_ROUND_fu_448_s_3_read = reg_754;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_ROUND_fu_448_s_3_read = s_3_45_fu_164;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_ROUND_fu_448_s_3_read = s_3_7_reg_1374;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_ROUND_fu_448_s_3_read = reg_708;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_ROUND_fu_448_s_3_read = N0_reg_1347;
    end else begin
        grp_ROUND_fu_448_s_3_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_ROUND_fu_448_s_4_read = s_4_68_reg_1675;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_ROUND_fu_448_s_4_read = s_4_4_24_reg_381;
    end else if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln25_fu_1164_p2 == 1'd1))) begin
        grp_ROUND_fu_448_s_4_read = s_4_60_fu_196;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln38_reg_1420 == 1'd0))) begin
        grp_ROUND_fu_448_s_4_read = s_4_54_reg_1535;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_ROUND_fu_448_s_4_read = s_4_1_13_reg_254;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_ROUND_fu_448_s_4_read = reg_759;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_ROUND_fu_448_s_4_read = s_4_46_fu_168;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_ROUND_fu_448_s_4_read = s_4_7_reg_1379;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_ROUND_fu_448_s_4_read = reg_713;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_ROUND_fu_448_s_4_read = grp_LOADBYTES_1_fu_438_ap_return;
    end else begin
        grp_ROUND_fu_448_s_4_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | ((1'b1 == ap_CS_fsm_state11) & (icmp_ln38_reg_1420 == 1'd0)))) begin
        grp_ROUND_fu_462_C = 8'd105;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_ROUND_fu_462_C = 8'd135;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6))) begin
        grp_ROUND_fu_462_C = 8'd120;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_ROUND_fu_462_C = 8'd180;
    end else if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state4))) begin
        grp_ROUND_fu_462_C = 8'd225;
    end else begin
        grp_ROUND_fu_462_C = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | ((1'b1 == ap_CS_fsm_state11) & (icmp_ln38_reg_1420 == 1'd0)))) begin
        grp_ROUND_fu_473_C = 8'd90;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6))) begin
        grp_ROUND_fu_473_C = 8'd105;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_ROUND_fu_473_C = 8'd165;
    end else if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state4))) begin
        grp_ROUND_fu_473_C = 8'd210;
    end else begin
        grp_ROUND_fu_473_C = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | ((1'b1 == ap_CS_fsm_state11) & (icmp_ln38_reg_1420 == 1'd0)))) begin
        grp_ROUND_fu_487_C = 8'd75;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6))) begin
        grp_ROUND_fu_487_C = 8'd90;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_ROUND_fu_487_C = 8'd150;
    end else begin
        grp_ROUND_fu_487_C = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_ROUND_fu_502_C = 8'd135;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6))) begin
        grp_ROUND_fu_502_C = 8'd75;
    end else begin
        grp_ROUND_fu_502_C = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        k_ce0 = grp_LOADBYTES_1_fu_430_k_ce0;
    end else begin
        k_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state13))) begin
        m_ce0 = grp_LOADBYTES_2_fu_526_ad_ce0;
    end else begin
        m_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        npub_ce0 = grp_LOADBYTES_1_fu_438_k_ce0;
    end else begin
        npub_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == ap_block_state4_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln38_fu_797_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & ((icmp_ln40_1_fu_882_p2 == 1'd1) | (icmp_ln40_reg_1424 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (grp_LOADBYTES_2_fu_526_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (grp_LOADBYTES_2_fu_526_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & ((icmp_ln58_1_fu_1100_p2 == 1'd1) | (icmp_ln58_reg_1545 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (grp_LOADBYTES_2_fu_526_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln25_fu_1164_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (grp_LOADBYTES_2_fu_526_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ad_address0 = grp_LOADBYTES_2_fu_526_ad_address0;

assign add_ln25_1_fu_1170_p2 = (i_reg_370 + 4'd1);

assign add_ln25_4_fu_1334_p2 = (trunc_ln68_reg_1634 + m_addr_0_lcssa_idx_reg_358);

assign add_ln25_fu_1212_p2 = (zext_ln25_fu_1160_p1 + trunc_ln58_2_fu_1208_p1);

assign add_ln44_fu_896_p2 = (ad_assign_fu_144 + 64'd8);

assign add_ln45_fu_902_p2 = ($signed(adlen_assign_fu_148) + $signed(64'd18446744073709551608));

assign add_ln64_fu_1223_p2 = (m_assign_fu_172 + 64'd8);

assign add_ln65_fu_1229_p2 = ($signed(mlen_assign_fu_176) + $signed(64'd18446744073709551608));

assign and_ln1_fu_1120_p3 = {{tmp_6_fu_1111_p4}, {3'd0}};

assign and_ln40_1_fu_939_p3 = {{58'd0}, {trunc_ln40_fu_936_p1}};

assign and_ln58_1_fu_1132_p3 = {{58'd0}, {trunc_ln58_fu_1129_p1}};

assign and_ln_fu_927_p3 = {{tmp_4_fu_918_p4}, {3'd0}};

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state2_on_subcall_done = ((grp_LOADBYTES_1_fu_438_ap_done == 1'b0) | (grp_LOADBYTES_1_fu_430_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state4_on_subcall_done = ((grp_LOADBYTES_1_fu_438_ap_done == 1'b0) | (grp_LOADBYTES_1_fu_430_ap_done == 1'b0));
end

assign ap_local_block = 1'b0;

assign ap_local_deadlock = 1'b0;

assign ap_return = 32'd0;

assign clen = (mlen + 64'd16);

assign empty_12_fu_768_p1 = mlen[60:0];

assign empty_fu_764_p1 = adlen[60:0];

assign grp_LOADBYTES_1_fu_430_ap_start = grp_LOADBYTES_1_fu_430_ap_start_reg;

assign grp_LOADBYTES_1_fu_438_ap_start = grp_LOADBYTES_1_fu_438_ap_start_reg;

assign grp_LOADBYTES_2_fu_526_ap_start = grp_LOADBYTES_2_fu_526_ap_start_reg;

assign grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_start = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_start_reg;

assign grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_start = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_start_reg;

assign grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_start = grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_start_reg;

assign icmp_ln25_fu_1164_p2 = ((i_reg_370 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln38_fu_797_p2 = ((adlen == 64'd0) ? 1'b1 : 1'b0);

assign icmp_ln40_1_fu_882_p2 = ((tmp_7_fu_872_p4 == 61'd0) ? 1'b1 : 1'b0);

assign icmp_ln40_fu_813_p2 = ((tmp_5_fu_803_p4 == 61'd0) ? 1'b1 : 1'b0);

assign icmp_ln58_1_fu_1100_p2 = ((tmp_9_fu_1090_p4 == 61'd0) ? 1'b1 : 1'b0);

assign icmp_ln58_fu_1032_p2 = ((tmp_8_fu_1023_p4 == 61'd0) ? 1'b1 : 1'b0);

assign k_address0 = grp_LOADBYTES_1_fu_430_k_address0;

assign lshr_ln25_fu_1198_p2 = s_0_61_reg_1651 >> zext_ln25_2_fu_1194_p1;

assign m_address0 = grp_LOADBYTES_2_fu_526_ad_address0;

assign npub_address0 = grp_LOADBYTES_1_fu_438_k_address0;

assign s_0_46_fu_953_p2 = (s_0_45_fu_152 ^ grp_LOADBYTES_2_fu_526_ap_return);

assign s_0_53_fu_1010_p2 = (xor_ln49_fu_1004_p2 ^ s_0_1_17_reg_290);

assign s_0_61_fu_1155_p2 = (s_0_60_fu_180 ^ grp_LOADBYTES_2_fu_526_ap_return);

assign s_0_62_fu_1296_p2 = (xor_ln68_fu_1269_p2 ^ shl_ln70_fu_1290_p2);

assign s_1_57_fu_1303_p2 = (s_1_4_27_reg_410 ^ K0_reg_1339);

assign s_2_57_fu_1309_p2 = (s_2_4_26_reg_400 ^ K1_reg_1352);

assign s_3_14_fu_787_p2 = (grp_ROUND_fu_502_ap_return_3 ^ K0_reg_1339);

assign s_3_fu_1323_p2 = (grp_ROUND_fu_487_ap_return_3 ^ K0_reg_1339);

assign s_4_13_fu_792_p2 = (grp_ROUND_fu_502_ap_return_4 ^ K1_reg_1352);

assign s_4_59_fu_1017_p2 = (ap_phi_mux_s_4_2_18_phi_fu_302_p4 ^ 64'd1);

assign s_4_73_fu_1329_p2 = (grp_ROUND_fu_487_ap_return_4 ^ K1_reg_1352);

assign shl_ln1_fu_1180_p3 = {{trunc_ln25_fu_1176_p1}, {3'd0}};

assign shl_ln2_fu_1276_p3 = {{mlen_addr_0_lcssa_reg_348}, {3'd0}};

assign shl_ln49_fu_998_p2 = 64'd128 << sub_ln49_fu_992_p2;

assign shl_ln70_fu_1290_p2 = 64'd128 << sub_ln70_fu_1284_p2;

assign shl_ln_fu_984_p3 = {{adlen_addr_0_lcssa_reg_244}, {3'd0}};

assign sub_ln25_fu_1188_p2 = ($signed(6'd56) - $signed(shl_ln1_fu_1180_p3));

assign sub_ln49_fu_992_p2 = (64'd56 - shl_ln_fu_984_p3);

assign sub_ln70_fu_1284_p2 = (64'd56 - shl_ln2_fu_1276_p3);

assign tmp_4_fu_918_p4 = {{adlen[4:3]}};

assign tmp_5_fu_803_p4 = {{adlen[63:3]}};

assign tmp_6_fu_1111_p4 = {{mlen[5:3]}};

assign tmp_7_fu_872_p4 = {{adlen_assign_fu_148[63:3]}};

assign tmp_8_fu_1023_p4 = {{mlen[63:3]}};

assign tmp_9_fu_1090_p4 = {{mlen_assign_fu_176[63:3]}};

assign trunc_ln25_3_fu_1203_p1 = lshr_ln25_fu_1198_p2[7:0];

assign trunc_ln25_fu_1176_p1 = i_reg_370[2:0];

assign trunc_ln40_1_fu_891_p1 = ad_assign_fu_144[4:0];

assign trunc_ln40_fu_936_p1 = adlen[2:0];

assign trunc_ln48_fu_948_p1 = ap_phi_mux_adlen_addr_0_lcssa_phi_fu_247_p4[31:0];

assign trunc_ln58_1_fu_1106_p1 = m_assign_fu_172[4:0];

assign trunc_ln58_2_fu_1208_p1 = m_assign_fu_172[5:0];

assign trunc_ln58_fu_1129_p1 = mlen[2:0];

assign trunc_ln68_1_fu_1145_p1 = ap_phi_mux_m_addr_0_lcssa_idx_phi_fu_362_p4[4:0];

assign trunc_ln68_2_fu_1150_p1 = ap_phi_mux_mlen_addr_0_lcssa_phi_fu_351_p4[31:0];

assign trunc_ln68_fu_1141_p1 = ap_phi_mux_mlen_addr_0_lcssa_phi_fu_351_p4[5:0];

assign xor_ln49_fu_1004_p2 = (shl_ln49_fu_998_p2 ^ grp_LOADBYTES_2_fu_526_ap_return);

assign xor_ln68_fu_1269_p2 = (s_0_4_28_reg_420 ^ grp_LOADBYTES_2_fu_526_ap_return);

assign zext_ln25_2_fu_1194_p1 = sub_ln25_fu_1188_p2;

assign zext_ln25_3_fu_1218_p1 = add_ln25_fu_1212_p2;

assign zext_ln25_fu_1160_p1 = i_reg_370;

always @ (posedge ap_clk) begin
    trunc_ln68_1_reg_1640[2:0] <= 3'b000;
    ad_addr_0_lcssa_idx_reg_232[2:0] <= 3'b000;
    m_addr_0_lcssa_idx_reg_358[2:0] <= 3'b000;
end

endmodule //crypto_aead_encrypt
