-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity crypto_aead_encrypt is
port (
    ap_local_block : OUT STD_LOGIC;
    ap_local_deadlock : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    c_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    c_ce0 : OUT STD_LOGIC;
    c_we0 : OUT STD_LOGIC;
    c_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    clen : OUT STD_LOGIC_VECTOR (63 downto 0);
    clen_ap_vld : OUT STD_LOGIC;
    m_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    m_ce0 : OUT STD_LOGIC;
    m_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    mlen : IN STD_LOGIC_VECTOR (63 downto 0);
    ad_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    ad_ce0 : OUT STD_LOGIC;
    ad_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    adlen : IN STD_LOGIC_VECTOR (63 downto 0);
    npub_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    npub_ce0 : OUT STD_LOGIC;
    npub_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    k_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    k_ce0 : OUT STD_LOGIC;
    k_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of crypto_aead_encrypt is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "crypto_aead_encrypt_crypto_aead_encrypt,hls_ip_2021_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbv484-2,HLS_INPUT_CLOCK=30.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=22.625833,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=4539,HLS_SYN_LUT=15586,HLS_VERSION=2021_2}";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (20 downto 0) := "000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (20 downto 0) := "000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (20 downto 0) := "000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (20 downto 0) := "000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (20 downto 0) := "000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (20 downto 0) := "000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (20 downto 0) := "000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (20 downto 0) := "000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (20 downto 0) := "000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (20 downto 0) := "001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (20 downto 0) := "010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (20 downto 0) := "100000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv64_80400C0600000000 : STD_LOGIC_VECTOR (63 downto 0) := "1000000001000000000011000000011000000000000000000000000000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv8_F0 : STD_LOGIC_VECTOR (7 downto 0) := "11110000";
    constant ap_const_lv8_C3 : STD_LOGIC_VECTOR (7 downto 0) := "11000011";
    constant ap_const_lv8_87 : STD_LOGIC_VECTOR (7 downto 0) := "10000111";
    constant ap_const_lv8_96 : STD_LOGIC_VECTOR (7 downto 0) := "10010110";
    constant ap_const_lv8_78 : STD_LOGIC_VECTOR (7 downto 0) := "01111000";
    constant ap_const_lv8_E1 : STD_LOGIC_VECTOR (7 downto 0) := "11100001";
    constant ap_const_lv8_B4 : STD_LOGIC_VECTOR (7 downto 0) := "10110100";
    constant ap_const_lv8_69 : STD_LOGIC_VECTOR (7 downto 0) := "01101001";
    constant ap_const_lv8_D2 : STD_LOGIC_VECTOR (7 downto 0) := "11010010";
    constant ap_const_lv8_A5 : STD_LOGIC_VECTOR (7 downto 0) := "10100101";
    constant ap_const_lv8_5A : STD_LOGIC_VECTOR (7 downto 0) := "01011010";
    constant ap_const_lv8_4B : STD_LOGIC_VECTOR (7 downto 0) := "01001011";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_10 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv61_0 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_FFFFFFFFFFFFFFF8 : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv58_0 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_38 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111000";
    constant ap_const_lv64_80 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv6_38 : STD_LOGIC_VECTOR (5 downto 0) := "111000";
    constant ap_const_boolean_0 : BOOLEAN := false;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal reg_693 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal reg_698 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_703 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_708 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_713 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_718 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal reg_725 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_732 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_739 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal icmp_ln25_fu_1164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_744 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_749 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_754 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_759 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_LOADBYTES_1_fu_430_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal K0_reg_1339 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_LOADBYTES_1_fu_438_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal N0_reg_1347 : STD_LOGIC_VECTOR (63 downto 0);
    signal K1_reg_1352 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_0_6_reg_1359 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal s_1_7_reg_1364 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_7_reg_1369 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_7_reg_1374 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_7_reg_1379 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_fu_764_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal empty_12_fu_768_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal empty_12_reg_1403 : STD_LOGIC_VECTOR (60 downto 0);
    signal s_3_14_fu_787_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_13_fu_792_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln38_fu_797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln38_reg_1420 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_fu_813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_1424 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal trunc_ln40_1_fu_891_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln40_1_reg_1505 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln40_1_fu_882_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln48_fu_948_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln48_reg_1510 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_0_55_reg_1515 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal s_1_51_reg_1520 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_51_reg_1525 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_53_reg_1530 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_54_reg_1535 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_59_fu_1017_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal icmp_ln58_fu_1032_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln58_reg_1545 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal trunc_ln58_1_fu_1106_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln58_1_reg_1629 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln58_1_fu_1100_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln68_fu_1141_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln68_reg_1634 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln68_1_fu_1145_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln68_1_reg_1640 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln68_2_fu_1150_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln68_2_reg_1645 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_0_61_fu_1155_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_0_61_reg_1651 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal add_ln25_1_fu_1170_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal xor_ln68_fu_1269_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln68_reg_1665 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_66_reg_1670 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_68_reg_1675 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_fu_1323_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_reg_1680 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal s_4_73_fu_1329_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_73_reg_1685 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln25_4_fu_1334_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln25_4_reg_1690 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_LOADBYTES_1_fu_430_ap_start : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_430_ap_done : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_430_ap_idle : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_430_ap_ready : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_430_k_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_LOADBYTES_1_fu_430_k_ce0 : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_430_bytes : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_LOADBYTES_1_fu_438_ap_start : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_438_ap_done : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_438_ap_idle : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_438_ap_ready : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_438_k_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_LOADBYTES_1_fu_438_k_ce0 : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_438_bytes : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_ROUND_fu_448_ap_ready : STD_LOGIC;
    signal grp_ROUND_fu_448_s_0_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_448_s_1_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_448_s_2_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_448_s_3_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_448_s_4_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_448_C : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ROUND_fu_448_ap_return_0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_448_ap_return_1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_448_ap_return_2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_448_ap_return_3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_448_ap_return_4 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_462_ap_ready : STD_LOGIC;
    signal grp_ROUND_fu_462_C : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ROUND_fu_462_ap_return_0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_462_ap_return_1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_462_ap_return_2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_462_ap_return_3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_462_ap_return_4 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_473_ap_ready : STD_LOGIC;
    signal grp_ROUND_fu_473_C : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ROUND_fu_473_ap_return_0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_473_ap_return_1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_473_ap_return_2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_473_ap_return_3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_473_ap_return_4 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_487_ap_ready : STD_LOGIC;
    signal grp_ROUND_fu_487_C : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ROUND_fu_487_ap_return_0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_487_ap_return_1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_487_ap_return_2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_487_ap_return_3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_487_ap_return_4 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_502_ap_ready : STD_LOGIC;
    signal grp_ROUND_fu_502_C : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ROUND_fu_502_ap_return_0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_502_ap_return_1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_502_ap_return_2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_502_ap_return_3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_502_ap_return_4 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_LOADBYTES_2_fu_526_ap_start : STD_LOGIC;
    signal grp_LOADBYTES_2_fu_526_ap_done : STD_LOGIC;
    signal grp_LOADBYTES_2_fu_526_ap_idle : STD_LOGIC;
    signal grp_LOADBYTES_2_fu_526_ap_ready : STD_LOGIC;
    signal grp_LOADBYTES_2_fu_526_ad_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_LOADBYTES_2_fu_526_ad_ce0 : STD_LOGIC;
    signal grp_LOADBYTES_2_fu_526_ad_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_LOADBYTES_2_fu_526_bytes : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_LOADBYTES_2_fu_526_n : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_LOADBYTES_2_fu_526_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_start : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_done : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_idle : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_ready : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_c_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_c_ce0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_c_we0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_c_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_start : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_done : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_idle : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_ready : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_c_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_c_ce0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_c_we0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_c_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_start : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_done : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_idle : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_ready : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_c_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_c_ce0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_c_we0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_c_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln_fu_927_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal ad_addr_0_lcssa_idx_reg_232 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln40_1_fu_939_p3 : STD_LOGIC_VECTOR (60 downto 0);
    signal ap_phi_mux_adlen_addr_0_lcssa_phi_fu_247_p4 : STD_LOGIC_VECTOR (60 downto 0);
    signal adlen_addr_0_lcssa_reg_244 : STD_LOGIC_VECTOR (60 downto 0);
    signal s_4_1_13_reg_254 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_1_14_reg_263 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_1_15_reg_272 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_1_1_16_reg_281 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_0_1_17_reg_290 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_s_4_2_18_phi_fu_302_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_2_18_reg_299 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_s_3_2_19_phi_fu_311_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_2_19_reg_308 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_s_2_2_20_phi_fu_321_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_2_20_reg_318 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_s_1_2_21_phi_fu_331_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_1_2_21_reg_328 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_s_0_2_22_phi_fu_341_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_0_2_22_reg_338 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln58_1_fu_1132_p3 : STD_LOGIC_VECTOR (60 downto 0);
    signal ap_phi_mux_mlen_addr_0_lcssa_phi_fu_351_p4 : STD_LOGIC_VECTOR (60 downto 0);
    signal mlen_addr_0_lcssa_reg_348 : STD_LOGIC_VECTOR (60 downto 0);
    signal and_ln1_fu_1120_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_m_addr_0_lcssa_idx_phi_fu_362_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal m_addr_0_lcssa_idx_reg_358 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_reg_370 : STD_LOGIC_VECTOR (3 downto 0);
    signal s_4_4_24_reg_381 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_4_25_reg_390 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_4_26_reg_400 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_1_4_27_reg_410 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_0_4_28_reg_420 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_LOADBYTES_1_fu_430_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_LOADBYTES_1_fu_438_ap_start_reg : STD_LOGIC := '0';
    signal s_0_46_fu_953_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal s_0_53_fu_1010_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal s_0_62_fu_1296_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_1_57_fu_1303_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_57_fu_1309_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_LOADBYTES_2_fu_526_ap_start_reg : STD_LOGIC := '0';
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_start_reg : STD_LOGIC := '0';
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal zext_ln25_3_fu_1218_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ad_assign_fu_144 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln44_fu_896_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal adlen_assign_fu_148 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln45_fu_902_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_0_45_fu_152 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_1_43_fu_156 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_43_fu_160 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_45_fu_164 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_46_fu_168 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_assign_fu_172 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln64_fu_1223_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mlen_assign_fu_176 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln65_fu_1229_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_0_60_fu_180 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_1_56_fu_184 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_56_fu_188 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_58_fu_192 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_60_fu_196 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln25_3_fu_1203_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_fu_803_p4 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_7_fu_872_p4 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_4_fu_918_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln40_fu_936_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln_fu_984_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln49_fu_992_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln49_fu_998_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln49_fu_1004_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_1023_p4 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_9_fu_1090_p4 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_6_fu_1111_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln58_fu_1129_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln25_fu_1176_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln1_fu_1180_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln25_fu_1188_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln25_2_fu_1194_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln25_fu_1198_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln25_fu_1160_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln58_2_fu_1208_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln25_fu_1212_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln2_fu_1276_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln70_fu_1284_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln70_fu_1290_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_block_state4_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component crypto_aead_encrypt_LOADBYTES_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        k_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        k_ce0 : OUT STD_LOGIC;
        k_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        bytes : IN STD_LOGIC_VECTOR (3 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component crypto_aead_encrypt_ROUND IS
    port (
        ap_ready : OUT STD_LOGIC;
        s_0_read : IN STD_LOGIC_VECTOR (63 downto 0);
        s_1_read : IN STD_LOGIC_VECTOR (63 downto 0);
        s_2_read : IN STD_LOGIC_VECTOR (63 downto 0);
        s_3_read : IN STD_LOGIC_VECTOR (63 downto 0);
        s_4_read : IN STD_LOGIC_VECTOR (63 downto 0);
        C : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component crypto_aead_encrypt_LOADBYTES_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ad_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        ad_ce0 : OUT STD_LOGIC;
        ad_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        bytes : IN STD_LOGIC_VECTOR (4 downto 0);
        n : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component crypto_aead_encrypt_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        n_assign : IN STD_LOGIC_VECTOR (31 downto 0);
        xor_ln68 : IN STD_LOGIC_VECTOR (63 downto 0);
        m_addr_0_lcssa_idx : IN STD_LOGIC_VECTOR (5 downto 0);
        c_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        c_ce0 : OUT STD_LOGIC;
        c_we0 : OUT STD_LOGIC;
        c_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component crypto_aead_encrypt_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_3 : IN STD_LOGIC_VECTOR (63 downto 0);
        trunc_ln3 : IN STD_LOGIC_VECTOR (5 downto 0);
        m_addr_0_lcssa_idx : IN STD_LOGIC_VECTOR (5 downto 0);
        c_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        c_ce0 : OUT STD_LOGIC;
        c_we0 : OUT STD_LOGIC;
        c_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component crypto_aead_encrypt_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_4_45 : IN STD_LOGIC_VECTOR (63 downto 0);
        add_ln25_7 : IN STD_LOGIC_VECTOR (5 downto 0);
        c_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        c_ce0 : OUT STD_LOGIC;
        c_we0 : OUT STD_LOGIC;
        c_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    grp_LOADBYTES_1_fu_430 : component crypto_aead_encrypt_LOADBYTES_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_LOADBYTES_1_fu_430_ap_start,
        ap_done => grp_LOADBYTES_1_fu_430_ap_done,
        ap_idle => grp_LOADBYTES_1_fu_430_ap_idle,
        ap_ready => grp_LOADBYTES_1_fu_430_ap_ready,
        k_address0 => grp_LOADBYTES_1_fu_430_k_address0,
        k_ce0 => grp_LOADBYTES_1_fu_430_k_ce0,
        k_q0 => k_q0,
        bytes => grp_LOADBYTES_1_fu_430_bytes,
        ap_return => grp_LOADBYTES_1_fu_430_ap_return);

    grp_LOADBYTES_1_fu_438 : component crypto_aead_encrypt_LOADBYTES_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_LOADBYTES_1_fu_438_ap_start,
        ap_done => grp_LOADBYTES_1_fu_438_ap_done,
        ap_idle => grp_LOADBYTES_1_fu_438_ap_idle,
        ap_ready => grp_LOADBYTES_1_fu_438_ap_ready,
        k_address0 => grp_LOADBYTES_1_fu_438_k_address0,
        k_ce0 => grp_LOADBYTES_1_fu_438_k_ce0,
        k_q0 => npub_q0,
        bytes => grp_LOADBYTES_1_fu_438_bytes,
        ap_return => grp_LOADBYTES_1_fu_438_ap_return);

    grp_ROUND_fu_448 : component crypto_aead_encrypt_ROUND
    port map (
        ap_ready => grp_ROUND_fu_448_ap_ready,
        s_0_read => grp_ROUND_fu_448_s_0_read,
        s_1_read => grp_ROUND_fu_448_s_1_read,
        s_2_read => grp_ROUND_fu_448_s_2_read,
        s_3_read => grp_ROUND_fu_448_s_3_read,
        s_4_read => grp_ROUND_fu_448_s_4_read,
        C => grp_ROUND_fu_448_C,
        ap_return_0 => grp_ROUND_fu_448_ap_return_0,
        ap_return_1 => grp_ROUND_fu_448_ap_return_1,
        ap_return_2 => grp_ROUND_fu_448_ap_return_2,
        ap_return_3 => grp_ROUND_fu_448_ap_return_3,
        ap_return_4 => grp_ROUND_fu_448_ap_return_4);

    grp_ROUND_fu_462 : component crypto_aead_encrypt_ROUND
    port map (
        ap_ready => grp_ROUND_fu_462_ap_ready,
        s_0_read => grp_ROUND_fu_448_ap_return_0,
        s_1_read => grp_ROUND_fu_448_ap_return_1,
        s_2_read => grp_ROUND_fu_448_ap_return_2,
        s_3_read => grp_ROUND_fu_448_ap_return_3,
        s_4_read => grp_ROUND_fu_448_ap_return_4,
        C => grp_ROUND_fu_462_C,
        ap_return_0 => grp_ROUND_fu_462_ap_return_0,
        ap_return_1 => grp_ROUND_fu_462_ap_return_1,
        ap_return_2 => grp_ROUND_fu_462_ap_return_2,
        ap_return_3 => grp_ROUND_fu_462_ap_return_3,
        ap_return_4 => grp_ROUND_fu_462_ap_return_4);

    grp_ROUND_fu_473 : component crypto_aead_encrypt_ROUND
    port map (
        ap_ready => grp_ROUND_fu_473_ap_ready,
        s_0_read => grp_ROUND_fu_462_ap_return_0,
        s_1_read => grp_ROUND_fu_462_ap_return_1,
        s_2_read => grp_ROUND_fu_462_ap_return_2,
        s_3_read => grp_ROUND_fu_462_ap_return_3,
        s_4_read => grp_ROUND_fu_462_ap_return_4,
        C => grp_ROUND_fu_473_C,
        ap_return_0 => grp_ROUND_fu_473_ap_return_0,
        ap_return_1 => grp_ROUND_fu_473_ap_return_1,
        ap_return_2 => grp_ROUND_fu_473_ap_return_2,
        ap_return_3 => grp_ROUND_fu_473_ap_return_3,
        ap_return_4 => grp_ROUND_fu_473_ap_return_4);

    grp_ROUND_fu_487 : component crypto_aead_encrypt_ROUND
    port map (
        ap_ready => grp_ROUND_fu_487_ap_ready,
        s_0_read => grp_ROUND_fu_473_ap_return_0,
        s_1_read => grp_ROUND_fu_473_ap_return_1,
        s_2_read => grp_ROUND_fu_473_ap_return_2,
        s_3_read => grp_ROUND_fu_473_ap_return_3,
        s_4_read => grp_ROUND_fu_473_ap_return_4,
        C => grp_ROUND_fu_487_C,
        ap_return_0 => grp_ROUND_fu_487_ap_return_0,
        ap_return_1 => grp_ROUND_fu_487_ap_return_1,
        ap_return_2 => grp_ROUND_fu_487_ap_return_2,
        ap_return_3 => grp_ROUND_fu_487_ap_return_3,
        ap_return_4 => grp_ROUND_fu_487_ap_return_4);

    grp_ROUND_fu_502 : component crypto_aead_encrypt_ROUND
    port map (
        ap_ready => grp_ROUND_fu_502_ap_ready,
        s_0_read => grp_ROUND_fu_487_ap_return_0,
        s_1_read => grp_ROUND_fu_487_ap_return_1,
        s_2_read => grp_ROUND_fu_487_ap_return_2,
        s_3_read => grp_ROUND_fu_487_ap_return_3,
        s_4_read => grp_ROUND_fu_487_ap_return_4,
        C => grp_ROUND_fu_502_C,
        ap_return_0 => grp_ROUND_fu_502_ap_return_0,
        ap_return_1 => grp_ROUND_fu_502_ap_return_1,
        ap_return_2 => grp_ROUND_fu_502_ap_return_2,
        ap_return_3 => grp_ROUND_fu_502_ap_return_3,
        ap_return_4 => grp_ROUND_fu_502_ap_return_4);

    grp_LOADBYTES_2_fu_526 : component crypto_aead_encrypt_LOADBYTES_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_LOADBYTES_2_fu_526_ap_start,
        ap_done => grp_LOADBYTES_2_fu_526_ap_done,
        ap_idle => grp_LOADBYTES_2_fu_526_ap_idle,
        ap_ready => grp_LOADBYTES_2_fu_526_ap_ready,
        ad_address0 => grp_LOADBYTES_2_fu_526_ad_address0,
        ad_ce0 => grp_LOADBYTES_2_fu_526_ad_ce0,
        ad_q0 => grp_LOADBYTES_2_fu_526_ad_q0,
        bytes => grp_LOADBYTES_2_fu_526_bytes,
        n => grp_LOADBYTES_2_fu_526_n,
        ap_return => grp_LOADBYTES_2_fu_526_ap_return);

    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537 : component crypto_aead_encrypt_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_start,
        ap_done => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_done,
        ap_idle => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_idle,
        ap_ready => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_ready,
        n_assign => trunc_ln68_2_reg_1645,
        xor_ln68 => xor_ln68_reg_1665,
        m_addr_0_lcssa_idx => m_addr_0_lcssa_idx_reg_358,
        c_address0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_c_address0,
        c_ce0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_c_ce0,
        c_we0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_c_we0,
        c_d0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_c_d0);

    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547 : component crypto_aead_encrypt_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_start,
        ap_done => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_done,
        ap_idle => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_idle,
        ap_ready => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_ready,
        s_3 => s_3_reg_1680,
        trunc_ln3 => trunc_ln68_reg_1634,
        m_addr_0_lcssa_idx => m_addr_0_lcssa_idx_reg_358,
        c_address0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_c_address0,
        c_ce0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_c_ce0,
        c_we0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_c_we0,
        c_d0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_c_d0);

    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557 : component crypto_aead_encrypt_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_start,
        ap_done => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_done,
        ap_idle => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_idle,
        ap_ready => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_ready,
        s_4_45 => s_4_73_reg_1685,
        add_ln25_7 => add_ln25_4_reg_1690,
        c_address0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_c_address0,
        c_ce0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_c_ce0,
        c_we0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_c_we0,
        c_d0 => grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_c_d0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_LOADBYTES_1_fu_430_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_LOADBYTES_1_fu_430_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
                    grp_LOADBYTES_1_fu_430_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_LOADBYTES_1_fu_430_ap_ready = ap_const_logic_1)) then 
                    grp_LOADBYTES_1_fu_430_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_LOADBYTES_1_fu_438_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_LOADBYTES_1_fu_438_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
                    grp_LOADBYTES_1_fu_438_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_LOADBYTES_1_fu_438_ap_ready = ap_const_logic_1)) then 
                    grp_LOADBYTES_1_fu_438_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_LOADBYTES_2_fu_526_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_LOADBYTES_2_fu_526_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_state12) and ((icmp_ln58_1_fu_1100_p2 = ap_const_lv1_1) or (icmp_ln58_reg_1545 = ap_const_lv1_1))) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln58_1_fu_1100_p2 = ap_const_lv1_0) and (icmp_ln58_reg_1545 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and ((icmp_ln40_1_fu_882_p2 = ap_const_lv1_1) or (icmp_ln40_reg_1424 = ap_const_lv1_1))) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln40_1_fu_882_p2 = ap_const_lv1_0) and (icmp_ln40_reg_1424 = ap_const_lv1_0)))) then 
                    grp_LOADBYTES_2_fu_526_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_LOADBYTES_2_fu_526_ap_ready = ap_const_logic_1)) then 
                    grp_LOADBYTES_2_fu_526_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_ready = ap_const_logic_1)) then 
                    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_ready = ap_const_logic_1)) then 
                    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_LOADBYTES_2_fu_526_ap_done = ap_const_logic_1))) then 
                    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_ready = ap_const_logic_1)) then 
                    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ad_addr_0_lcssa_idx_reg_232_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln40_fu_813_p2 = ap_const_lv1_1) and (icmp_ln38_fu_797_p2 = ap_const_lv1_0))) then 
                ad_addr_0_lcssa_idx_reg_232(3) <= '0';
                ad_addr_0_lcssa_idx_reg_232(4) <= '0';
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln40_1_fu_882_p2 = ap_const_lv1_1) and (icmp_ln40_reg_1424 = ap_const_lv1_0))) then 
                                ad_addr_0_lcssa_idx_reg_232(4 downto 3) <= and_ln_fu_927_p3(4 downto 3);
            end if; 
        end if;
    end process;

    ad_assign_fu_144_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln40_fu_813_p2 = ap_const_lv1_0) and (icmp_ln38_fu_797_p2 = ap_const_lv1_0))) then 
                ad_assign_fu_144 <= ap_const_lv64_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln40_1_fu_882_p2 = ap_const_lv1_0) and (icmp_ln40_reg_1424 = ap_const_lv1_0))) then 
                ad_assign_fu_144 <= add_ln44_fu_896_p2;
            end if; 
        end if;
    end process;

    adlen_addr_0_lcssa_reg_244_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln40_fu_813_p2 = ap_const_lv1_1) and (icmp_ln38_fu_797_p2 = ap_const_lv1_0))) then 
                adlen_addr_0_lcssa_reg_244 <= empty_fu_764_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln40_1_fu_882_p2 = ap_const_lv1_1) and (icmp_ln40_reg_1424 = ap_const_lv1_0))) then 
                adlen_addr_0_lcssa_reg_244 <= and_ln40_1_fu_939_p3;
            end if; 
        end if;
    end process;

    adlen_assign_fu_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln40_fu_813_p2 = ap_const_lv1_0) and (icmp_ln38_fu_797_p2 = ap_const_lv1_0))) then 
                adlen_assign_fu_148 <= adlen;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln40_1_fu_882_p2 = ap_const_lv1_0) and (icmp_ln40_reg_1424 = ap_const_lv1_0))) then 
                adlen_assign_fu_148 <= add_ln45_fu_902_p2;
            end if; 
        end if;
    end process;

    i_reg_370_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (grp_LOADBYTES_2_fu_526_ap_done = ap_const_logic_1))) then 
                i_reg_370 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln25_fu_1164_p2 = ap_const_lv1_0))) then 
                i_reg_370 <= add_ln25_1_fu_1170_p2;
            end if; 
        end if;
    end process;

    m_addr_0_lcssa_idx_reg_358_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln58_fu_1032_p2 = ap_const_lv1_1))) then 
                m_addr_0_lcssa_idx_reg_358(3) <= '0';
                m_addr_0_lcssa_idx_reg_358(4) <= '0';
                m_addr_0_lcssa_idx_reg_358(5) <= '0';
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln58_1_fu_1100_p2 = ap_const_lv1_1) and (icmp_ln58_reg_1545 = ap_const_lv1_0))) then 
                                m_addr_0_lcssa_idx_reg_358(5 downto 3) <= and_ln1_fu_1120_p3(5 downto 3);
            end if; 
        end if;
    end process;

    m_assign_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln58_fu_1032_p2 = ap_const_lv1_0))) then 
                m_assign_fu_172 <= ap_const_lv64_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln25_fu_1164_p2 = ap_const_lv1_1))) then 
                m_assign_fu_172 <= add_ln64_fu_1223_p2;
            end if; 
        end if;
    end process;

    mlen_addr_0_lcssa_reg_348_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln58_fu_1032_p2 = ap_const_lv1_1))) then 
                mlen_addr_0_lcssa_reg_348 <= empty_12_reg_1403;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln58_1_fu_1100_p2 = ap_const_lv1_1) and (icmp_ln58_reg_1545 = ap_const_lv1_0))) then 
                mlen_addr_0_lcssa_reg_348 <= and_ln58_1_fu_1132_p3;
            end if; 
        end if;
    end process;

    mlen_assign_fu_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln58_fu_1032_p2 = ap_const_lv1_0))) then 
                mlen_assign_fu_176 <= mlen;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln25_fu_1164_p2 = ap_const_lv1_1))) then 
                mlen_assign_fu_176 <= add_ln65_fu_1229_p2;
            end if; 
        end if;
    end process;

    s_0_1_17_reg_290_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln40_fu_813_p2 = ap_const_lv1_1) and (icmp_ln38_fu_797_p2 = ap_const_lv1_0))) then 
                s_0_1_17_reg_290 <= grp_ROUND_fu_502_ap_return_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln40_1_fu_882_p2 = ap_const_lv1_1) and (icmp_ln40_reg_1424 = ap_const_lv1_0))) then 
                s_0_1_17_reg_290 <= s_0_45_fu_152;
            end if; 
        end if;
    end process;

    s_0_2_22_reg_338_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln38_fu_797_p2 = ap_const_lv1_1))) then 
                s_0_2_22_reg_338 <= grp_ROUND_fu_502_ap_return_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln38_reg_1420 = ap_const_lv1_0))) then 
                s_0_2_22_reg_338 <= grp_ROUND_fu_487_ap_return_0;
            end if; 
        end if;
    end process;

    s_0_4_28_reg_420_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln58_fu_1032_p2 = ap_const_lv1_1))) then 
                s_0_4_28_reg_420 <= ap_phi_mux_s_0_2_22_phi_fu_341_p4;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln58_1_fu_1100_p2 = ap_const_lv1_1) and (icmp_ln58_reg_1545 = ap_const_lv1_0))) then 
                s_0_4_28_reg_420 <= s_0_60_fu_180;
            end if; 
        end if;
    end process;

    s_0_60_fu_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln58_fu_1032_p2 = ap_const_lv1_0))) then 
                s_0_60_fu_180 <= ap_phi_mux_s_0_2_22_phi_fu_341_p4;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                s_0_60_fu_180 <= grp_ROUND_fu_502_ap_return_0;
            end if; 
        end if;
    end process;

    s_1_1_16_reg_281_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln40_fu_813_p2 = ap_const_lv1_1) and (icmp_ln38_fu_797_p2 = ap_const_lv1_0))) then 
                s_1_1_16_reg_281 <= grp_ROUND_fu_502_ap_return_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln40_1_fu_882_p2 = ap_const_lv1_1) and (icmp_ln40_reg_1424 = ap_const_lv1_0))) then 
                s_1_1_16_reg_281 <= s_1_43_fu_156;
            end if; 
        end if;
    end process;

    s_1_2_21_reg_328_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln38_fu_797_p2 = ap_const_lv1_1))) then 
                s_1_2_21_reg_328 <= grp_ROUND_fu_502_ap_return_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln38_reg_1420 = ap_const_lv1_0))) then 
                s_1_2_21_reg_328 <= grp_ROUND_fu_487_ap_return_1;
            end if; 
        end if;
    end process;

    s_1_4_27_reg_410_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln58_fu_1032_p2 = ap_const_lv1_1))) then 
                s_1_4_27_reg_410 <= ap_phi_mux_s_1_2_21_phi_fu_331_p4;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln58_1_fu_1100_p2 = ap_const_lv1_1) and (icmp_ln58_reg_1545 = ap_const_lv1_0))) then 
                s_1_4_27_reg_410 <= s_1_56_fu_184;
            end if; 
        end if;
    end process;

    s_1_56_fu_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln58_fu_1032_p2 = ap_const_lv1_0))) then 
                s_1_56_fu_184 <= ap_phi_mux_s_1_2_21_phi_fu_331_p4;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                s_1_56_fu_184 <= grp_ROUND_fu_502_ap_return_1;
            end if; 
        end if;
    end process;

    s_2_1_15_reg_272_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln40_fu_813_p2 = ap_const_lv1_1) and (icmp_ln38_fu_797_p2 = ap_const_lv1_0))) then 
                s_2_1_15_reg_272 <= grp_ROUND_fu_502_ap_return_2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln40_1_fu_882_p2 = ap_const_lv1_1) and (icmp_ln40_reg_1424 = ap_const_lv1_0))) then 
                s_2_1_15_reg_272 <= s_2_43_fu_160;
            end if; 
        end if;
    end process;

    s_2_2_20_reg_318_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln38_fu_797_p2 = ap_const_lv1_1))) then 
                s_2_2_20_reg_318 <= grp_ROUND_fu_502_ap_return_2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln38_reg_1420 = ap_const_lv1_0))) then 
                s_2_2_20_reg_318 <= grp_ROUND_fu_487_ap_return_2;
            end if; 
        end if;
    end process;

    s_2_4_26_reg_400_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln58_fu_1032_p2 = ap_const_lv1_1))) then 
                s_2_4_26_reg_400 <= ap_phi_mux_s_2_2_20_phi_fu_321_p4;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln58_1_fu_1100_p2 = ap_const_lv1_1) and (icmp_ln58_reg_1545 = ap_const_lv1_0))) then 
                s_2_4_26_reg_400 <= s_2_56_fu_188;
            end if; 
        end if;
    end process;

    s_2_56_fu_188_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln58_fu_1032_p2 = ap_const_lv1_0))) then 
                s_2_56_fu_188 <= ap_phi_mux_s_2_2_20_phi_fu_321_p4;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                s_2_56_fu_188 <= grp_ROUND_fu_502_ap_return_2;
            end if; 
        end if;
    end process;

    s_3_1_14_reg_263_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln40_fu_813_p2 = ap_const_lv1_1) and (icmp_ln38_fu_797_p2 = ap_const_lv1_0))) then 
                s_3_1_14_reg_263 <= s_3_14_fu_787_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln40_1_fu_882_p2 = ap_const_lv1_1) and (icmp_ln40_reg_1424 = ap_const_lv1_0))) then 
                s_3_1_14_reg_263 <= s_3_45_fu_164;
            end if; 
        end if;
    end process;

    s_3_2_19_reg_308_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln38_fu_797_p2 = ap_const_lv1_1))) then 
                s_3_2_19_reg_308 <= s_3_14_fu_787_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln38_reg_1420 = ap_const_lv1_0))) then 
                s_3_2_19_reg_308 <= grp_ROUND_fu_487_ap_return_3;
            end if; 
        end if;
    end process;

    s_3_45_fu_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln40_fu_813_p2 = ap_const_lv1_0) and (icmp_ln38_fu_797_p2 = ap_const_lv1_0))) then 
                s_3_45_fu_164 <= s_3_14_fu_787_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                s_3_45_fu_164 <= grp_ROUND_fu_502_ap_return_3;
            end if; 
        end if;
    end process;

    s_3_4_25_reg_390_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln58_fu_1032_p2 = ap_const_lv1_1))) then 
                s_3_4_25_reg_390 <= ap_phi_mux_s_3_2_19_phi_fu_311_p4;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln58_1_fu_1100_p2 = ap_const_lv1_1) and (icmp_ln58_reg_1545 = ap_const_lv1_0))) then 
                s_3_4_25_reg_390 <= s_3_58_fu_192;
            end if; 
        end if;
    end process;

    s_3_58_fu_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln58_fu_1032_p2 = ap_const_lv1_0))) then 
                s_3_58_fu_192 <= ap_phi_mux_s_3_2_19_phi_fu_311_p4;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                s_3_58_fu_192 <= grp_ROUND_fu_502_ap_return_3;
            end if; 
        end if;
    end process;

    s_4_1_13_reg_254_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln40_fu_813_p2 = ap_const_lv1_1) and (icmp_ln38_fu_797_p2 = ap_const_lv1_0))) then 
                s_4_1_13_reg_254 <= s_4_13_fu_792_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln40_1_fu_882_p2 = ap_const_lv1_1) and (icmp_ln40_reg_1424 = ap_const_lv1_0))) then 
                s_4_1_13_reg_254 <= s_4_46_fu_168;
            end if; 
        end if;
    end process;

    s_4_2_18_reg_299_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln38_fu_797_p2 = ap_const_lv1_1))) then 
                s_4_2_18_reg_299 <= s_4_13_fu_792_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln38_reg_1420 = ap_const_lv1_0))) then 
                s_4_2_18_reg_299 <= grp_ROUND_fu_487_ap_return_4;
            end if; 
        end if;
    end process;

    s_4_46_fu_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln40_fu_813_p2 = ap_const_lv1_0) and (icmp_ln38_fu_797_p2 = ap_const_lv1_0))) then 
                s_4_46_fu_168 <= s_4_13_fu_792_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                s_4_46_fu_168 <= grp_ROUND_fu_502_ap_return_4;
            end if; 
        end if;
    end process;

    s_4_4_24_reg_381_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln58_fu_1032_p2 = ap_const_lv1_1))) then 
                s_4_4_24_reg_381 <= s_4_59_fu_1017_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln58_1_fu_1100_p2 = ap_const_lv1_1) and (icmp_ln58_reg_1545 = ap_const_lv1_0))) then 
                s_4_4_24_reg_381 <= s_4_60_fu_196;
            end if; 
        end if;
    end process;

    s_4_60_fu_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln58_fu_1032_p2 = ap_const_lv1_0))) then 
                s_4_60_fu_196 <= s_4_59_fu_1017_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                s_4_60_fu_196 <= grp_ROUND_fu_502_ap_return_4;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                K0_reg_1339 <= grp_LOADBYTES_1_fu_430_ap_return;
                N0_reg_1347 <= grp_LOADBYTES_1_fu_438_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                K1_reg_1352 <= grp_LOADBYTES_1_fu_430_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                add_ln25_4_reg_1690 <= add_ln25_4_fu_1334_p2;
                s_3_reg_1680 <= s_3_fu_1323_p2;
                s_4_73_reg_1685 <= s_4_73_fu_1329_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                empty_12_reg_1403 <= empty_12_fu_768_p1;
                icmp_ln38_reg_1420 <= icmp_ln38_fu_797_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln38_fu_797_p2 = ap_const_lv1_0))) then
                icmp_ln40_reg_1424 <= icmp_ln40_fu_813_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                icmp_ln58_reg_1545 <= icmp_ln58_fu_1032_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state4))) then
                reg_693 <= grp_ROUND_fu_473_ap_return_0;
                reg_698 <= grp_ROUND_fu_473_ap_return_1;
                reg_703 <= grp_ROUND_fu_473_ap_return_2;
                reg_708 <= grp_ROUND_fu_473_ap_return_3;
                reg_713 <= grp_ROUND_fu_473_ap_return_4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state6))) then
                reg_718 <= grp_ROUND_fu_502_ap_return_0;
                reg_725 <= grp_ROUND_fu_502_ap_return_1;
                reg_732 <= grp_ROUND_fu_502_ap_return_2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln25_fu_1164_p2 = ap_const_lv1_1)))) then
                reg_739 <= grp_ROUND_fu_448_ap_return_0;
                reg_744 <= grp_ROUND_fu_448_ap_return_1;
                reg_749 <= grp_ROUND_fu_448_ap_return_2;
                reg_754 <= grp_ROUND_fu_448_ap_return_3;
                reg_759 <= grp_ROUND_fu_448_ap_return_4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln40_fu_813_p2 = ap_const_lv1_0) and (icmp_ln38_fu_797_p2 = ap_const_lv1_0)))) then
                s_0_45_fu_152 <= grp_ROUND_fu_502_ap_return_0;
                s_1_43_fu_156 <= grp_ROUND_fu_502_ap_return_1;
                s_2_43_fu_160 <= grp_ROUND_fu_502_ap_return_2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                s_0_55_reg_1515 <= grp_ROUND_fu_462_ap_return_0;
                s_1_51_reg_1520 <= grp_ROUND_fu_462_ap_return_1;
                s_2_51_reg_1525 <= grp_ROUND_fu_462_ap_return_2;
                s_3_53_reg_1530 <= grp_ROUND_fu_462_ap_return_3;
                s_4_54_reg_1535 <= grp_ROUND_fu_462_ap_return_4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                s_0_61_reg_1651 <= s_0_61_fu_1155_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                s_0_6_reg_1359 <= grp_ROUND_fu_487_ap_return_0;
                s_1_7_reg_1364 <= grp_ROUND_fu_487_ap_return_1;
                s_2_7_reg_1369 <= grp_ROUND_fu_487_ap_return_2;
                s_3_7_reg_1374 <= grp_ROUND_fu_487_ap_return_3;
                s_4_7_reg_1379 <= grp_ROUND_fu_487_ap_return_4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                s_3_66_reg_1670 <= grp_ROUND_fu_502_ap_return_3;
                s_4_68_reg_1675 <= grp_ROUND_fu_502_ap_return_4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln40_1_fu_882_p2 = ap_const_lv1_0) and (icmp_ln40_reg_1424 = ap_const_lv1_0))) then
                trunc_ln40_1_reg_1505 <= trunc_ln40_1_fu_891_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and ((icmp_ln40_1_fu_882_p2 = ap_const_lv1_1) or (icmp_ln40_reg_1424 = ap_const_lv1_1)))) then
                trunc_ln48_reg_1510 <= trunc_ln48_fu_948_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln58_1_fu_1100_p2 = ap_const_lv1_0) and (icmp_ln58_reg_1545 = ap_const_lv1_0))) then
                trunc_ln58_1_reg_1629 <= trunc_ln58_1_fu_1106_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and ((icmp_ln58_1_fu_1100_p2 = ap_const_lv1_1) or (icmp_ln58_reg_1545 = ap_const_lv1_1)))) then
                    trunc_ln68_1_reg_1640(4 downto 3) <= trunc_ln68_1_fu_1145_p1(4 downto 3);
                trunc_ln68_2_reg_1645 <= trunc_ln68_2_fu_1150_p1;
                trunc_ln68_reg_1634 <= trunc_ln68_fu_1141_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                xor_ln68_reg_1665 <= xor_ln68_fu_1269_p2;
            end if;
        end if;
    end process;
    trunc_ln68_1_reg_1640(2 downto 0) <= "000";
    ad_addr_0_lcssa_idx_reg_232(2 downto 0) <= "000";
    m_addr_0_lcssa_idx_reg_358(2 downto 0) <= "000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state4, ap_CS_fsm_state16, ap_CS_fsm_state6, ap_CS_fsm_state17, ap_CS_fsm_state8, ap_CS_fsm_state14, icmp_ln25_fu_1164_p2, ap_CS_fsm_state2, icmp_ln38_fu_797_p2, icmp_ln40_reg_1424, ap_CS_fsm_state7, icmp_ln40_1_fu_882_p2, ap_CS_fsm_state10, icmp_ln58_reg_1545, ap_CS_fsm_state12, icmp_ln58_1_fu_1100_p2, ap_CS_fsm_state13, grp_LOADBYTES_2_fu_526_ap_done, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_done, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_done, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_done, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_block_state2_on_subcall_done, ap_block_state4_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln38_fu_797_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and ((icmp_ln40_1_fu_882_p2 = ap_const_lv1_1) or (icmp_ln40_reg_1424 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_LOADBYTES_2_fu_526_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_LOADBYTES_2_fu_526_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and ((icmp_ln58_1_fu_1100_p2 = ap_const_lv1_1) or (icmp_ln58_reg_1545 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (grp_LOADBYTES_2_fu_526_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln25_fu_1164_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state16 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_LOADBYTES_2_fu_526_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state17) and (grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state19) and (grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state21) and (grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ad_address0 <= grp_LOADBYTES_2_fu_526_ad_address0;

    ad_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state10, grp_LOADBYTES_2_fu_526_ad_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            ad_ce0 <= grp_LOADBYTES_2_fu_526_ad_ce0;
        else 
            ad_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln25_1_fu_1170_p2 <= std_logic_vector(unsigned(i_reg_370) + unsigned(ap_const_lv4_1));
    add_ln25_4_fu_1334_p2 <= std_logic_vector(unsigned(trunc_ln68_reg_1634) + unsigned(m_addr_0_lcssa_idx_reg_358));
    add_ln25_fu_1212_p2 <= std_logic_vector(unsigned(zext_ln25_fu_1160_p1) + unsigned(trunc_ln58_2_fu_1208_p1));
    add_ln44_fu_896_p2 <= std_logic_vector(unsigned(ad_assign_fu_144) + unsigned(ap_const_lv64_8));
    add_ln45_fu_902_p2 <= std_logic_vector(unsigned(adlen_assign_fu_148) + unsigned(ap_const_lv64_FFFFFFFFFFFFFFF8));
    add_ln64_fu_1223_p2 <= std_logic_vector(unsigned(m_assign_fu_172) + unsigned(ap_const_lv64_8));
    add_ln65_fu_1229_p2 <= std_logic_vector(unsigned(mlen_assign_fu_176) + unsigned(ap_const_lv64_FFFFFFFFFFFFFFF8));
    and_ln1_fu_1120_p3 <= (tmp_6_fu_1111_p4 & ap_const_lv3_0);
    and_ln40_1_fu_939_p3 <= (ap_const_lv58_0 & trunc_ln40_fu_936_p1);
    and_ln58_1_fu_1132_p3 <= (ap_const_lv58_0 & trunc_ln58_fu_1129_p1);
    and_ln_fu_927_p3 <= (tmp_4_fu_918_p4 & ap_const_lv3_0);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(grp_LOADBYTES_2_fu_526_ap_done)
    begin
        if ((grp_LOADBYTES_2_fu_526_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;

    ap_ST_fsm_state13_blk_assign_proc : process(grp_LOADBYTES_2_fu_526_ap_done)
    begin
        if ((grp_LOADBYTES_2_fu_526_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;

    ap_ST_fsm_state16_blk_assign_proc : process(grp_LOADBYTES_2_fu_526_ap_done)
    begin
        if ((grp_LOADBYTES_2_fu_526_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state16_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state16_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state17_blk_assign_proc : process(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_done)
    begin
        if ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state17_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state17_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state18_blk <= ap_const_logic_0;

    ap_ST_fsm_state19_blk_assign_proc : process(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_done)
    begin
        if ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state19_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state19_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;

    ap_ST_fsm_state21_blk_assign_proc : process(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_done)
    begin
        if ((grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state21_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state21_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state2_on_subcall_done)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(ap_block_state4_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state4_on_subcall_done)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(grp_LOADBYTES_2_fu_526_ap_done)
    begin
        if ((grp_LOADBYTES_2_fu_526_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state2_on_subcall_done_assign_proc : process(grp_LOADBYTES_1_fu_430_ap_done, grp_LOADBYTES_1_fu_438_ap_done)
    begin
                ap_block_state2_on_subcall_done <= ((grp_LOADBYTES_1_fu_438_ap_done = ap_const_logic_0) or (grp_LOADBYTES_1_fu_430_ap_done = ap_const_logic_0));
    end process;


    ap_block_state4_on_subcall_done_assign_proc : process(grp_LOADBYTES_1_fu_430_ap_done, grp_LOADBYTES_1_fu_438_ap_done)
    begin
                ap_block_state4_on_subcall_done <= ((grp_LOADBYTES_1_fu_438_ap_done = ap_const_logic_0) or (grp_LOADBYTES_1_fu_430_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_done, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) and (grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_done = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_local_block <= ap_const_logic_0;
    ap_local_deadlock <= ap_const_logic_0;

    ap_phi_mux_adlen_addr_0_lcssa_phi_fu_247_p4_assign_proc : process(icmp_ln40_reg_1424, ap_CS_fsm_state7, icmp_ln40_1_fu_882_p2, and_ln40_1_fu_939_p3, adlen_addr_0_lcssa_reg_244)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln40_1_fu_882_p2 = ap_const_lv1_1) and (icmp_ln40_reg_1424 = ap_const_lv1_0))) then 
            ap_phi_mux_adlen_addr_0_lcssa_phi_fu_247_p4 <= and_ln40_1_fu_939_p3;
        else 
            ap_phi_mux_adlen_addr_0_lcssa_phi_fu_247_p4 <= adlen_addr_0_lcssa_reg_244;
        end if; 
    end process;


    ap_phi_mux_m_addr_0_lcssa_idx_phi_fu_362_p4_assign_proc : process(icmp_ln58_reg_1545, ap_CS_fsm_state12, icmp_ln58_1_fu_1100_p2, and_ln1_fu_1120_p3, m_addr_0_lcssa_idx_reg_358)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln58_1_fu_1100_p2 = ap_const_lv1_1) and (icmp_ln58_reg_1545 = ap_const_lv1_0))) then 
            ap_phi_mux_m_addr_0_lcssa_idx_phi_fu_362_p4 <= and_ln1_fu_1120_p3;
        else 
            ap_phi_mux_m_addr_0_lcssa_idx_phi_fu_362_p4 <= m_addr_0_lcssa_idx_reg_358;
        end if; 
    end process;


    ap_phi_mux_mlen_addr_0_lcssa_phi_fu_351_p4_assign_proc : process(icmp_ln58_reg_1545, ap_CS_fsm_state12, icmp_ln58_1_fu_1100_p2, and_ln58_1_fu_1132_p3, mlen_addr_0_lcssa_reg_348)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln58_1_fu_1100_p2 = ap_const_lv1_1) and (icmp_ln58_reg_1545 = ap_const_lv1_0))) then 
            ap_phi_mux_mlen_addr_0_lcssa_phi_fu_351_p4 <= and_ln58_1_fu_1132_p3;
        else 
            ap_phi_mux_mlen_addr_0_lcssa_phi_fu_351_p4 <= mlen_addr_0_lcssa_reg_348;
        end if; 
    end process;


    ap_phi_mux_s_0_2_22_phi_fu_341_p4_assign_proc : process(icmp_ln38_reg_1420, ap_CS_fsm_state11, grp_ROUND_fu_487_ap_return_0, s_0_2_22_reg_338)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln38_reg_1420 = ap_const_lv1_0))) then 
            ap_phi_mux_s_0_2_22_phi_fu_341_p4 <= grp_ROUND_fu_487_ap_return_0;
        else 
            ap_phi_mux_s_0_2_22_phi_fu_341_p4 <= s_0_2_22_reg_338;
        end if; 
    end process;


    ap_phi_mux_s_1_2_21_phi_fu_331_p4_assign_proc : process(icmp_ln38_reg_1420, ap_CS_fsm_state11, grp_ROUND_fu_487_ap_return_1, s_1_2_21_reg_328)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln38_reg_1420 = ap_const_lv1_0))) then 
            ap_phi_mux_s_1_2_21_phi_fu_331_p4 <= grp_ROUND_fu_487_ap_return_1;
        else 
            ap_phi_mux_s_1_2_21_phi_fu_331_p4 <= s_1_2_21_reg_328;
        end if; 
    end process;


    ap_phi_mux_s_2_2_20_phi_fu_321_p4_assign_proc : process(icmp_ln38_reg_1420, ap_CS_fsm_state11, grp_ROUND_fu_487_ap_return_2, s_2_2_20_reg_318)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln38_reg_1420 = ap_const_lv1_0))) then 
            ap_phi_mux_s_2_2_20_phi_fu_321_p4 <= grp_ROUND_fu_487_ap_return_2;
        else 
            ap_phi_mux_s_2_2_20_phi_fu_321_p4 <= s_2_2_20_reg_318;
        end if; 
    end process;


    ap_phi_mux_s_3_2_19_phi_fu_311_p4_assign_proc : process(icmp_ln38_reg_1420, ap_CS_fsm_state11, grp_ROUND_fu_487_ap_return_3, s_3_2_19_reg_308)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln38_reg_1420 = ap_const_lv1_0))) then 
            ap_phi_mux_s_3_2_19_phi_fu_311_p4 <= grp_ROUND_fu_487_ap_return_3;
        else 
            ap_phi_mux_s_3_2_19_phi_fu_311_p4 <= s_3_2_19_reg_308;
        end if; 
    end process;


    ap_phi_mux_s_4_2_18_phi_fu_302_p4_assign_proc : process(icmp_ln38_reg_1420, ap_CS_fsm_state11, grp_ROUND_fu_487_ap_return_4, s_4_2_18_reg_299)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln38_reg_1420 = ap_const_lv1_0))) then 
            ap_phi_mux_s_4_2_18_phi_fu_302_p4 <= grp_ROUND_fu_487_ap_return_4;
        else 
            ap_phi_mux_s_4_2_18_phi_fu_302_p4 <= s_4_2_18_reg_299;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_done, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) and (grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_done = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= ap_const_lv32_0;

    c_address0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state14, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_c_address0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_c_address0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_c_address0, ap_CS_fsm_state19, ap_CS_fsm_state21, zext_ln25_3_fu_1218_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            c_address0 <= zext_ln25_3_fu_1218_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            c_address0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_c_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            c_address0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_c_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            c_address0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_c_address0;
        else 
            c_address0 <= "XXXXXX";
        end if; 
    end process;


    c_ce0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state14, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_c_ce0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_c_ce0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_c_ce0, ap_CS_fsm_state19, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            c_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            c_ce0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_c_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            c_ce0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_c_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            c_ce0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_c_ce0;
        else 
            c_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    c_d0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state14, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_c_d0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_c_d0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_c_d0, ap_CS_fsm_state19, ap_CS_fsm_state21, trunc_ln25_3_fu_1203_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            c_d0 <= trunc_ln25_3_fu_1203_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            c_d0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_c_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            c_d0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_c_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            c_d0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_c_d0;
        else 
            c_d0 <= "XXXXXXXX";
        end if; 
    end process;


    c_we0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state14, icmp_ln25_fu_1164_p2, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_c_we0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_c_we0, grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_c_we0, ap_CS_fsm_state19, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln25_fu_1164_p2 = ap_const_lv1_0))) then 
            c_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            c_we0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_c_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            c_we0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_c_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            c_we0 <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_c_we0;
        else 
            c_we0 <= ap_const_logic_0;
        end if; 
    end process;

    clen <= std_logic_vector(unsigned(mlen) + unsigned(ap_const_lv64_10));

    clen_ap_vld_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            clen_ap_vld <= ap_const_logic_1;
        else 
            clen_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    empty_12_fu_768_p1 <= mlen(61 - 1 downto 0);
    empty_fu_764_p1 <= adlen(61 - 1 downto 0);
    grp_LOADBYTES_1_fu_430_ap_start <= grp_LOADBYTES_1_fu_430_ap_start_reg;

    grp_LOADBYTES_1_fu_430_bytes_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_LOADBYTES_1_fu_430_bytes <= ap_const_lv4_8;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_LOADBYTES_1_fu_430_bytes <= ap_const_lv4_0;
        else 
            grp_LOADBYTES_1_fu_430_bytes <= "XXXX";
        end if; 
    end process;

    grp_LOADBYTES_1_fu_438_ap_start <= grp_LOADBYTES_1_fu_438_ap_start_reg;

    grp_LOADBYTES_1_fu_438_bytes_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_LOADBYTES_1_fu_438_bytes <= ap_const_lv4_8;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_LOADBYTES_1_fu_438_bytes <= ap_const_lv4_0;
        else 
            grp_LOADBYTES_1_fu_438_bytes <= "XXXX";
        end if; 
    end process;


    grp_LOADBYTES_2_fu_526_ad_q0_assign_proc : process(m_q0, ad_q0, ap_CS_fsm_state16, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_LOADBYTES_2_fu_526_ad_q0 <= m_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            grp_LOADBYTES_2_fu_526_ad_q0 <= ad_q0;
        else 
            grp_LOADBYTES_2_fu_526_ad_q0 <= "XXXXXXXX";
        end if; 
    end process;

    grp_LOADBYTES_2_fu_526_ap_start <= grp_LOADBYTES_2_fu_526_ap_start_reg;

    grp_LOADBYTES_2_fu_526_bytes_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state8, trunc_ln40_1_reg_1505, ap_CS_fsm_state10, trunc_ln58_1_reg_1629, trunc_ln68_1_reg_1640, ap_CS_fsm_state13, ad_addr_0_lcssa_idx_reg_232)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_LOADBYTES_2_fu_526_bytes <= trunc_ln68_1_reg_1640;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_LOADBYTES_2_fu_526_bytes <= trunc_ln58_1_reg_1629;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_LOADBYTES_2_fu_526_bytes <= ad_addr_0_lcssa_idx_reg_232;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_LOADBYTES_2_fu_526_bytes <= trunc_ln40_1_reg_1505;
        else 
            grp_LOADBYTES_2_fu_526_bytes <= "XXXXX";
        end if; 
    end process;


    grp_LOADBYTES_2_fu_526_n_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state8, trunc_ln48_reg_1510, ap_CS_fsm_state10, trunc_ln68_2_reg_1645, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_LOADBYTES_2_fu_526_n <= trunc_ln68_2_reg_1645;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_LOADBYTES_2_fu_526_n <= trunc_ln48_reg_1510;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            grp_LOADBYTES_2_fu_526_n <= ap_const_lv32_8;
        else 
            grp_LOADBYTES_2_fu_526_n <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ROUND_fu_448_C_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state16, ap_CS_fsm_state6, ap_CS_fsm_state17, ap_CS_fsm_state8, ap_CS_fsm_state14, icmp_ln25_fu_1164_p2, ap_CS_fsm_state5, icmp_ln38_reg_1420, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state18, ap_CS_fsm_state9, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln38_reg_1420 = ap_const_lv1_0)))) then 
            grp_ROUND_fu_448_C <= ap_const_lv8_78;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln25_fu_1164_p2 = ap_const_lv1_1)))) then 
            grp_ROUND_fu_448_C <= ap_const_lv8_96;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_ROUND_fu_448_C <= ap_const_lv8_87;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_ROUND_fu_448_C <= ap_const_lv8_C3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_ROUND_fu_448_C <= ap_const_lv8_F0;
        else 
            grp_ROUND_fu_448_C <= "XXXXXXXX";
        end if; 
    end process;


    grp_ROUND_fu_448_s_0_read_assign_proc : process(reg_693, ap_CS_fsm_state4, ap_CS_fsm_state16, reg_718, ap_CS_fsm_state6, ap_CS_fsm_state17, reg_739, ap_CS_fsm_state8, ap_CS_fsm_state14, icmp_ln25_fu_1164_p2, s_0_6_reg_1359, ap_CS_fsm_state5, icmp_ln38_reg_1420, s_0_55_reg_1515, ap_CS_fsm_state10, ap_CS_fsm_state11, s_0_61_reg_1651, ap_CS_fsm_state18, s_0_46_fu_953_p2, ap_CS_fsm_state9, s_0_53_fu_1010_p2, ap_CS_fsm_state15, s_0_62_fu_1296_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_ROUND_fu_448_s_0_read <= reg_718;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_ROUND_fu_448_s_0_read <= s_0_62_fu_1296_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln25_fu_1164_p2 = ap_const_lv1_1))) then 
            grp_ROUND_fu_448_s_0_read <= s_0_61_reg_1651;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln38_reg_1420 = ap_const_lv1_0))) then 
            grp_ROUND_fu_448_s_0_read <= s_0_55_reg_1515;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_ROUND_fu_448_s_0_read <= s_0_53_fu_1010_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_ROUND_fu_448_s_0_read <= reg_739;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_ROUND_fu_448_s_0_read <= s_0_46_fu_953_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_ROUND_fu_448_s_0_read <= s_0_6_reg_1359;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_ROUND_fu_448_s_0_read <= reg_693;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_ROUND_fu_448_s_0_read <= ap_const_lv64_80400C0600000000;
        else 
            grp_ROUND_fu_448_s_0_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ROUND_fu_448_s_1_read_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state16, reg_698, ap_CS_fsm_state6, ap_CS_fsm_state17, reg_725, ap_CS_fsm_state8, ap_CS_fsm_state14, icmp_ln25_fu_1164_p2, reg_744, K0_reg_1339, ap_CS_fsm_state5, s_1_7_reg_1364, icmp_ln38_reg_1420, ap_CS_fsm_state10, s_1_51_reg_1520, ap_CS_fsm_state11, ap_CS_fsm_state18, s_1_1_16_reg_281, ap_CS_fsm_state9, ap_CS_fsm_state15, s_1_57_fu_1303_p2, s_1_43_fu_156, s_1_56_fu_184)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_ROUND_fu_448_s_1_read <= reg_725;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_ROUND_fu_448_s_1_read <= s_1_57_fu_1303_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln25_fu_1164_p2 = ap_const_lv1_1))) then 
            grp_ROUND_fu_448_s_1_read <= s_1_56_fu_184;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln38_reg_1420 = ap_const_lv1_0))) then 
            grp_ROUND_fu_448_s_1_read <= s_1_51_reg_1520;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_ROUND_fu_448_s_1_read <= s_1_1_16_reg_281;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_ROUND_fu_448_s_1_read <= reg_744;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_ROUND_fu_448_s_1_read <= s_1_43_fu_156;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_ROUND_fu_448_s_1_read <= s_1_7_reg_1364;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_ROUND_fu_448_s_1_read <= reg_698;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_ROUND_fu_448_s_1_read <= K0_reg_1339;
        else 
            grp_ROUND_fu_448_s_1_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ROUND_fu_448_s_2_read_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state16, reg_703, ap_CS_fsm_state6, ap_CS_fsm_state17, reg_732, ap_CS_fsm_state8, ap_CS_fsm_state14, icmp_ln25_fu_1164_p2, reg_749, grp_LOADBYTES_1_fu_430_ap_return, ap_CS_fsm_state5, s_2_7_reg_1369, icmp_ln38_reg_1420, ap_CS_fsm_state10, s_2_51_reg_1525, ap_CS_fsm_state11, ap_CS_fsm_state18, s_2_1_15_reg_272, ap_CS_fsm_state9, ap_CS_fsm_state15, s_2_57_fu_1309_p2, s_2_43_fu_160, s_2_56_fu_188)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_ROUND_fu_448_s_2_read <= reg_732;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_ROUND_fu_448_s_2_read <= s_2_57_fu_1309_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln25_fu_1164_p2 = ap_const_lv1_1))) then 
            grp_ROUND_fu_448_s_2_read <= s_2_56_fu_188;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln38_reg_1420 = ap_const_lv1_0))) then 
            grp_ROUND_fu_448_s_2_read <= s_2_51_reg_1525;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_ROUND_fu_448_s_2_read <= s_2_1_15_reg_272;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_ROUND_fu_448_s_2_read <= reg_749;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_ROUND_fu_448_s_2_read <= s_2_43_fu_160;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_ROUND_fu_448_s_2_read <= s_2_7_reg_1369;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_ROUND_fu_448_s_2_read <= reg_703;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_ROUND_fu_448_s_2_read <= grp_LOADBYTES_1_fu_430_ap_return;
        else 
            grp_ROUND_fu_448_s_2_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ROUND_fu_448_s_3_read_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state16, reg_708, ap_CS_fsm_state6, ap_CS_fsm_state17, ap_CS_fsm_state8, ap_CS_fsm_state14, icmp_ln25_fu_1164_p2, reg_754, N0_reg_1347, ap_CS_fsm_state5, s_3_7_reg_1374, icmp_ln38_reg_1420, ap_CS_fsm_state10, s_3_53_reg_1530, ap_CS_fsm_state11, s_3_66_reg_1670, ap_CS_fsm_state18, s_3_1_14_reg_263, s_3_4_25_reg_390, ap_CS_fsm_state9, ap_CS_fsm_state15, s_3_45_fu_164, s_3_58_fu_192)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_ROUND_fu_448_s_3_read <= s_3_66_reg_1670;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_ROUND_fu_448_s_3_read <= s_3_4_25_reg_390;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln25_fu_1164_p2 = ap_const_lv1_1))) then 
            grp_ROUND_fu_448_s_3_read <= s_3_58_fu_192;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln38_reg_1420 = ap_const_lv1_0))) then 
            grp_ROUND_fu_448_s_3_read <= s_3_53_reg_1530;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_ROUND_fu_448_s_3_read <= s_3_1_14_reg_263;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_ROUND_fu_448_s_3_read <= reg_754;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_ROUND_fu_448_s_3_read <= s_3_45_fu_164;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_ROUND_fu_448_s_3_read <= s_3_7_reg_1374;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_ROUND_fu_448_s_3_read <= reg_708;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_ROUND_fu_448_s_3_read <= N0_reg_1347;
        else 
            grp_ROUND_fu_448_s_3_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ROUND_fu_448_s_4_read_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state16, reg_713, ap_CS_fsm_state6, ap_CS_fsm_state17, ap_CS_fsm_state8, ap_CS_fsm_state14, icmp_ln25_fu_1164_p2, reg_759, grp_LOADBYTES_1_fu_438_ap_return, ap_CS_fsm_state5, s_4_7_reg_1379, icmp_ln38_reg_1420, ap_CS_fsm_state10, s_4_54_reg_1535, ap_CS_fsm_state11, s_4_68_reg_1675, ap_CS_fsm_state18, s_4_1_13_reg_254, s_4_4_24_reg_381, ap_CS_fsm_state9, ap_CS_fsm_state15, s_4_46_fu_168, s_4_60_fu_196)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_ROUND_fu_448_s_4_read <= s_4_68_reg_1675;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_ROUND_fu_448_s_4_read <= s_4_4_24_reg_381;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln25_fu_1164_p2 = ap_const_lv1_1))) then 
            grp_ROUND_fu_448_s_4_read <= s_4_60_fu_196;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln38_reg_1420 = ap_const_lv1_0))) then 
            grp_ROUND_fu_448_s_4_read <= s_4_54_reg_1535;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_ROUND_fu_448_s_4_read <= s_4_1_13_reg_254;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_ROUND_fu_448_s_4_read <= reg_759;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_ROUND_fu_448_s_4_read <= s_4_46_fu_168;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_ROUND_fu_448_s_4_read <= s_4_7_reg_1379;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_ROUND_fu_448_s_4_read <= reg_713;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_ROUND_fu_448_s_4_read <= grp_LOADBYTES_1_fu_438_ap_return;
        else 
            grp_ROUND_fu_448_s_4_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ROUND_fu_462_C_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state16, ap_CS_fsm_state6, ap_CS_fsm_state17, ap_CS_fsm_state5, icmp_ln38_reg_1420, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state18, ap_CS_fsm_state9, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln38_reg_1420 = ap_const_lv1_0)))) then 
            grp_ROUND_fu_462_C <= ap_const_lv8_69;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_ROUND_fu_462_C <= ap_const_lv8_87;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_ROUND_fu_462_C <= ap_const_lv8_78;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_ROUND_fu_462_C <= ap_const_lv8_B4;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_ROUND_fu_462_C <= ap_const_lv8_E1;
        else 
            grp_ROUND_fu_462_C <= "XXXXXXXX";
        end if; 
    end process;


    grp_ROUND_fu_473_C_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state16, ap_CS_fsm_state6, ap_CS_fsm_state17, ap_CS_fsm_state5, icmp_ln38_reg_1420, ap_CS_fsm_state11, ap_CS_fsm_state18, ap_CS_fsm_state9, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln38_reg_1420 = ap_const_lv1_0)))) then 
            grp_ROUND_fu_473_C <= ap_const_lv8_5A;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_ROUND_fu_473_C <= ap_const_lv8_69;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_ROUND_fu_473_C <= ap_const_lv8_A5;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_ROUND_fu_473_C <= ap_const_lv8_D2;
        else 
            grp_ROUND_fu_473_C <= "XXXXXXXX";
        end if; 
    end process;


    grp_ROUND_fu_487_C_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state17, ap_CS_fsm_state5, icmp_ln38_reg_1420, ap_CS_fsm_state11, ap_CS_fsm_state18, ap_CS_fsm_state9, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln38_reg_1420 = ap_const_lv1_0)))) then 
            grp_ROUND_fu_487_C <= ap_const_lv8_4B;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_ROUND_fu_487_C <= ap_const_lv8_5A;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_ROUND_fu_487_C <= ap_const_lv8_96;
        else 
            grp_ROUND_fu_487_C <= "XXXXXXXX";
        end if; 
    end process;


    grp_ROUND_fu_502_C_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state17, ap_CS_fsm_state9, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_ROUND_fu_502_C <= ap_const_lv8_87;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_ROUND_fu_502_C <= ap_const_lv8_4B;
        else 
            grp_ROUND_fu_502_C <= "XXXXXXXX";
        end if; 
    end process;

    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_start <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_11_fu_547_ap_start_reg;
    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_start <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_12_fu_557_ap_start_reg;
    grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_start <= grp_crypto_aead_encrypt_Pipeline_VITIS_LOOP_25_1_fu_537_ap_start_reg;
    icmp_ln25_fu_1164_p2 <= "1" when (i_reg_370 = ap_const_lv4_8) else "0";
    icmp_ln38_fu_797_p2 <= "1" when (adlen = ap_const_lv64_0) else "0";
    icmp_ln40_1_fu_882_p2 <= "1" when (tmp_7_fu_872_p4 = ap_const_lv61_0) else "0";
    icmp_ln40_fu_813_p2 <= "1" when (tmp_5_fu_803_p4 = ap_const_lv61_0) else "0";
    icmp_ln58_1_fu_1100_p2 <= "1" when (tmp_9_fu_1090_p4 = ap_const_lv61_0) else "0";
    icmp_ln58_fu_1032_p2 <= "1" when (tmp_8_fu_1023_p4 = ap_const_lv61_0) else "0";
    k_address0 <= grp_LOADBYTES_1_fu_430_k_address0;

    k_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, grp_LOADBYTES_1_fu_430_k_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            k_ce0 <= grp_LOADBYTES_1_fu_430_k_ce0;
        else 
            k_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln25_fu_1198_p2 <= std_logic_vector(shift_right(unsigned(s_0_61_reg_1651),to_integer(unsigned('0' & zext_ln25_2_fu_1194_p1(31-1 downto 0)))));
    m_address0 <= grp_LOADBYTES_2_fu_526_ad_address0;

    m_ce0_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state13, grp_LOADBYTES_2_fu_526_ad_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            m_ce0 <= grp_LOADBYTES_2_fu_526_ad_ce0;
        else 
            m_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    npub_address0 <= grp_LOADBYTES_1_fu_438_k_address0;

    npub_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, grp_LOADBYTES_1_fu_438_k_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            npub_ce0 <= grp_LOADBYTES_1_fu_438_k_ce0;
        else 
            npub_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    s_0_46_fu_953_p2 <= (s_0_45_fu_152 xor grp_LOADBYTES_2_fu_526_ap_return);
    s_0_53_fu_1010_p2 <= (xor_ln49_fu_1004_p2 xor s_0_1_17_reg_290);
    s_0_61_fu_1155_p2 <= (s_0_60_fu_180 xor grp_LOADBYTES_2_fu_526_ap_return);
    s_0_62_fu_1296_p2 <= (xor_ln68_fu_1269_p2 xor shl_ln70_fu_1290_p2);
    s_1_57_fu_1303_p2 <= (s_1_4_27_reg_410 xor K0_reg_1339);
    s_2_57_fu_1309_p2 <= (s_2_4_26_reg_400 xor K1_reg_1352);
    s_3_14_fu_787_p2 <= (grp_ROUND_fu_502_ap_return_3 xor K0_reg_1339);
    s_3_fu_1323_p2 <= (grp_ROUND_fu_487_ap_return_3 xor K0_reg_1339);
    s_4_13_fu_792_p2 <= (grp_ROUND_fu_502_ap_return_4 xor K1_reg_1352);
    s_4_59_fu_1017_p2 <= (ap_phi_mux_s_4_2_18_phi_fu_302_p4 xor ap_const_lv64_1);
    s_4_73_fu_1329_p2 <= (grp_ROUND_fu_487_ap_return_4 xor K1_reg_1352);
    shl_ln1_fu_1180_p3 <= (trunc_ln25_fu_1176_p1 & ap_const_lv3_0);
    shl_ln2_fu_1276_p3 <= (mlen_addr_0_lcssa_reg_348 & ap_const_lv3_0);
    shl_ln49_fu_998_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv64_80),to_integer(unsigned('0' & sub_ln49_fu_992_p2(31-1 downto 0)))));
    shl_ln70_fu_1290_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv64_80),to_integer(unsigned('0' & sub_ln70_fu_1284_p2(31-1 downto 0)))));
    shl_ln_fu_984_p3 <= (adlen_addr_0_lcssa_reg_244 & ap_const_lv3_0);
    sub_ln25_fu_1188_p2 <= std_logic_vector(signed(ap_const_lv6_38) - signed(shl_ln1_fu_1180_p3));
    sub_ln49_fu_992_p2 <= std_logic_vector(unsigned(ap_const_lv64_38) - unsigned(shl_ln_fu_984_p3));
    sub_ln70_fu_1284_p2 <= std_logic_vector(unsigned(ap_const_lv64_38) - unsigned(shl_ln2_fu_1276_p3));
    tmp_4_fu_918_p4 <= adlen(4 downto 3);
    tmp_5_fu_803_p4 <= adlen(63 downto 3);
    tmp_6_fu_1111_p4 <= mlen(5 downto 3);
    tmp_7_fu_872_p4 <= adlen_assign_fu_148(63 downto 3);
    tmp_8_fu_1023_p4 <= mlen(63 downto 3);
    tmp_9_fu_1090_p4 <= mlen_assign_fu_176(63 downto 3);
    trunc_ln25_3_fu_1203_p1 <= lshr_ln25_fu_1198_p2(8 - 1 downto 0);
    trunc_ln25_fu_1176_p1 <= i_reg_370(3 - 1 downto 0);
    trunc_ln40_1_fu_891_p1 <= ad_assign_fu_144(5 - 1 downto 0);
    trunc_ln40_fu_936_p1 <= adlen(3 - 1 downto 0);
    trunc_ln48_fu_948_p1 <= ap_phi_mux_adlen_addr_0_lcssa_phi_fu_247_p4(32 - 1 downto 0);
    trunc_ln58_1_fu_1106_p1 <= m_assign_fu_172(5 - 1 downto 0);
    trunc_ln58_2_fu_1208_p1 <= m_assign_fu_172(6 - 1 downto 0);
    trunc_ln58_fu_1129_p1 <= mlen(3 - 1 downto 0);
    trunc_ln68_1_fu_1145_p1 <= ap_phi_mux_m_addr_0_lcssa_idx_phi_fu_362_p4(5 - 1 downto 0);
    trunc_ln68_2_fu_1150_p1 <= ap_phi_mux_mlen_addr_0_lcssa_phi_fu_351_p4(32 - 1 downto 0);
    trunc_ln68_fu_1141_p1 <= ap_phi_mux_mlen_addr_0_lcssa_phi_fu_351_p4(6 - 1 downto 0);
    xor_ln49_fu_1004_p2 <= (shl_ln49_fu_998_p2 xor grp_LOADBYTES_2_fu_526_ap_return);
    xor_ln68_fu_1269_p2 <= (s_0_4_28_reg_420 xor grp_LOADBYTES_2_fu_526_ap_return);
    zext_ln25_2_fu_1194_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln25_fu_1188_p2),64));
    zext_ln25_3_fu_1218_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln25_fu_1212_p2),64));
    zext_ln25_fu_1160_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_370),6));
end behav;
