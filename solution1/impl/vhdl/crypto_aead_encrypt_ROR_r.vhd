-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity crypto_aead_encrypt_ROR_r is
port (
    ap_ready : OUT STD_LOGIC;
    x : IN STD_LOGIC_VECTOR (63 downto 0);
    n : IN STD_LOGIC_VECTOR (5 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of crypto_aead_encrypt_ROR_r is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal zext_ln8_fu_22_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln8_fu_32_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln8_1_fu_38_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln8_fu_42_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln8_fu_26_p2 : STD_LOGIC_VECTOR (63 downto 0);


begin



    ap_ready <= ap_const_logic_1;
    ap_return <= (shl_ln8_fu_42_p2 or lshr_ln8_fu_26_p2);
    lshr_ln8_fu_26_p2 <= std_logic_vector(shift_right(unsigned(x),to_integer(unsigned('0' & zext_ln8_fu_22_p1(31-1 downto 0)))));
    shl_ln8_fu_42_p2 <= std_logic_vector(shift_left(unsigned(x),to_integer(unsigned('0' & zext_ln8_1_fu_38_p1(31-1 downto 0)))));
    sub_ln8_fu_32_p2 <= std_logic_vector(unsigned(ap_const_lv6_0) - unsigned(n));
    zext_ln8_1_fu_38_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln8_fu_32_p2),64));
    zext_ln8_fu_22_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n),64));
end behav;
