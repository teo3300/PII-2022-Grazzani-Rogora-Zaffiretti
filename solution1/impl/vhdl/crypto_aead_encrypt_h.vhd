-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity crypto_aead_encrypt_h is
port (
    ap_local_block : OUT STD_LOGIC;
    ap_local_deadlock : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    c : IN STD_LOGIC_VECTOR (7 downto 0);
    clen : OUT STD_LOGIC_VECTOR (63 downto 0);
    clen_ap_vld : OUT STD_LOGIC;
    m : IN STD_LOGIC_VECTOR (7 downto 0);
    mlen : IN STD_LOGIC_VECTOR (63 downto 0);
    ad : IN STD_LOGIC_VECTOR (7 downto 0);
    adlen : IN STD_LOGIC_VECTOR (63 downto 0);
    nsec : IN STD_LOGIC_VECTOR (7 downto 0);
    npub : IN STD_LOGIC_VECTOR (7 downto 0);
    k : IN STD_LOGIC_VECTOR (7 downto 0);
    st_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    st_ce0 : OUT STD_LOGIC;
    st_we0 : OUT STD_LOGIC;
    st_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of crypto_aead_encrypt_h is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "crypto_aead_encrypt_h_crypto_aead_encrypt_h,hls_ip_2021_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbv484-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.858400,HLS_SYN_LAT=22,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=464,HLS_SYN_LUT=1521,HLS_VERSION=2021_2}";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv64_80400C0600000000 : STD_LOGIC_VECTOR (63 downto 0) := "1000000001000000000011000000011000000000000000000000000000000000";
    constant ap_const_lv64_10 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal s_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal s_ce0 : STD_LOGIC;
    signal s_we0 : STD_LOGIC;
    signal s_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal s_ce1 : STD_LOGIC;
    signal s_we1 : STD_LOGIC;
    signal s_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_1_fu_163_ap_start : STD_LOGIC;
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_1_fu_163_ap_done : STD_LOGIC;
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_1_fu_163_ap_idle : STD_LOGIC;
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_1_fu_163_ap_ready : STD_LOGIC;
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_1_fu_163_x_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_1_fu_163_x_out_ap_vld : STD_LOGIC;
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_12_fu_170_ap_start : STD_LOGIC;
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_12_fu_170_ap_done : STD_LOGIC;
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_12_fu_170_ap_idle : STD_LOGIC;
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_12_fu_170_ap_ready : STD_LOGIC;
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_12_fu_170_x_2_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_12_fu_170_x_2_out_ap_vld : STD_LOGIC;
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_13_fu_177_ap_start : STD_LOGIC;
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_13_fu_177_ap_done : STD_LOGIC;
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_13_fu_177_ap_idle : STD_LOGIC;
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_13_fu_177_ap_ready : STD_LOGIC;
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_13_fu_177_x_4_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_13_fu_177_x_4_out_ap_vld : STD_LOGIC;
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_14_fu_184_ap_start : STD_LOGIC;
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_14_fu_184_ap_done : STD_LOGIC;
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_14_fu_184_ap_idle : STD_LOGIC;
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_14_fu_184_ap_ready : STD_LOGIC;
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_14_fu_184_x_6_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_14_fu_184_x_6_out_ap_vld : STD_LOGIC;
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_ap_start : STD_LOGIC;
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_ap_done : STD_LOGIC;
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_ap_idle : STD_LOGIC;
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_ap_ready : STD_LOGIC;
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_s_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_s_ce0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_st_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_st_ce0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_st_we0 : STD_LOGIC;
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_st_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_1_fu_163_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_12_fu_170_ap_start_reg : STD_LOGIC := '0';
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_13_fu_177_ap_start_reg : STD_LOGIC := '0';
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_14_fu_184_ap_start_reg : STD_LOGIC := '0';
    signal grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component crypto_aead_encrypt_h_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        zext_ln21 : IN STD_LOGIC_VECTOR (7 downto 0);
        x_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        x_out_ap_vld : OUT STD_LOGIC );
    end component;


    component crypto_aead_encrypt_h_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_12 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        zext_ln21 : IN STD_LOGIC_VECTOR (7 downto 0);
        x_2_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        x_2_out_ap_vld : OUT STD_LOGIC );
    end component;


    component crypto_aead_encrypt_h_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_13 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        zext_ln21_1 : IN STD_LOGIC_VECTOR (7 downto 0);
        x_4_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        x_4_out_ap_vld : OUT STD_LOGIC );
    end component;


    component crypto_aead_encrypt_h_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_14 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        zext_ln21_1 : IN STD_LOGIC_VECTOR (7 downto 0);
        x_6_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        x_6_out_ap_vld : OUT STD_LOGIC );
    end component;


    component crypto_aead_encrypt_h_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        s_ce0 : OUT STD_LOGIC;
        s_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        st_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        st_ce0 : OUT STD_LOGIC;
        st_we0 : OUT STD_LOGIC;
        st_d0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component crypto_aead_encrypt_h_s_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    s_U : component crypto_aead_encrypt_h_s_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => s_address0,
        ce0 => s_ce0,
        we0 => s_we0,
        d0 => s_d0,
        q0 => s_q0,
        address1 => s_address1,
        ce1 => s_ce1,
        we1 => s_we1,
        d1 => s_d1);

    grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_1_fu_163 : component crypto_aead_encrypt_h_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_1_fu_163_ap_start,
        ap_done => grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_1_fu_163_ap_done,
        ap_idle => grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_1_fu_163_ap_idle,
        ap_ready => grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_1_fu_163_ap_ready,
        zext_ln21 => k,
        x_out => grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_1_fu_163_x_out,
        x_out_ap_vld => grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_1_fu_163_x_out_ap_vld);

    grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_12_fu_170 : component crypto_aead_encrypt_h_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_12
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_12_fu_170_ap_start,
        ap_done => grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_12_fu_170_ap_done,
        ap_idle => grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_12_fu_170_ap_idle,
        ap_ready => grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_12_fu_170_ap_ready,
        zext_ln21 => k,
        x_2_out => grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_12_fu_170_x_2_out,
        x_2_out_ap_vld => grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_12_fu_170_x_2_out_ap_vld);

    grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_13_fu_177 : component crypto_aead_encrypt_h_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_13
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_13_fu_177_ap_start,
        ap_done => grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_13_fu_177_ap_done,
        ap_idle => grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_13_fu_177_ap_idle,
        ap_ready => grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_13_fu_177_ap_ready,
        zext_ln21_1 => npub,
        x_4_out => grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_13_fu_177_x_4_out,
        x_4_out_ap_vld => grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_13_fu_177_x_4_out_ap_vld);

    grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_14_fu_184 : component crypto_aead_encrypt_h_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_14
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_14_fu_184_ap_start,
        ap_done => grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_14_fu_184_ap_done,
        ap_idle => grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_14_fu_184_ap_idle,
        ap_ready => grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_14_fu_184_ap_ready,
        zext_ln21_1 => npub,
        x_6_out => grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_14_fu_184_x_6_out,
        x_6_out_ap_vld => grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_14_fu_184_x_6_out_ap_vld);

    grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191 : component crypto_aead_encrypt_h_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_ap_start,
        ap_done => grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_ap_done,
        ap_idle => grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_ap_idle,
        ap_ready => grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_ap_ready,
        s_address0 => grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_s_address0,
        s_ce0 => grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_s_ce0,
        s_q0 => s_q0,
        st_address0 => grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_st_address0,
        st_ce0 => grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_st_ce0,
        st_we0 => grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_st_we0,
        st_d0 => grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_st_d0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_ap_ready = ap_const_logic_1)) then 
                    grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_12_fu_170_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_12_fu_170_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_12_fu_170_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_12_fu_170_ap_ready = ap_const_logic_1)) then 
                    grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_12_fu_170_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_13_fu_177_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_13_fu_177_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_13_fu_177_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_13_fu_177_ap_ready = ap_const_logic_1)) then 
                    grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_13_fu_177_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_14_fu_184_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_14_fu_184_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_14_fu_184_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_14_fu_184_ap_ready = ap_const_logic_1)) then 
                    grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_14_fu_184_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_1_fu_163_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_1_fu_163_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_1_fu_163_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_1_fu_163_ap_ready = ap_const_logic_1)) then 
                    grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_1_fu_163_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_block_state2_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state2_on_subcall_done)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_ap_done)
    begin
        if ((grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state2_on_subcall_done_assign_proc : process(grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_1_fu_163_ap_done, grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_12_fu_170_ap_done, grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_13_fu_177_ap_done, grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_14_fu_184_ap_done)
    begin
                ap_block_state2_on_subcall_done <= ((grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_14_fu_184_ap_done = ap_const_logic_0) or (grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_13_fu_177_ap_done = ap_const_logic_0) or (grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_12_fu_170_ap_done = ap_const_logic_0) or (grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_1_fu_163_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_ap_done, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_ap_done = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_local_block <= ap_const_logic_0;
    ap_local_deadlock <= ap_const_logic_0;

    ap_ready_assign_proc : process(grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_ap_done, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_ap_done = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= ap_const_lv32_0;
    clen <= std_logic_vector(unsigned(mlen) + unsigned(ap_const_lv64_10));

    clen_ap_vld_assign_proc : process(grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_ap_done, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_ap_done = ap_const_logic_1))) then 
            clen_ap_vld <= ap_const_logic_1;
        else 
            clen_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_ap_start <= grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_ap_start_reg;
    grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_12_fu_170_ap_start <= grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_12_fu_170_ap_start_reg;
    grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_13_fu_177_ap_start <= grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_13_fu_177_ap_start_reg;
    grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_14_fu_184_ap_start <= grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_14_fu_184_ap_start_reg;
    grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_1_fu_163_ap_start <= grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_1_fu_163_ap_start_reg;

    s_address0_assign_proc : process(grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_s_address0, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            s_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            s_address0 <= grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_s_address0;
        else 
            s_address0 <= "XXX";
        end if; 
    end process;


    s_address1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_address1 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            s_address1 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            s_address1 <= "XXX";
        end if; 
    end process;


    s_ce0_assign_proc : process(grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_s_ce0, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done)))) then 
            s_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            s_ce0 <= grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_s_ce0;
        else 
            s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    s_ce1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            s_ce1 <= ap_const_logic_1;
        else 
            s_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    s_d0_assign_proc : process(grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_12_fu_170_x_2_out, grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_13_fu_177_x_4_out, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_d0 <= grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_13_fu_177_x_4_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            s_d0 <= grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_12_fu_170_x_2_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_d0 <= ap_const_lv64_80400C0600000000;
        else 
            s_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    s_d1_assign_proc : process(grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_1_fu_163_x_out, grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_14_fu_184_x_6_out, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_d1 <= grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_14_fu_184_x_6_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            s_d1 <= grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_21_1_fu_163_x_out;
        else 
            s_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    s_we0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done)))) then 
            s_we0 <= ap_const_logic_1;
        else 
            s_we0 <= ap_const_logic_0;
        end if; 
    end process;


    s_we1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            s_we1 <= ap_const_logic_1;
        else 
            s_we1 <= ap_const_logic_0;
        end if; 
    end process;

    st_address0 <= grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_st_address0;
    st_ce0 <= grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_st_ce0;
    st_d0 <= grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_st_d0;
    st_we0 <= grp_crypto_aead_encrypt_h_Pipeline_VITIS_LOOP_13_1_fu_191_st_we0;
end behav;
