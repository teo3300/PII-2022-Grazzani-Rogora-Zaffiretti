-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity crypto_aead_decrypt_h_crypto_aead_decrypt_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    m_ce0 : OUT STD_LOGIC;
    m_we0 : OUT STD_LOGIC;
    m_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    mlen : OUT STD_LOGIC_VECTOR (63 downto 0);
    mlen_ap_vld : OUT STD_LOGIC;
    c_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    c_ce0 : OUT STD_LOGIC;
    c_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    clen : IN STD_LOGIC_VECTOR (63 downto 0);
    ad_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    ad_ce0 : OUT STD_LOGIC;
    ad_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    adlen : IN STD_LOGIC_VECTOR (63 downto 0);
    npub_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    npub_ce0 : OUT STD_LOGIC;
    npub_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    k_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    k_ce0 : OUT STD_LOGIC;
    k_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of crypto_aead_decrypt_h_crypto_aead_decrypt_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (41 downto 0) := "000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (41 downto 0) := "000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (41 downto 0) := "000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (41 downto 0) := "000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (41 downto 0) := "000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (41 downto 0) := "000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (41 downto 0) := "000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (41 downto 0) := "000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (41 downto 0) := "000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (41 downto 0) := "001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (41 downto 0) := "010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (41 downto 0) := "100000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv64_80400C0600000000 : STD_LOGIC_VECTOR (63 downto 0) := "1000000001000000000011000000011000000000000000000000000000000000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv8_F0 : STD_LOGIC_VECTOR (7 downto 0) := "11110000";
    constant ap_const_lv8_E1 : STD_LOGIC_VECTOR (7 downto 0) := "11100001";
    constant ap_const_lv8_C3 : STD_LOGIC_VECTOR (7 downto 0) := "11000011";
    constant ap_const_lv8_A5 : STD_LOGIC_VECTOR (7 downto 0) := "10100101";
    constant ap_const_lv8_87 : STD_LOGIC_VECTOR (7 downto 0) := "10000111";
    constant ap_const_lv8_69 : STD_LOGIC_VECTOR (7 downto 0) := "01101001";
    constant ap_const_lv8_4B : STD_LOGIC_VECTOR (7 downto 0) := "01001011";
    constant ap_const_lv8_96 : STD_LOGIC_VECTOR (7 downto 0) := "10010110";
    constant ap_const_lv8_78 : STD_LOGIC_VECTOR (7 downto 0) := "01111000";
    constant ap_const_lv8_5A : STD_LOGIC_VECTOR (7 downto 0) := "01011010";
    constant ap_const_lv8_D2 : STD_LOGIC_VECTOR (7 downto 0) := "11010010";
    constant ap_const_lv8_B4 : STD_LOGIC_VECTOR (7 downto 0) := "10110100";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv60_0 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv61_1FFFFFFFFFFFFFF0 : STD_LOGIC_VECTOR (60 downto 0) := "1111111111111111111111111111111111111111111111111111111110000";
    constant ap_const_lv64_FFFFFFFFFFFFFFF0 : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111110000";
    constant ap_const_lv61_0 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_FFFFFFFFFFFFFFF8 : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv58_0 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_38 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111000";
    constant ap_const_lv64_80 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000";
    constant ap_const_lv6_30 : STD_LOGIC_VECTOR (5 downto 0) := "110000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv6_38 : STD_LOGIC_VECTOR (5 downto 0) := "111000";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_boolean_0 : BOOLEAN := false;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal reg_653 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal icmp_ln28_fu_1146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal reg_660 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_667 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_674 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal reg_679 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_684 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal reg_689 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_694 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_699 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_704 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_LOADBYTES_3_fu_555_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_709 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal empty_fu_714_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal empty_reg_1382 : STD_LOGIC_VECTOR (60 downto 0);
    signal icmp_ln178_fu_732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln178_reg_1387 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln181_1_fu_738_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal add_ln181_1_reg_1391 : STD_LOGIC_VECTOR (60 downto 0);
    signal grp_LOADBYTES_1_fu_480_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal K0_reg_1396 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_LOADBYTES_1_fu_488_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal N0_reg_1404 : STD_LOGIC_VECTOR (63 downto 0);
    signal K1_reg_1409 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln181_fu_744_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln181_reg_1416 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_14_fu_758_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_13_fu_763_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln208_fu_768_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln208_reg_1434 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln210_fu_782_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln210_reg_1438 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal trunc_ln210_1_fu_859_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln210_1_reg_1519 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln210_1_fu_850_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln221_fu_916_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln221_reg_1524 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_0_46_reg_1529 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_1_44_reg_1534 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_44_reg_1539 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_0_52_fu_978_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_0_52_reg_1544 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal s_0_58_reg_1549 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal s_1_55_reg_1554 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_55_reg_1559 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_57_reg_1564 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_58_reg_1569 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_59_fu_984_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal icmp_ln238_fu_999_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln238_reg_1579 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal trunc_ln238_2_fu_1073_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln238_2_reg_1663 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln238_1_fu_1067_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln249_fu_1118_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln249_reg_1668 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln249_1_fu_1122_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln249_1_reg_1673 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln249_2_fu_1126_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln249_2_reg_1678 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln28_1_fu_1131_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_1_reg_1683 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln240_fu_1137_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln240_reg_1687 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln28_1_fu_1152_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal xor_ln250_fu_1251_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln250_reg_1700 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln28_fu_1258_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln28_reg_1705 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln253_fu_1275_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln253_reg_1714 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal s_3_fu_1319_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_reg_1719 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal s_4_73_fu_1325_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_73_reg_1724 : STD_LOGIC_VECTOR (63 downto 0);
    signal t_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal t_ce0 : STD_LOGIC;
    signal t_we0 : STD_LOGIC;
    signal t_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_LOADBYTES_1_fu_480_ap_start : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_480_ap_done : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_480_ap_idle : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_480_ap_ready : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_480_k_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_LOADBYTES_1_fu_480_k_ce0 : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_480_bytes : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_LOADBYTES_1_fu_488_ap_start : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_488_ap_done : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_488_ap_idle : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_488_ap_ready : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_488_k_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_LOADBYTES_1_fu_488_k_ce0 : STD_LOGIC;
    signal grp_LOADBYTES_1_fu_488_bytes : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_ROUND_fu_498_ap_ready : STD_LOGIC;
    signal grp_ROUND_fu_498_s_0_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_498_s_1_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_498_s_2_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_498_s_3_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_498_s_4_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_498_C : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ROUND_fu_498_ap_return_0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_498_ap_return_1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_498_ap_return_2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_498_ap_return_3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_498_ap_return_4 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_513_ap_ready : STD_LOGIC;
    signal grp_ROUND_fu_513_C : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ROUND_fu_513_ap_return_0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_513_ap_return_1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_513_ap_return_2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_513_ap_return_3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ROUND_fu_513_ap_return_4 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_LOADBYTES_2_fu_545_ap_start : STD_LOGIC;
    signal grp_LOADBYTES_2_fu_545_ap_done : STD_LOGIC;
    signal grp_LOADBYTES_2_fu_545_ap_idle : STD_LOGIC;
    signal grp_LOADBYTES_2_fu_545_ap_ready : STD_LOGIC;
    signal grp_LOADBYTES_2_fu_545_ad_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_LOADBYTES_2_fu_545_ad_ce0 : STD_LOGIC;
    signal grp_LOADBYTES_2_fu_545_bytes : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_LOADBYTES_2_fu_545_n : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_LOADBYTES_2_fu_545_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_LOADBYTES_3_fu_555_ap_start : STD_LOGIC;
    signal grp_LOADBYTES_3_fu_555_ap_done : STD_LOGIC;
    signal grp_LOADBYTES_3_fu_555_ap_idle : STD_LOGIC;
    signal grp_LOADBYTES_3_fu_555_ap_ready : STD_LOGIC;
    signal grp_LOADBYTES_3_fu_555_c_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_LOADBYTES_3_fu_555_c_ce0 : STD_LOGIC;
    signal grp_LOADBYTES_3_fu_555_bytes : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_LOADBYTES_3_fu_555_n : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_ap_start : STD_LOGIC;
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_ap_done : STD_LOGIC;
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_ap_idle : STD_LOGIC;
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_ap_ready : STD_LOGIC;
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_m_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_m_ce0 : STD_LOGIC;
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_m_we0 : STD_LOGIC;
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_m_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_ap_start : STD_LOGIC;
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_ap_done : STD_LOGIC;
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_ap_idle : STD_LOGIC;
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_ap_ready : STD_LOGIC;
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_x_assign_3_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_x_assign_3_out_ap_vld : STD_LOGIC;
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_start : STD_LOGIC;
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_done : STD_LOGIC;
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_idle : STD_LOGIC;
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_ready : STD_LOGIC;
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_t_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_t_ce0 : STD_LOGIC;
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_t_we0 : STD_LOGIC;
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_t_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_start : STD_LOGIC;
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_done : STD_LOGIC;
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_idle : STD_LOGIC;
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_ready : STD_LOGIC;
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_t_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_t_ce0 : STD_LOGIC;
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_t_we0 : STD_LOGIC;
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_t_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_start : STD_LOGIC;
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_done : STD_LOGIC;
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_idle : STD_LOGIC;
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_ready : STD_LOGIC;
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_c_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_c_ce0 : STD_LOGIC;
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_t_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_t_ce0 : STD_LOGIC;
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_result_1_out : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_result_1_out_ap_vld : STD_LOGIC;
    signal and_ln210_1_fu_907_p3 : STD_LOGIC_VECTOR (60 downto 0);
    signal ap_phi_mux_adlen_addr_0_lcssa_phi_fu_259_p4 : STD_LOGIC_VECTOR (60 downto 0);
    signal adlen_addr_0_lcssa_reg_256 : STD_LOGIC_VECTOR (60 downto 0);
    signal and_ln_fu_895_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal ad_addr_0_lcssa_idx_reg_266 : STD_LOGIC_VECTOR (4 downto 0);
    signal s_0_1_25_reg_278 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_1_21_reg_287 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_1_22_reg_296 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_1_23_reg_305 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_1_1_24_reg_314 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_s_4_2_26_phi_fu_326_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_2_26_reg_323 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_s_3_2_27_phi_fu_335_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_2_27_reg_332 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_s_2_2_28_phi_fu_345_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_2_28_reg_342 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_s_1_2_29_phi_fu_355_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_1_2_29_reg_352 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_s_0_2_30_phi_fu_365_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_0_2_30_reg_362 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln238_1_fu_1109_p3 : STD_LOGIC_VECTOR (60 downto 0);
    signal ap_phi_mux_clen_addr_0_lcssa_phi_fu_375_p4 : STD_LOGIC_VECTOR (60 downto 0);
    signal clen_addr_0_lcssa_reg_372 : STD_LOGIC_VECTOR (60 downto 0);
    signal and_ln1_fu_1097_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_c_addr_0_lcssa_idx_phi_fu_386_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal c_addr_0_lcssa_idx_reg_382 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_reg_394 : STD_LOGIC_VECTOR (3 downto 0);
    signal s_4_4_32_reg_405 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_4_33_reg_415 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_4_34_reg_426 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_1_4_35_reg_437 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_assign_1_reg_448 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_addr_0_lcssa_i_reg_459 : STD_LOGIC_VECTOR (63 downto 0);
    signal result_fu_1347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_retval_0_phi_fu_473_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_0_reg_469 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal grp_LOADBYTES_1_fu_480_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_LOADBYTES_1_fu_488_ap_start_reg : STD_LOGIC := '0';
    signal s_0_45_fu_921_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal s_0_60_fu_1292_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_1_57_fu_1299_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_57_fu_1305_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_LOADBYTES_2_fu_545_ap_start_reg : STD_LOGIC := '0';
    signal grp_LOADBYTES_3_fu_555_ap_start_reg : STD_LOGIC := '0';
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_ap_start_reg : STD_LOGIC := '0';
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal result_1_loc_fu_156 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln28_3_fu_1200_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ad_assign_fu_168 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln217_fu_864_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal adlen_assign_fu_172 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln218_fu_870_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_0_26_fu_176 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_1_43_fu_180 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_43_fu_184 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_45_fu_188 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_46_fu_192 : STD_LOGIC_VECTOR (63 downto 0);
    signal c_assign_fu_196 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln244_fu_1205_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal clen_assign_1_fu_200 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln246_fu_1211_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_0_59_fu_204 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_1_56_fu_208 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_56_fu_212 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_58_fu_216 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_60_fu_220 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln28_5_fu_1185_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_fu_722_p4 : STD_LOGIC_VECTOR (59 downto 0);
    signal empty_20_fu_718_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_4_fu_773_p4 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_6_fu_840_p4 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_3_fu_886_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln210_fu_904_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln_fu_952_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln222_fu_960_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln222_fu_966_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln222_fu_972_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_fu_990_p4 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_8_fu_1057_p4 : STD_LOGIC_VECTOR (60 downto 0);
    signal trunc_ln238_fu_1078_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln238_fu_1081_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_5_fu_1087_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln238_1_fu_1106_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln28_4_fu_1158_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln1_fu_1162_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln28_fu_1170_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln28_2_fu_1176_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln28_fu_1180_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln28_fu_1142_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln238_3_fu_1190_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln28_fu_1194_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln3_fu_1267_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln252_fu_1281_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln253_fu_1287_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln283_fu_1333_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_9_fu_1339_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (41 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_block_state4_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_block_state28_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component crypto_aead_decrypt_h_LOADBYTES_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        k_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        k_ce0 : OUT STD_LOGIC;
        k_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        bytes : IN STD_LOGIC_VECTOR (3 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component crypto_aead_decrypt_h_ROUND IS
    port (
        ap_ready : OUT STD_LOGIC;
        s_0_read : IN STD_LOGIC_VECTOR (63 downto 0);
        s_1_read : IN STD_LOGIC_VECTOR (63 downto 0);
        s_2_read : IN STD_LOGIC_VECTOR (63 downto 0);
        s_3_read : IN STD_LOGIC_VECTOR (63 downto 0);
        s_4_read : IN STD_LOGIC_VECTOR (63 downto 0);
        C : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component crypto_aead_decrypt_h_LOADBYTES_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ad_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        ad_ce0 : OUT STD_LOGIC;
        ad_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        bytes : IN STD_LOGIC_VECTOR (4 downto 0);
        n : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component crypto_aead_decrypt_h_LOADBYTES_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        c_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        c_ce0 : OUT STD_LOGIC;
        c_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        bytes : IN STD_LOGIC_VECTOR (5 downto 0);
        n : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component crypto_aead_decrypt_h_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        trunc_ln28_5 : IN STD_LOGIC_VECTOR (30 downto 0);
        xor_ln250 : IN STD_LOGIC_VECTOR (63 downto 0);
        trunc_ln249_1 : IN STD_LOGIC_VECTOR (4 downto 0);
        m_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        m_ce0 : OUT STD_LOGIC;
        m_we0 : OUT STD_LOGIC;
        m_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component crypto_aead_decrypt_h_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        x_assign_1 : IN STD_LOGIC_VECTOR (63 downto 0);
        trunc_ln28_5 : IN STD_LOGIC_VECTOR (30 downto 0);
        x_assign_3_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        x_assign_3_out_ap_vld : OUT STD_LOGIC );
    end component;


    component crypto_aead_decrypt_h_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_3 : IN STD_LOGIC_VECTOR (63 downto 0);
        t_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        t_ce0 : OUT STD_LOGIC;
        t_we0 : OUT STD_LOGIC;
        t_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component crypto_aead_decrypt_h_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_4_45 : IN STD_LOGIC_VECTOR (63 downto 0);
        t_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        t_ce0 : OUT STD_LOGIC;
        t_we0 : OUT STD_LOGIC;
        t_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component crypto_aead_decrypt_h_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        trunc_ln3 : IN STD_LOGIC_VECTOR (5 downto 0);
        c_addr_0_lcssa_idx : IN STD_LOGIC_VECTOR (5 downto 0);
        c_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        c_ce0 : OUT STD_LOGIC;
        c_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        t_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        t_ce0 : OUT STD_LOGIC;
        t_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        result_1_out : OUT STD_LOGIC_VECTOR (8 downto 0);
        result_1_out_ap_vld : OUT STD_LOGIC );
    end component;


    component crypto_aead_decrypt_h_crypto_aead_decrypt_1_t_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    t_U : component crypto_aead_decrypt_h_crypto_aead_decrypt_1_t_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => t_address0,
        ce0 => t_ce0,
        we0 => t_we0,
        d0 => t_d0,
        q0 => t_q0);

    grp_LOADBYTES_1_fu_480 : component crypto_aead_decrypt_h_LOADBYTES_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_LOADBYTES_1_fu_480_ap_start,
        ap_done => grp_LOADBYTES_1_fu_480_ap_done,
        ap_idle => grp_LOADBYTES_1_fu_480_ap_idle,
        ap_ready => grp_LOADBYTES_1_fu_480_ap_ready,
        k_address0 => grp_LOADBYTES_1_fu_480_k_address0,
        k_ce0 => grp_LOADBYTES_1_fu_480_k_ce0,
        k_q0 => k_q0,
        bytes => grp_LOADBYTES_1_fu_480_bytes,
        ap_return => grp_LOADBYTES_1_fu_480_ap_return);

    grp_LOADBYTES_1_fu_488 : component crypto_aead_decrypt_h_LOADBYTES_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_LOADBYTES_1_fu_488_ap_start,
        ap_done => grp_LOADBYTES_1_fu_488_ap_done,
        ap_idle => grp_LOADBYTES_1_fu_488_ap_idle,
        ap_ready => grp_LOADBYTES_1_fu_488_ap_ready,
        k_address0 => grp_LOADBYTES_1_fu_488_k_address0,
        k_ce0 => grp_LOADBYTES_1_fu_488_k_ce0,
        k_q0 => npub_q0,
        bytes => grp_LOADBYTES_1_fu_488_bytes,
        ap_return => grp_LOADBYTES_1_fu_488_ap_return);

    grp_ROUND_fu_498 : component crypto_aead_decrypt_h_ROUND
    port map (
        ap_ready => grp_ROUND_fu_498_ap_ready,
        s_0_read => grp_ROUND_fu_498_s_0_read,
        s_1_read => grp_ROUND_fu_498_s_1_read,
        s_2_read => grp_ROUND_fu_498_s_2_read,
        s_3_read => grp_ROUND_fu_498_s_3_read,
        s_4_read => grp_ROUND_fu_498_s_4_read,
        C => grp_ROUND_fu_498_C,
        ap_return_0 => grp_ROUND_fu_498_ap_return_0,
        ap_return_1 => grp_ROUND_fu_498_ap_return_1,
        ap_return_2 => grp_ROUND_fu_498_ap_return_2,
        ap_return_3 => grp_ROUND_fu_498_ap_return_3,
        ap_return_4 => grp_ROUND_fu_498_ap_return_4);

    grp_ROUND_fu_513 : component crypto_aead_decrypt_h_ROUND
    port map (
        ap_ready => grp_ROUND_fu_513_ap_ready,
        s_0_read => grp_ROUND_fu_498_ap_return_0,
        s_1_read => grp_ROUND_fu_498_ap_return_1,
        s_2_read => grp_ROUND_fu_498_ap_return_2,
        s_3_read => grp_ROUND_fu_498_ap_return_3,
        s_4_read => grp_ROUND_fu_498_ap_return_4,
        C => grp_ROUND_fu_513_C,
        ap_return_0 => grp_ROUND_fu_513_ap_return_0,
        ap_return_1 => grp_ROUND_fu_513_ap_return_1,
        ap_return_2 => grp_ROUND_fu_513_ap_return_2,
        ap_return_3 => grp_ROUND_fu_513_ap_return_3,
        ap_return_4 => grp_ROUND_fu_513_ap_return_4);

    grp_LOADBYTES_2_fu_545 : component crypto_aead_decrypt_h_LOADBYTES_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_LOADBYTES_2_fu_545_ap_start,
        ap_done => grp_LOADBYTES_2_fu_545_ap_done,
        ap_idle => grp_LOADBYTES_2_fu_545_ap_idle,
        ap_ready => grp_LOADBYTES_2_fu_545_ap_ready,
        ad_address0 => grp_LOADBYTES_2_fu_545_ad_address0,
        ad_ce0 => grp_LOADBYTES_2_fu_545_ad_ce0,
        ad_q0 => ad_q0,
        bytes => grp_LOADBYTES_2_fu_545_bytes,
        n => grp_LOADBYTES_2_fu_545_n,
        ap_return => grp_LOADBYTES_2_fu_545_ap_return);

    grp_LOADBYTES_3_fu_555 : component crypto_aead_decrypt_h_LOADBYTES_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_LOADBYTES_3_fu_555_ap_start,
        ap_done => grp_LOADBYTES_3_fu_555_ap_done,
        ap_idle => grp_LOADBYTES_3_fu_555_ap_idle,
        ap_ready => grp_LOADBYTES_3_fu_555_ap_ready,
        c_address0 => grp_LOADBYTES_3_fu_555_c_address0,
        c_ce0 => grp_LOADBYTES_3_fu_555_c_ce0,
        c_q0 => c_q0,
        bytes => grp_LOADBYTES_3_fu_555_bytes,
        n => grp_LOADBYTES_3_fu_555_n,
        ap_return => grp_LOADBYTES_3_fu_555_ap_return);

    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565 : component crypto_aead_decrypt_h_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_ap_start,
        ap_done => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_ap_done,
        ap_idle => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_ap_idle,
        ap_ready => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_ap_ready,
        trunc_ln28_5 => trunc_ln28_reg_1705,
        xor_ln250 => xor_ln250_reg_1700,
        trunc_ln249_1 => trunc_ln249_1_reg_1673,
        m_address0 => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_m_address0,
        m_ce0 => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_m_ce0,
        m_we0 => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_m_we0,
        m_d0 => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_m_d0);

    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574 : component crypto_aead_decrypt_h_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_ap_start,
        ap_done => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_ap_done,
        ap_idle => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_ap_idle,
        ap_ready => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_ap_ready,
        x_assign_1 => x_assign_1_reg_448,
        trunc_ln28_5 => trunc_ln28_reg_1705,
        x_assign_3_out => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_x_assign_3_out,
        x_assign_3_out_ap_vld => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_x_assign_3_out_ap_vld);

    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582 : component crypto_aead_decrypt_h_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_start,
        ap_done => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_done,
        ap_idle => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_idle,
        ap_ready => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_ready,
        s_3 => s_3_reg_1719,
        t_address0 => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_t_address0,
        t_ce0 => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_t_ce0,
        t_we0 => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_t_we0,
        t_d0 => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_t_d0);

    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588 : component crypto_aead_decrypt_h_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_start,
        ap_done => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_done,
        ap_idle => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_idle,
        ap_ready => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_ready,
        s_4_45 => s_4_73_reg_1724,
        t_address0 => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_t_address0,
        t_ce0 => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_t_ce0,
        t_we0 => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_t_we0,
        t_d0 => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_t_d0);

    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594 : component crypto_aead_decrypt_h_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_start,
        ap_done => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_done,
        ap_idle => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_idle,
        ap_ready => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_ready,
        trunc_ln3 => trunc_ln249_reg_1668,
        c_addr_0_lcssa_idx => c_addr_0_lcssa_idx_reg_382,
        c_address0 => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_c_address0,
        c_ce0 => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_c_ce0,
        c_q0 => c_q0,
        t_address0 => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_t_address0,
        t_ce0 => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_t_ce0,
        t_q0 => t_q0,
        result_1_out => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_result_1_out,
        result_1_out_ap_vld => grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_result_1_out_ap_vld);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
                    ap_return_preg <= ap_phi_mux_retval_0_phi_fu_473_p4;
                end if; 
            end if;
        end if;
    end process;


    grp_LOADBYTES_1_fu_480_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_LOADBYTES_1_fu_480_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (icmp_ln178_fu_732_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                    grp_LOADBYTES_1_fu_480_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_LOADBYTES_1_fu_480_ap_ready = ap_const_logic_1)) then 
                    grp_LOADBYTES_1_fu_480_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_LOADBYTES_1_fu_488_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_LOADBYTES_1_fu_488_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (icmp_ln178_fu_732_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                    grp_LOADBYTES_1_fu_488_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_LOADBYTES_1_fu_488_ap_ready = ap_const_logic_1)) then 
                    grp_LOADBYTES_1_fu_488_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_LOADBYTES_2_fu_545_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_LOADBYTES_2_fu_545_ap_start_reg <= ap_const_logic_0;
            else
                if ((((icmp_ln210_1_fu_850_p2 = ap_const_lv1_0) and (icmp_ln210_reg_1438 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((ap_const_logic_1 = ap_CS_fsm_state11) and ((icmp_ln210_1_fu_850_p2 = ap_const_lv1_1) or (icmp_ln210_reg_1438 = ap_const_lv1_1))))) then 
                    grp_LOADBYTES_2_fu_545_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_LOADBYTES_2_fu_545_ap_ready = ap_const_logic_1)) then 
                    grp_LOADBYTES_2_fu_545_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_LOADBYTES_3_fu_555_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_LOADBYTES_3_fu_555_ap_start_reg <= ap_const_logic_0;
            else
                if ((((icmp_ln238_1_fu_1067_p2 = ap_const_lv1_0) and (icmp_ln238_reg_1579 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((ap_const_logic_1 = ap_CS_fsm_state21) and ((icmp_ln238_1_fu_1067_p2 = ap_const_lv1_1) or (icmp_ln238_reg_1579 = ap_const_lv1_1))))) then 
                    grp_LOADBYTES_3_fu_555_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_LOADBYTES_3_fu_555_ap_ready = ap_const_logic_1)) then 
                    grp_LOADBYTES_3_fu_555_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
                    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_ready = ap_const_logic_1)) then 
                    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
                    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_ready = ap_const_logic_1)) then 
                    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
                    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_ready = ap_const_logic_1)) then 
                    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_ap_start_reg <= ap_const_logic_0;
            else
                if (((grp_LOADBYTES_3_fu_555_ap_done = ap_const_logic_1) and (icmp_ln28_1_reg_1683 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_ap_ready = ap_const_logic_1)) then 
                    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_ap_start_reg <= ap_const_logic_0;
            else
                if (((grp_LOADBYTES_3_fu_555_ap_done = ap_const_logic_1) and (icmp_ln28_1_reg_1683 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_ap_ready = ap_const_logic_1)) then 
                    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ad_addr_0_lcssa_idx_reg_266_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln210_fu_782_p2 = ap_const_lv1_1) and (icmp_ln208_fu_768_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                ad_addr_0_lcssa_idx_reg_266(3) <= '0';
                ad_addr_0_lcssa_idx_reg_266(4) <= '0';
            elsif (((icmp_ln210_1_fu_850_p2 = ap_const_lv1_1) and (icmp_ln210_reg_1438 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                                ad_addr_0_lcssa_idx_reg_266(4 downto 3) <= and_ln_fu_895_p3(4 downto 3);
            end if; 
        end if;
    end process;

    ad_assign_fu_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln210_fu_782_p2 = ap_const_lv1_0) and (icmp_ln208_fu_768_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                ad_assign_fu_168 <= ap_const_lv64_0;
            elsif (((icmp_ln210_1_fu_850_p2 = ap_const_lv1_0) and (icmp_ln210_reg_1438 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                ad_assign_fu_168 <= add_ln217_fu_864_p2;
            end if; 
        end if;
    end process;

    adlen_addr_0_lcssa_reg_256_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln210_fu_782_p2 = ap_const_lv1_1) and (icmp_ln208_fu_768_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                adlen_addr_0_lcssa_reg_256 <= empty_reg_1382;
            elsif (((icmp_ln210_1_fu_850_p2 = ap_const_lv1_1) and (icmp_ln210_reg_1438 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                adlen_addr_0_lcssa_reg_256 <= and_ln210_1_fu_907_p3;
            end if; 
        end if;
    end process;

    adlen_assign_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln210_fu_782_p2 = ap_const_lv1_0) and (icmp_ln208_fu_768_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                adlen_assign_fu_172 <= adlen;
            elsif (((icmp_ln210_1_fu_850_p2 = ap_const_lv1_0) and (icmp_ln210_reg_1438 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                adlen_assign_fu_172 <= add_ln218_fu_870_p2;
            end if; 
        end if;
    end process;

    c_addr_0_lcssa_idx_reg_382_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln238_fu_999_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                c_addr_0_lcssa_idx_reg_382(3) <= '0';
                c_addr_0_lcssa_idx_reg_382(4) <= '0';
                c_addr_0_lcssa_idx_reg_382(5) <= '0';
            elsif (((icmp_ln238_1_fu_1067_p2 = ap_const_lv1_1) and (icmp_ln238_reg_1579 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                                c_addr_0_lcssa_idx_reg_382(5 downto 3) <= and_ln1_fu_1097_p3(5 downto 3);
            end if; 
        end if;
    end process;

    c_assign_fu_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln238_fu_999_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                c_assign_fu_196 <= ap_const_lv64_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln28_fu_1146_p2 = ap_const_lv1_1))) then 
                c_assign_fu_196 <= add_ln244_fu_1205_p2;
            end if; 
        end if;
    end process;

    clen_addr_0_lcssa_reg_372_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln238_fu_999_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                clen_addr_0_lcssa_reg_372 <= add_ln181_1_reg_1391;
            elsif (((icmp_ln238_1_fu_1067_p2 = ap_const_lv1_1) and (icmp_ln238_reg_1579 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                clen_addr_0_lcssa_reg_372 <= and_ln238_1_fu_1109_p3;
            end if; 
        end if;
    end process;

    clen_assign_1_fu_200_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln238_fu_999_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                clen_assign_1_fu_200 <= add_ln181_reg_1416;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln28_fu_1146_p2 = ap_const_lv1_1))) then 
                clen_assign_1_fu_200 <= add_ln246_fu_1211_p2;
            end if; 
        end if;
    end process;

    i_reg_394_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_LOADBYTES_3_fu_555_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                i_reg_394 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln28_fu_1146_p2 = ap_const_lv1_0))) then 
                i_reg_394 <= add_ln28_1_fu_1152_p2;
            end if; 
        end if;
    end process;

    retval_0_reg_469_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (icmp_ln178_fu_732_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                retval_0_reg_469 <= ap_const_lv1_1;
            elsif (((icmp_ln178_reg_1387 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
                retval_0_reg_469 <= result_fu_1347_p2;
            end if; 
        end if;
    end process;

    s_0_1_25_reg_278_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln210_fu_782_p2 = ap_const_lv1_1) and (icmp_ln208_fu_768_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                s_0_1_25_reg_278 <= grp_ROUND_fu_498_ap_return_0;
            elsif (((icmp_ln210_1_fu_850_p2 = ap_const_lv1_1) and (icmp_ln210_reg_1438 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                s_0_1_25_reg_278 <= s_0_26_fu_176;
            end if; 
        end if;
    end process;

    s_0_2_30_reg_362_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln208_fu_768_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                s_0_2_30_reg_362 <= grp_ROUND_fu_498_ap_return_0;
            elsif (((icmp_ln208_reg_1434 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                s_0_2_30_reg_362 <= s_0_58_reg_1549;
            end if; 
        end if;
    end process;

    s_0_59_fu_204_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln238_fu_999_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                s_0_59_fu_204 <= ap_phi_mux_s_0_2_30_phi_fu_365_p4;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                s_0_59_fu_204 <= grp_ROUND_fu_498_ap_return_0;
            end if; 
        end if;
    end process;

    s_1_1_24_reg_314_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln210_fu_782_p2 = ap_const_lv1_1) and (icmp_ln208_fu_768_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                s_1_1_24_reg_314 <= grp_ROUND_fu_498_ap_return_1;
            elsif (((icmp_ln210_1_fu_850_p2 = ap_const_lv1_1) and (icmp_ln210_reg_1438 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                s_1_1_24_reg_314 <= s_1_43_fu_180;
            end if; 
        end if;
    end process;

    s_1_2_29_reg_352_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln208_fu_768_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                s_1_2_29_reg_352 <= grp_ROUND_fu_498_ap_return_1;
            elsif (((icmp_ln208_reg_1434 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                s_1_2_29_reg_352 <= s_1_55_reg_1554;
            end if; 
        end if;
    end process;

    s_1_4_35_reg_437_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln238_fu_999_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                s_1_4_35_reg_437 <= ap_phi_mux_s_1_2_29_phi_fu_355_p4;
            elsif (((icmp_ln238_1_fu_1067_p2 = ap_const_lv1_1) and (icmp_ln238_reg_1579 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                s_1_4_35_reg_437 <= s_1_56_fu_208;
            end if; 
        end if;
    end process;

    s_1_56_fu_208_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln238_fu_999_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                s_1_56_fu_208 <= ap_phi_mux_s_1_2_29_phi_fu_355_p4;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                s_1_56_fu_208 <= grp_ROUND_fu_498_ap_return_1;
            end if; 
        end if;
    end process;

    s_2_1_23_reg_305_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln210_fu_782_p2 = ap_const_lv1_1) and (icmp_ln208_fu_768_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                s_2_1_23_reg_305 <= grp_ROUND_fu_498_ap_return_2;
            elsif (((icmp_ln210_1_fu_850_p2 = ap_const_lv1_1) and (icmp_ln210_reg_1438 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                s_2_1_23_reg_305 <= s_2_43_fu_184;
            end if; 
        end if;
    end process;

    s_2_2_28_reg_342_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln208_fu_768_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                s_2_2_28_reg_342 <= grp_ROUND_fu_498_ap_return_2;
            elsif (((icmp_ln208_reg_1434 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                s_2_2_28_reg_342 <= s_2_55_reg_1559;
            end if; 
        end if;
    end process;

    s_2_4_34_reg_426_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln238_fu_999_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                s_2_4_34_reg_426 <= ap_phi_mux_s_2_2_28_phi_fu_345_p4;
            elsif (((icmp_ln238_1_fu_1067_p2 = ap_const_lv1_1) and (icmp_ln238_reg_1579 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                s_2_4_34_reg_426 <= s_2_56_fu_212;
            end if; 
        end if;
    end process;

    s_2_56_fu_212_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln238_fu_999_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                s_2_56_fu_212 <= ap_phi_mux_s_2_2_28_phi_fu_345_p4;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                s_2_56_fu_212 <= grp_ROUND_fu_498_ap_return_2;
            end if; 
        end if;
    end process;

    s_3_1_22_reg_296_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln210_fu_782_p2 = ap_const_lv1_1) and (icmp_ln208_fu_768_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                s_3_1_22_reg_296 <= s_3_14_fu_758_p2;
            elsif (((icmp_ln210_1_fu_850_p2 = ap_const_lv1_1) and (icmp_ln210_reg_1438 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                s_3_1_22_reg_296 <= s_3_45_fu_188;
            end if; 
        end if;
    end process;

    s_3_2_27_reg_332_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln208_fu_768_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                s_3_2_27_reg_332 <= s_3_14_fu_758_p2;
            elsif (((icmp_ln208_reg_1434 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                s_3_2_27_reg_332 <= s_3_57_reg_1564;
            end if; 
        end if;
    end process;

    s_3_45_fu_188_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln210_fu_782_p2 = ap_const_lv1_0) and (icmp_ln208_fu_768_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                s_3_45_fu_188 <= s_3_14_fu_758_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                s_3_45_fu_188 <= grp_ROUND_fu_498_ap_return_3;
            end if; 
        end if;
    end process;

    s_3_4_33_reg_415_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln238_fu_999_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                s_3_4_33_reg_415 <= ap_phi_mux_s_3_2_27_phi_fu_335_p4;
            elsif (((icmp_ln238_1_fu_1067_p2 = ap_const_lv1_1) and (icmp_ln238_reg_1579 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                s_3_4_33_reg_415 <= s_3_58_fu_216;
            end if; 
        end if;
    end process;

    s_3_58_fu_216_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln238_fu_999_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                s_3_58_fu_216 <= ap_phi_mux_s_3_2_27_phi_fu_335_p4;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                s_3_58_fu_216 <= grp_ROUND_fu_498_ap_return_3;
            end if; 
        end if;
    end process;

    s_4_1_21_reg_287_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln210_fu_782_p2 = ap_const_lv1_1) and (icmp_ln208_fu_768_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                s_4_1_21_reg_287 <= s_4_13_fu_763_p2;
            elsif (((icmp_ln210_1_fu_850_p2 = ap_const_lv1_1) and (icmp_ln210_reg_1438 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                s_4_1_21_reg_287 <= s_4_46_fu_192;
            end if; 
        end if;
    end process;

    s_4_2_26_reg_323_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln208_fu_768_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                s_4_2_26_reg_323 <= s_4_13_fu_763_p2;
            elsif (((icmp_ln208_reg_1434 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                s_4_2_26_reg_323 <= s_4_58_reg_1569;
            end if; 
        end if;
    end process;

    s_4_46_fu_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln210_fu_782_p2 = ap_const_lv1_0) and (icmp_ln208_fu_768_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                s_4_46_fu_192 <= s_4_13_fu_763_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                s_4_46_fu_192 <= grp_ROUND_fu_498_ap_return_4;
            end if; 
        end if;
    end process;

    s_4_4_32_reg_405_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln238_fu_999_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                s_4_4_32_reg_405 <= s_4_59_fu_984_p2;
            elsif (((icmp_ln238_1_fu_1067_p2 = ap_const_lv1_1) and (icmp_ln238_reg_1579 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                s_4_4_32_reg_405 <= s_4_60_fu_220;
            end if; 
        end if;
    end process;

    s_4_60_fu_220_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln238_fu_999_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                s_4_60_fu_220 <= s_4_59_fu_984_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                s_4_60_fu_220 <= grp_ROUND_fu_498_ap_return_4;
            end if; 
        end if;
    end process;

    x_addr_0_lcssa_i_reg_459_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_LOADBYTES_3_fu_555_ap_done = ap_const_logic_1) and (icmp_ln28_1_reg_1683 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                x_addr_0_lcssa_i_reg_459 <= x_assign_1_reg_448;
            elsif (((icmp_ln28_1_reg_1683 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                x_addr_0_lcssa_i_reg_459 <= grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_x_assign_3_out;
            end if; 
        end if;
    end process;

    x_assign_1_reg_448_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln238_fu_999_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                x_assign_1_reg_448 <= ap_phi_mux_s_0_2_30_phi_fu_365_p4;
            elsif (((icmp_ln238_1_fu_1067_p2 = ap_const_lv1_1) and (icmp_ln238_reg_1579 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                x_assign_1_reg_448 <= s_0_59_fu_204;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                K0_reg_1396 <= grp_LOADBYTES_1_fu_480_ap_return;
                N0_reg_1404 <= grp_LOADBYTES_1_fu_488_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                K1_reg_1409 <= grp_LOADBYTES_1_fu_480_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln178_fu_732_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                add_ln181_1_reg_1391 <= add_ln181_1_fu_738_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                add_ln181_reg_1416 <= add_ln181_fu_744_p2;
                icmp_ln208_reg_1434 <= icmp_ln208_fu_768_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                empty_reg_1382 <= empty_fu_714_p1;
                icmp_ln178_reg_1387 <= icmp_ln178_fu_732_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln208_fu_768_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                icmp_ln210_reg_1438 <= icmp_ln210_fu_782_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                icmp_ln238_reg_1579 <= icmp_ln238_fu_999_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state21) and ((icmp_ln238_1_fu_1067_p2 = ap_const_lv1_1) or (icmp_ln238_reg_1579 = ap_const_lv1_1)))) then
                icmp_ln28_1_reg_1683 <= icmp_ln28_1_fu_1131_p2;
                    trunc_ln249_1_reg_1673(4 downto 3) <= trunc_ln249_1_fu_1122_p1(4 downto 3);
                trunc_ln249_2_reg_1678 <= trunc_ln249_2_fu_1126_p1;
                trunc_ln249_reg_1668 <= trunc_ln249_fu_1118_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln28_fu_1146_p2 = ap_const_lv1_1)))) then
                reg_653 <= grp_ROUND_fu_498_ap_return_0;
                reg_660 <= grp_ROUND_fu_498_ap_return_1;
                reg_667 <= grp_ROUND_fu_498_ap_return_2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln28_fu_1146_p2 = ap_const_lv1_1)))) then
                reg_674 <= grp_ROUND_fu_498_ap_return_3;
                reg_679 <= grp_ROUND_fu_498_ap_return_4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then
                reg_684 <= grp_ROUND_fu_513_ap_return_0;
                reg_689 <= grp_ROUND_fu_513_ap_return_1;
                reg_694 <= grp_ROUND_fu_513_ap_return_2;
                reg_699 <= grp_ROUND_fu_513_ap_return_3;
                reg_704 <= grp_ROUND_fu_513_ap_return_4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state22))) then
                reg_709 <= grp_LOADBYTES_3_fu_555_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_result_1_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state41))) then
                result_1_loc_fu_156 <= grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_result_1_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) or ((icmp_ln210_fu_782_p2 = ap_const_lv1_0) and (icmp_ln208_fu_768_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then
                s_0_26_fu_176 <= grp_ROUND_fu_498_ap_return_0;
                s_1_43_fu_180 <= grp_ROUND_fu_498_ap_return_1;
                s_2_43_fu_184 <= grp_ROUND_fu_498_ap_return_2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                s_0_46_reg_1529 <= grp_ROUND_fu_498_ap_return_0;
                s_1_44_reg_1534 <= grp_ROUND_fu_498_ap_return_1;
                s_2_44_reg_1539 <= grp_ROUND_fu_498_ap_return_2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                s_0_52_reg_1544 <= s_0_52_fu_978_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                s_0_58_reg_1549 <= grp_ROUND_fu_513_ap_return_0;
                s_1_55_reg_1554 <= grp_ROUND_fu_513_ap_return_1;
                s_2_55_reg_1559 <= grp_ROUND_fu_513_ap_return_2;
                s_3_57_reg_1564 <= grp_ROUND_fu_513_ap_return_3;
                s_4_58_reg_1569 <= grp_ROUND_fu_513_ap_return_4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                s_3_reg_1719 <= s_3_fu_1319_p2;
                s_4_73_reg_1724 <= s_4_73_fu_1325_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                    sub_ln253_reg_1714(63 downto 3) <= sub_ln253_fu_1275_p2(63 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln210_1_fu_850_p2 = ap_const_lv1_0) and (icmp_ln210_reg_1438 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                trunc_ln210_1_reg_1519 <= trunc_ln210_1_fu_859_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and ((icmp_ln210_1_fu_850_p2 = ap_const_lv1_1) or (icmp_ln210_reg_1438 = ap_const_lv1_1)))) then
                trunc_ln221_reg_1524 <= trunc_ln221_fu_916_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln238_1_fu_1067_p2 = ap_const_lv1_0) and (icmp_ln238_reg_1579 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                trunc_ln238_2_reg_1663 <= trunc_ln238_2_fu_1073_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln28_1_reg_1683 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                trunc_ln28_reg_1705 <= trunc_ln28_fu_1258_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                xor_ln240_reg_1687 <= xor_ln240_fu_1137_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then
                xor_ln250_reg_1700 <= xor_ln250_fu_1251_p2;
            end if;
        end if;
    end process;
    trunc_ln249_1_reg_1673(2 downto 0) <= "000";
    sub_ln253_reg_1714(2 downto 0) <= "000";
    ad_addr_0_lcssa_idx_reg_266(2 downto 0) <= "000";
    c_addr_0_lcssa_idx_reg_382(2 downto 0) <= "000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state4, ap_CS_fsm_state10, ap_CS_fsm_state23, icmp_ln28_fu_1146_p2, ap_CS_fsm_state12, ap_CS_fsm_state22, ap_CS_fsm_state27, icmp_ln178_fu_732_p2, ap_CS_fsm_state2, icmp_ln208_fu_768_p2, icmp_ln210_reg_1438, ap_CS_fsm_state11, icmp_ln210_1_fu_850_p2, ap_CS_fsm_state16, icmp_ln238_reg_1579, ap_CS_fsm_state21, icmp_ln238_1_fu_1067_p2, icmp_ln28_1_reg_1683, grp_LOADBYTES_2_fu_545_ap_done, grp_LOADBYTES_3_fu_555_ap_done, grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_done, grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_done, grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_done, ap_CS_fsm_state28, ap_CS_fsm_state37, ap_CS_fsm_state39, ap_CS_fsm_state41, ap_block_state2_on_subcall_done, ap_block_state4_on_subcall_done, ap_block_state28_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (icmp_ln178_fu_732_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state42;
                elsif (((ap_start = ap_const_logic_1) and (icmp_ln178_fu_732_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((icmp_ln208_fu_768_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and ((icmp_ln210_1_fu_850_p2 = ap_const_lv1_1) or (icmp_ln210_reg_1438 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                if (((grp_LOADBYTES_2_fu_545_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state16 => 
                if (((grp_LOADBYTES_2_fu_545_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state21) and ((icmp_ln238_1_fu_1067_p2 = ap_const_lv1_1) or (icmp_ln238_reg_1579 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state22 => 
                if (((grp_LOADBYTES_3_fu_555_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln28_fu_1146_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state27 => 
                if (((grp_LOADBYTES_3_fu_555_ap_done = ap_const_logic_1) and (icmp_ln28_1_reg_1683 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                elsif (((grp_LOADBYTES_3_fu_555_ap_done = ap_const_logic_1) and (icmp_ln28_1_reg_1683 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state28 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state28) and (ap_const_boolean_0 = ap_block_state28_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                if (((grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then
                    ap_NS_fsm <= ap_ST_fsm_state38;
                else
                    ap_NS_fsm <= ap_ST_fsm_state37;
                end if;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                if (((grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state39))) then
                    ap_NS_fsm <= ap_ST_fsm_state40;
                else
                    ap_NS_fsm <= ap_ST_fsm_state39;
                end if;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                if (((grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state41))) then
                    ap_NS_fsm <= ap_ST_fsm_state42;
                else
                    ap_NS_fsm <= ap_ST_fsm_state41;
                end if;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ad_address0 <= grp_LOADBYTES_2_fu_545_ad_address0;

    ad_ce0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state16, grp_LOADBYTES_2_fu_545_ad_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ad_ce0 <= grp_LOADBYTES_2_fu_545_ad_ce0;
        else 
            ad_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln181_1_fu_738_p2 <= std_logic_vector(unsigned(empty_20_fu_718_p1) + unsigned(ap_const_lv61_1FFFFFFFFFFFFFF0));
    add_ln181_fu_744_p2 <= std_logic_vector(unsigned(clen) + unsigned(ap_const_lv64_FFFFFFFFFFFFFFF0));
    add_ln217_fu_864_p2 <= std_logic_vector(unsigned(ad_assign_fu_168) + unsigned(ap_const_lv64_8));
    add_ln218_fu_870_p2 <= std_logic_vector(unsigned(adlen_assign_fu_172) + unsigned(ap_const_lv64_FFFFFFFFFFFFFFF8));
    add_ln238_fu_1081_p2 <= std_logic_vector(unsigned(trunc_ln238_fu_1078_p1) + unsigned(ap_const_lv6_30));
    add_ln244_fu_1205_p2 <= std_logic_vector(unsigned(c_assign_fu_196) + unsigned(ap_const_lv64_8));
    add_ln246_fu_1211_p2 <= std_logic_vector(unsigned(clen_assign_1_fu_200) + unsigned(ap_const_lv64_FFFFFFFFFFFFFFF8));
    add_ln283_fu_1333_p2 <= std_logic_vector(unsigned(result_1_loc_fu_156) + unsigned(ap_const_lv9_1FF));
    add_ln28_1_fu_1152_p2 <= std_logic_vector(unsigned(i_reg_394) + unsigned(ap_const_lv4_1));
    add_ln28_fu_1194_p2 <= std_logic_vector(unsigned(zext_ln28_fu_1142_p1) + unsigned(trunc_ln238_3_fu_1190_p1));
    and_ln1_fu_1097_p3 <= (tmp_5_fu_1087_p4 & ap_const_lv3_0);
    and_ln210_1_fu_907_p3 <= (ap_const_lv58_0 & trunc_ln210_fu_904_p1);
    and_ln238_1_fu_1109_p3 <= (ap_const_lv58_0 & trunc_ln238_1_fu_1106_p1);
    and_ln_fu_895_p3 <= (tmp_3_fu_886_p4 & ap_const_lv3_0);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state12_blk_assign_proc : process(grp_LOADBYTES_2_fu_545_ap_done)
    begin
        if ((grp_LOADBYTES_2_fu_545_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;

    ap_ST_fsm_state16_blk_assign_proc : process(grp_LOADBYTES_2_fu_545_ap_done)
    begin
        if ((grp_LOADBYTES_2_fu_545_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state16_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state16_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;

    ap_ST_fsm_state22_blk_assign_proc : process(grp_LOADBYTES_3_fu_555_ap_done)
    begin
        if ((grp_LOADBYTES_3_fu_555_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state22_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state22_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;

    ap_ST_fsm_state27_blk_assign_proc : process(grp_LOADBYTES_3_fu_555_ap_done)
    begin
        if ((grp_LOADBYTES_3_fu_555_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state27_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state27_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state28_blk_assign_proc : process(ap_block_state28_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state28_on_subcall_done)) then 
            ap_ST_fsm_state28_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state28_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state29_blk <= ap_const_logic_0;

    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state2_on_subcall_done)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;

    ap_ST_fsm_state37_blk_assign_proc : process(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_done)
    begin
        if ((grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state37_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state37_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state38_blk <= ap_const_logic_0;

    ap_ST_fsm_state39_blk_assign_proc : process(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_done)
    begin
        if ((grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state39_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state39_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state40_blk <= ap_const_logic_0;

    ap_ST_fsm_state41_blk_assign_proc : process(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_done)
    begin
        if ((grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state41_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state41_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state42_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(ap_block_state4_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state4_on_subcall_done)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state28_on_subcall_done_assign_proc : process(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_ap_done, grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_ap_done)
    begin
                ap_block_state28_on_subcall_done <= ((grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_ap_done = ap_const_logic_0) or (grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_ap_done = ap_const_logic_0));
    end process;


    ap_block_state2_on_subcall_done_assign_proc : process(grp_LOADBYTES_1_fu_480_ap_done, grp_LOADBYTES_1_fu_488_ap_done)
    begin
                ap_block_state2_on_subcall_done <= ((grp_LOADBYTES_1_fu_488_ap_done = ap_const_logic_0) or (grp_LOADBYTES_1_fu_480_ap_done = ap_const_logic_0));
    end process;


    ap_block_state4_on_subcall_done_assign_proc : process(grp_LOADBYTES_1_fu_480_ap_done, grp_LOADBYTES_1_fu_488_ap_done)
    begin
                ap_block_state4_on_subcall_done <= ((grp_LOADBYTES_1_fu_488_ap_done = ap_const_logic_0) or (grp_LOADBYTES_1_fu_480_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state42)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state42) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_adlen_addr_0_lcssa_phi_fu_259_p4_assign_proc : process(icmp_ln210_reg_1438, ap_CS_fsm_state11, icmp_ln210_1_fu_850_p2, and_ln210_1_fu_907_p3, adlen_addr_0_lcssa_reg_256)
    begin
        if (((icmp_ln210_1_fu_850_p2 = ap_const_lv1_1) and (icmp_ln210_reg_1438 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ap_phi_mux_adlen_addr_0_lcssa_phi_fu_259_p4 <= and_ln210_1_fu_907_p3;
        else 
            ap_phi_mux_adlen_addr_0_lcssa_phi_fu_259_p4 <= adlen_addr_0_lcssa_reg_256;
        end if; 
    end process;


    ap_phi_mux_c_addr_0_lcssa_idx_phi_fu_386_p4_assign_proc : process(icmp_ln238_reg_1579, ap_CS_fsm_state21, icmp_ln238_1_fu_1067_p2, and_ln1_fu_1097_p3, c_addr_0_lcssa_idx_reg_382)
    begin
        if (((icmp_ln238_1_fu_1067_p2 = ap_const_lv1_1) and (icmp_ln238_reg_1579 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            ap_phi_mux_c_addr_0_lcssa_idx_phi_fu_386_p4 <= and_ln1_fu_1097_p3;
        else 
            ap_phi_mux_c_addr_0_lcssa_idx_phi_fu_386_p4 <= c_addr_0_lcssa_idx_reg_382;
        end if; 
    end process;


    ap_phi_mux_clen_addr_0_lcssa_phi_fu_375_p4_assign_proc : process(icmp_ln238_reg_1579, ap_CS_fsm_state21, icmp_ln238_1_fu_1067_p2, and_ln238_1_fu_1109_p3, clen_addr_0_lcssa_reg_372)
    begin
        if (((icmp_ln238_1_fu_1067_p2 = ap_const_lv1_1) and (icmp_ln238_reg_1579 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            ap_phi_mux_clen_addr_0_lcssa_phi_fu_375_p4 <= and_ln238_1_fu_1109_p3;
        else 
            ap_phi_mux_clen_addr_0_lcssa_phi_fu_375_p4 <= clen_addr_0_lcssa_reg_372;
        end if; 
    end process;


    ap_phi_mux_retval_0_phi_fu_473_p4_assign_proc : process(icmp_ln178_reg_1387, result_fu_1347_p2, retval_0_reg_469, ap_CS_fsm_state42)
    begin
        if (((icmp_ln178_reg_1387 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
            ap_phi_mux_retval_0_phi_fu_473_p4 <= result_fu_1347_p2;
        else 
            ap_phi_mux_retval_0_phi_fu_473_p4 <= retval_0_reg_469;
        end if; 
    end process;


    ap_phi_mux_s_0_2_30_phi_fu_365_p4_assign_proc : process(icmp_ln208_reg_1434, s_0_58_reg_1549, ap_CS_fsm_state20, s_0_2_30_reg_362)
    begin
        if (((icmp_ln208_reg_1434 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            ap_phi_mux_s_0_2_30_phi_fu_365_p4 <= s_0_58_reg_1549;
        else 
            ap_phi_mux_s_0_2_30_phi_fu_365_p4 <= s_0_2_30_reg_362;
        end if; 
    end process;


    ap_phi_mux_s_1_2_29_phi_fu_355_p4_assign_proc : process(icmp_ln208_reg_1434, s_1_55_reg_1554, ap_CS_fsm_state20, s_1_2_29_reg_352)
    begin
        if (((icmp_ln208_reg_1434 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            ap_phi_mux_s_1_2_29_phi_fu_355_p4 <= s_1_55_reg_1554;
        else 
            ap_phi_mux_s_1_2_29_phi_fu_355_p4 <= s_1_2_29_reg_352;
        end if; 
    end process;


    ap_phi_mux_s_2_2_28_phi_fu_345_p4_assign_proc : process(icmp_ln208_reg_1434, s_2_55_reg_1559, ap_CS_fsm_state20, s_2_2_28_reg_342)
    begin
        if (((icmp_ln208_reg_1434 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            ap_phi_mux_s_2_2_28_phi_fu_345_p4 <= s_2_55_reg_1559;
        else 
            ap_phi_mux_s_2_2_28_phi_fu_345_p4 <= s_2_2_28_reg_342;
        end if; 
    end process;


    ap_phi_mux_s_3_2_27_phi_fu_335_p4_assign_proc : process(icmp_ln208_reg_1434, s_3_57_reg_1564, ap_CS_fsm_state20, s_3_2_27_reg_332)
    begin
        if (((icmp_ln208_reg_1434 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            ap_phi_mux_s_3_2_27_phi_fu_335_p4 <= s_3_57_reg_1564;
        else 
            ap_phi_mux_s_3_2_27_phi_fu_335_p4 <= s_3_2_27_reg_332;
        end if; 
    end process;


    ap_phi_mux_s_4_2_26_phi_fu_326_p4_assign_proc : process(icmp_ln208_reg_1434, s_4_58_reg_1569, ap_CS_fsm_state20, s_4_2_26_reg_323)
    begin
        if (((icmp_ln208_reg_1434 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            ap_phi_mux_s_4_2_26_phi_fu_326_p4 <= s_4_58_reg_1569;
        else 
            ap_phi_mux_s_4_2_26_phi_fu_326_p4 <= s_4_2_26_reg_323;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_phi_mux_retval_0_phi_fu_473_p4, ap_CS_fsm_state42, ap_return_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            ap_return <= ap_phi_mux_retval_0_phi_fu_473_p4;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;


    c_address0_assign_proc : process(ap_CS_fsm_state22, ap_CS_fsm_state27, grp_LOADBYTES_3_fu_555_c_address0, grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_c_address0, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            c_address0 <= grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_c_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            c_address0 <= grp_LOADBYTES_3_fu_555_c_address0;
        else 
            c_address0 <= "XXXXXX";
        end if; 
    end process;


    c_ce0_assign_proc : process(ap_CS_fsm_state22, ap_CS_fsm_state27, grp_LOADBYTES_3_fu_555_c_ce0, grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_c_ce0, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            c_ce0 <= grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_c_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            c_ce0 <= grp_LOADBYTES_3_fu_555_c_ce0;
        else 
            c_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    empty_20_fu_718_p1 <= clen(61 - 1 downto 0);
    empty_fu_714_p1 <= adlen(61 - 1 downto 0);
    grp_LOADBYTES_1_fu_480_ap_start <= grp_LOADBYTES_1_fu_480_ap_start_reg;

    grp_LOADBYTES_1_fu_480_bytes_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_LOADBYTES_1_fu_480_bytes <= ap_const_lv4_8;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_LOADBYTES_1_fu_480_bytes <= ap_const_lv4_0;
        else 
            grp_LOADBYTES_1_fu_480_bytes <= "XXXX";
        end if; 
    end process;

    grp_LOADBYTES_1_fu_488_ap_start <= grp_LOADBYTES_1_fu_488_ap_start_reg;

    grp_LOADBYTES_1_fu_488_bytes_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_LOADBYTES_1_fu_488_bytes <= ap_const_lv4_8;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_LOADBYTES_1_fu_488_bytes <= ap_const_lv4_0;
        else 
            grp_LOADBYTES_1_fu_488_bytes <= "XXXX";
        end if; 
    end process;

    grp_LOADBYTES_2_fu_545_ap_start <= grp_LOADBYTES_2_fu_545_ap_start_reg;

    grp_LOADBYTES_2_fu_545_bytes_assign_proc : process(ap_CS_fsm_state12, trunc_ln210_1_reg_1519, ap_CS_fsm_state16, ad_addr_0_lcssa_idx_reg_266)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_LOADBYTES_2_fu_545_bytes <= ad_addr_0_lcssa_idx_reg_266;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_LOADBYTES_2_fu_545_bytes <= trunc_ln210_1_reg_1519;
        else 
            grp_LOADBYTES_2_fu_545_bytes <= "XXXXX";
        end if; 
    end process;


    grp_LOADBYTES_2_fu_545_n_assign_proc : process(ap_CS_fsm_state12, trunc_ln221_reg_1524, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_LOADBYTES_2_fu_545_n <= trunc_ln221_reg_1524;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_LOADBYTES_2_fu_545_n <= ap_const_lv32_8;
        else 
            grp_LOADBYTES_2_fu_545_n <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_LOADBYTES_3_fu_555_ap_start <= grp_LOADBYTES_3_fu_555_ap_start_reg;

    grp_LOADBYTES_3_fu_555_bytes_assign_proc : process(ap_CS_fsm_state22, ap_CS_fsm_state27, trunc_ln238_2_reg_1663, c_addr_0_lcssa_idx_reg_382)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_LOADBYTES_3_fu_555_bytes <= c_addr_0_lcssa_idx_reg_382;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            grp_LOADBYTES_3_fu_555_bytes <= trunc_ln238_2_reg_1663;
        else 
            grp_LOADBYTES_3_fu_555_bytes <= "XXXXXX";
        end if; 
    end process;


    grp_LOADBYTES_3_fu_555_n_assign_proc : process(ap_CS_fsm_state22, ap_CS_fsm_state27, trunc_ln249_2_reg_1678)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_LOADBYTES_3_fu_555_n <= trunc_ln249_2_reg_1678;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            grp_LOADBYTES_3_fu_555_n <= ap_const_lv32_8;
        else 
            grp_LOADBYTES_3_fu_555_n <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ROUND_fu_498_C_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state10, ap_CS_fsm_state23, icmp_ln28_fu_1146_p2, ap_CS_fsm_state30, ap_CS_fsm_state12, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state19, ap_CS_fsm_state36, ap_CS_fsm_state15, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_ROUND_fu_498_C <= ap_const_lv8_5A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_ROUND_fu_498_C <= ap_const_lv8_78;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln28_fu_1146_p2 = ap_const_lv1_1)))) then 
            grp_ROUND_fu_498_C <= ap_const_lv8_96;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            grp_ROUND_fu_498_C <= ap_const_lv8_4B;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_ROUND_fu_498_C <= ap_const_lv8_69;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            grp_ROUND_fu_498_C <= ap_const_lv8_87;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            grp_ROUND_fu_498_C <= ap_const_lv8_A5;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_ROUND_fu_498_C <= ap_const_lv8_C3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            grp_ROUND_fu_498_C <= ap_const_lv8_E1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_ROUND_fu_498_C <= ap_const_lv8_F0;
        else 
            grp_ROUND_fu_498_C <= "XXXXXXXX";
        end if; 
    end process;


    grp_ROUND_fu_498_s_0_read_assign_proc : process(reg_653, ap_CS_fsm_state4, ap_CS_fsm_state10, ap_CS_fsm_state23, icmp_ln28_fu_1146_p2, ap_CS_fsm_state30, ap_CS_fsm_state12, reg_684, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, reg_709, s_0_46_reg_1529, s_0_52_reg_1544, ap_CS_fsm_state19, ap_CS_fsm_state36, s_0_45_fu_921_p2, ap_CS_fsm_state15, ap_CS_fsm_state26, s_0_60_fu_1292_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            grp_ROUND_fu_498_s_0_read <= s_0_60_fu_1292_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln28_fu_1146_p2 = ap_const_lv1_1))) then 
            grp_ROUND_fu_498_s_0_read <= reg_709;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_ROUND_fu_498_s_0_read <= s_0_52_reg_1544;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_ROUND_fu_498_s_0_read <= s_0_46_reg_1529;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_ROUND_fu_498_s_0_read <= s_0_45_fu_921_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            grp_ROUND_fu_498_s_0_read <= reg_684;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            grp_ROUND_fu_498_s_0_read <= reg_653;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_ROUND_fu_498_s_0_read <= ap_const_lv64_80400C0600000000;
        else 
            grp_ROUND_fu_498_s_0_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ROUND_fu_498_s_1_read_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state10, ap_CS_fsm_state23, icmp_ln28_fu_1146_p2, ap_CS_fsm_state30, reg_660, ap_CS_fsm_state12, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, reg_689, K0_reg_1396, s_1_44_reg_1534, ap_CS_fsm_state19, ap_CS_fsm_state36, s_1_1_24_reg_314, ap_CS_fsm_state15, ap_CS_fsm_state26, s_1_57_fu_1299_p2, s_1_43_fu_180, s_1_56_fu_208)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            grp_ROUND_fu_498_s_1_read <= s_1_57_fu_1299_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln28_fu_1146_p2 = ap_const_lv1_1))) then 
            grp_ROUND_fu_498_s_1_read <= s_1_56_fu_208;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_ROUND_fu_498_s_1_read <= s_1_1_24_reg_314;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_ROUND_fu_498_s_1_read <= s_1_44_reg_1534;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_ROUND_fu_498_s_1_read <= s_1_43_fu_180;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            grp_ROUND_fu_498_s_1_read <= reg_689;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            grp_ROUND_fu_498_s_1_read <= reg_660;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_ROUND_fu_498_s_1_read <= K0_reg_1396;
        else 
            grp_ROUND_fu_498_s_1_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ROUND_fu_498_s_2_read_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state10, ap_CS_fsm_state23, icmp_ln28_fu_1146_p2, ap_CS_fsm_state30, reg_667, ap_CS_fsm_state12, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, reg_694, grp_LOADBYTES_1_fu_480_ap_return, s_2_44_reg_1539, ap_CS_fsm_state19, ap_CS_fsm_state36, s_2_1_23_reg_305, ap_CS_fsm_state15, ap_CS_fsm_state26, s_2_57_fu_1305_p2, s_2_43_fu_184, s_2_56_fu_212)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            grp_ROUND_fu_498_s_2_read <= s_2_57_fu_1305_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln28_fu_1146_p2 = ap_const_lv1_1))) then 
            grp_ROUND_fu_498_s_2_read <= s_2_56_fu_212;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_ROUND_fu_498_s_2_read <= s_2_1_23_reg_305;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_ROUND_fu_498_s_2_read <= s_2_44_reg_1539;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_ROUND_fu_498_s_2_read <= s_2_43_fu_184;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            grp_ROUND_fu_498_s_2_read <= reg_694;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            grp_ROUND_fu_498_s_2_read <= reg_667;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_ROUND_fu_498_s_2_read <= grp_LOADBYTES_1_fu_480_ap_return;
        else 
            grp_ROUND_fu_498_s_2_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ROUND_fu_498_s_3_read_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state10, ap_CS_fsm_state23, icmp_ln28_fu_1146_p2, ap_CS_fsm_state30, reg_674, ap_CS_fsm_state12, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, reg_699, N0_reg_1404, ap_CS_fsm_state19, ap_CS_fsm_state36, s_3_1_22_reg_296, s_3_4_33_reg_415, ap_CS_fsm_state15, ap_CS_fsm_state26, s_3_45_fu_188, s_3_58_fu_216)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            grp_ROUND_fu_498_s_3_read <= s_3_4_33_reg_415;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln28_fu_1146_p2 = ap_const_lv1_1))) then 
            grp_ROUND_fu_498_s_3_read <= s_3_58_fu_216;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_ROUND_fu_498_s_3_read <= s_3_1_22_reg_296;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_ROUND_fu_498_s_3_read <= s_3_45_fu_188;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            grp_ROUND_fu_498_s_3_read <= reg_699;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            grp_ROUND_fu_498_s_3_read <= reg_674;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_ROUND_fu_498_s_3_read <= N0_reg_1404;
        else 
            grp_ROUND_fu_498_s_3_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ROUND_fu_498_s_4_read_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state10, ap_CS_fsm_state23, icmp_ln28_fu_1146_p2, ap_CS_fsm_state30, ap_CS_fsm_state12, reg_679, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, reg_704, grp_LOADBYTES_1_fu_488_ap_return, ap_CS_fsm_state19, ap_CS_fsm_state36, s_4_1_21_reg_287, s_4_4_32_reg_405, ap_CS_fsm_state15, ap_CS_fsm_state26, s_4_46_fu_192, s_4_60_fu_220)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            grp_ROUND_fu_498_s_4_read <= s_4_4_32_reg_405;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln28_fu_1146_p2 = ap_const_lv1_1))) then 
            grp_ROUND_fu_498_s_4_read <= s_4_60_fu_220;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_ROUND_fu_498_s_4_read <= s_4_1_21_reg_287;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_ROUND_fu_498_s_4_read <= s_4_46_fu_192;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            grp_ROUND_fu_498_s_4_read <= reg_704;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            grp_ROUND_fu_498_s_4_read <= reg_679;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_ROUND_fu_498_s_4_read <= grp_LOADBYTES_1_fu_488_ap_return;
        else 
            grp_ROUND_fu_498_s_4_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_ROUND_fu_513_C_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_ROUND_fu_513_C <= ap_const_lv8_4B;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_ROUND_fu_513_C <= ap_const_lv8_69;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_ROUND_fu_513_C <= ap_const_lv8_87;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_ROUND_fu_513_C <= ap_const_lv8_5A;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            grp_ROUND_fu_513_C <= ap_const_lv8_78;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            grp_ROUND_fu_513_C <= ap_const_lv8_96;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_ROUND_fu_513_C <= ap_const_lv8_B4;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            grp_ROUND_fu_513_C <= ap_const_lv8_D2;
        else 
            grp_ROUND_fu_513_C <= "XXXXXXXX";
        end if; 
    end process;

    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_start <= grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_ap_start_reg;
    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_start <= grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_ap_start_reg;
    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_start <= grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_ap_start_reg;
    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_ap_start <= grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_ap_start_reg;
    grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_ap_start <= grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_33_1_fu_574_ap_start_reg;
    icmp_ln178_fu_732_p2 <= "1" when (tmp_2_fu_722_p4 = ap_const_lv60_0) else "0";
    icmp_ln208_fu_768_p2 <= "1" when (adlen = ap_const_lv64_0) else "0";
    icmp_ln210_1_fu_850_p2 <= "1" when (tmp_6_fu_840_p4 = ap_const_lv61_0) else "0";
    icmp_ln210_fu_782_p2 <= "1" when (tmp_4_fu_773_p4 = ap_const_lv61_0) else "0";
    icmp_ln238_1_fu_1067_p2 <= "1" when (tmp_8_fu_1057_p4 = ap_const_lv61_0) else "0";
    icmp_ln238_fu_999_p2 <= "1" when (tmp_7_fu_990_p4 = ap_const_lv61_0) else "0";
    icmp_ln28_1_fu_1131_p2 <= "1" when (signed(trunc_ln249_2_fu_1126_p1) > signed(ap_const_lv32_0)) else "0";
    icmp_ln28_fu_1146_p2 <= "1" when (i_reg_394 = ap_const_lv4_8) else "0";
    k_address0 <= grp_LOADBYTES_1_fu_480_k_address0;

    k_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, grp_LOADBYTES_1_fu_480_k_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            k_ce0 <= grp_LOADBYTES_1_fu_480_k_ce0;
        else 
            k_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln28_fu_1180_p2 <= std_logic_vector(shift_right(unsigned(xor_ln240_reg_1687),to_integer(unsigned('0' & zext_ln28_2_fu_1176_p1(31-1 downto 0)))));

    m_address0_assign_proc : process(ap_CS_fsm_state23, grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_m_address0, ap_CS_fsm_state28, zext_ln28_3_fu_1200_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            m_address0 <= zext_ln28_3_fu_1200_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            m_address0 <= grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_m_address0;
        else 
            m_address0 <= "XXXXX";
        end if; 
    end process;


    m_ce0_assign_proc : process(ap_CS_fsm_state23, grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_m_ce0, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            m_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            m_ce0 <= grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_m_ce0;
        else 
            m_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    m_d0_assign_proc : process(ap_CS_fsm_state23, grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_m_d0, ap_CS_fsm_state28, trunc_ln28_5_fu_1185_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            m_d0 <= trunc_ln28_5_fu_1185_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            m_d0 <= grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_m_d0;
        else 
            m_d0 <= "XXXXXXXX";
        end if; 
    end process;


    m_we0_assign_proc : process(ap_CS_fsm_state23, icmp_ln28_fu_1146_p2, grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_m_we0, ap_CS_fsm_state28)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln28_fu_1146_p2 = ap_const_lv1_0))) then 
            m_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            m_we0 <= grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_1_fu_565_m_we0;
        else 
            m_we0 <= ap_const_logic_0;
        end if; 
    end process;

    mlen <= std_logic_vector(unsigned(clen) + unsigned(ap_const_lv64_FFFFFFFFFFFFFFF0));

    mlen_ap_vld_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            mlen_ap_vld <= ap_const_logic_1;
        else 
            mlen_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    npub_address0 <= grp_LOADBYTES_1_fu_488_k_address0;

    npub_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, grp_LOADBYTES_1_fu_488_k_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            npub_ce0 <= grp_LOADBYTES_1_fu_488_k_ce0;
        else 
            npub_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln252_fu_1281_p2 <= (x_addr_0_lcssa_i_reg_459 or reg_709);
    result_fu_1347_p2 <= (tmp_9_fu_1339_p3 xor ap_const_lv1_1);
    s_0_45_fu_921_p2 <= (s_0_26_fu_176 xor grp_LOADBYTES_2_fu_545_ap_return);
    s_0_52_fu_978_p2 <= (xor_ln222_fu_972_p2 xor s_0_1_25_reg_278);
    s_0_60_fu_1292_p2 <= (shl_ln253_fu_1287_p2 xor or_ln252_fu_1281_p2);
    s_1_57_fu_1299_p2 <= (s_1_4_35_reg_437 xor K0_reg_1396);
    s_2_57_fu_1305_p2 <= (s_2_4_34_reg_426 xor K1_reg_1409);
    s_3_14_fu_758_p2 <= (grp_ROUND_fu_498_ap_return_3 xor K0_reg_1396);
    s_3_fu_1319_p2 <= (grp_ROUND_fu_498_ap_return_3 xor K0_reg_1396);
    s_4_13_fu_763_p2 <= (grp_ROUND_fu_498_ap_return_4 xor K1_reg_1409);
    s_4_59_fu_984_p2 <= (ap_phi_mux_s_4_2_26_phi_fu_326_p4 xor ap_const_lv64_1);
    s_4_73_fu_1325_p2 <= (grp_ROUND_fu_498_ap_return_4 xor K1_reg_1409);
    shl_ln1_fu_1162_p3 <= (trunc_ln28_4_fu_1158_p1 & ap_const_lv3_0);
    shl_ln222_fu_966_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv64_80),to_integer(unsigned('0' & sub_ln222_fu_960_p2(31-1 downto 0)))));
    shl_ln253_fu_1287_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv64_80),to_integer(unsigned('0' & sub_ln253_reg_1714(31-1 downto 0)))));
    shl_ln3_fu_1267_p3 <= (clen_addr_0_lcssa_reg_372 & ap_const_lv3_0);
    shl_ln_fu_952_p3 <= (adlen_addr_0_lcssa_reg_256 & ap_const_lv3_0);
    sub_ln222_fu_960_p2 <= std_logic_vector(unsigned(ap_const_lv64_38) - unsigned(shl_ln_fu_952_p3));
    sub_ln253_fu_1275_p2 <= std_logic_vector(unsigned(ap_const_lv64_38) - unsigned(shl_ln3_fu_1267_p3));
    sub_ln28_fu_1170_p2 <= std_logic_vector(signed(ap_const_lv6_38) - signed(shl_ln1_fu_1162_p3));

    t_address0_assign_proc : process(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_t_address0, grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_t_address0, grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_t_address0, ap_CS_fsm_state37, ap_CS_fsm_state39, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            t_address0 <= grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_t_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            t_address0 <= grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_t_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            t_address0 <= grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_t_address0;
        else 
            t_address0 <= "XXXX";
        end if; 
    end process;


    t_ce0_assign_proc : process(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_t_ce0, grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_t_ce0, grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_t_ce0, ap_CS_fsm_state37, ap_CS_fsm_state39, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            t_ce0 <= grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_282_12_fu_594_t_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            t_ce0 <= grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_t_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            t_ce0 <= grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_t_ce0;
        else 
            t_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    t_d0_assign_proc : process(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_t_d0, grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_t_d0, ap_CS_fsm_state37, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            t_d0 <= grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_t_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            t_d0 <= grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_t_d0;
        else 
            t_d0 <= "XXXXXXXX";
        end if; 
    end process;


    t_we0_assign_proc : process(grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_t_we0, grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_t_we0, ap_CS_fsm_state37, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            t_we0 <= grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_12_fu_588_t_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            t_we0 <= grp_crypto_aead_decrypt_1_Pipeline_VITIS_LOOP_28_11_fu_582_t_we0;
        else 
            t_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_2_fu_722_p4 <= clen(63 downto 4);
    tmp_3_fu_886_p4 <= adlen(4 downto 3);
    tmp_4_fu_773_p4 <= adlen(63 downto 3);
    tmp_5_fu_1087_p4 <= add_ln238_fu_1081_p2(5 downto 3);
    tmp_6_fu_840_p4 <= adlen_assign_fu_172(63 downto 3);
    tmp_7_fu_990_p4 <= add_ln181_reg_1416(63 downto 3);
    tmp_8_fu_1057_p4 <= clen_assign_1_fu_200(63 downto 3);
    tmp_9_fu_1339_p3 <= add_ln283_fu_1333_p2(8 downto 8);
    trunc_ln210_1_fu_859_p1 <= ad_assign_fu_168(5 - 1 downto 0);
    trunc_ln210_fu_904_p1 <= adlen(3 - 1 downto 0);
    trunc_ln221_fu_916_p1 <= ap_phi_mux_adlen_addr_0_lcssa_phi_fu_259_p4(32 - 1 downto 0);
    trunc_ln238_1_fu_1106_p1 <= clen(3 - 1 downto 0);
    trunc_ln238_2_fu_1073_p1 <= c_assign_fu_196(6 - 1 downto 0);
    trunc_ln238_3_fu_1190_p1 <= c_assign_fu_196(5 - 1 downto 0);
    trunc_ln238_fu_1078_p1 <= clen(6 - 1 downto 0);
    trunc_ln249_1_fu_1122_p1 <= ap_phi_mux_c_addr_0_lcssa_idx_phi_fu_386_p4(5 - 1 downto 0);
    trunc_ln249_2_fu_1126_p1 <= ap_phi_mux_clen_addr_0_lcssa_phi_fu_375_p4(32 - 1 downto 0);
    trunc_ln249_fu_1118_p1 <= ap_phi_mux_clen_addr_0_lcssa_phi_fu_375_p4(6 - 1 downto 0);
    trunc_ln28_4_fu_1158_p1 <= i_reg_394(3 - 1 downto 0);
    trunc_ln28_5_fu_1185_p1 <= lshr_ln28_fu_1180_p2(8 - 1 downto 0);
    trunc_ln28_fu_1258_p1 <= clen_addr_0_lcssa_reg_372(31 - 1 downto 0);
    xor_ln222_fu_972_p2 <= (shl_ln222_fu_966_p2 xor grp_LOADBYTES_2_fu_545_ap_return);
    xor_ln240_fu_1137_p2 <= (s_0_59_fu_204 xor grp_LOADBYTES_3_fu_555_ap_return);
    xor_ln250_fu_1251_p2 <= (x_assign_1_reg_448 xor grp_LOADBYTES_3_fu_555_ap_return);
    zext_ln28_2_fu_1176_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln28_fu_1170_p2),64));
    zext_ln28_3_fu_1200_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln28_fu_1194_p2),64));
    zext_ln28_fu_1142_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_394),5));
end behav;
